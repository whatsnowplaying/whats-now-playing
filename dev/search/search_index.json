{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to What's Now Playing","text":"<p>What's Now Playing is a tool written in Python to retrieve the current/last played song in MIXXX, JRiver Media Center, Serato, Traktor, Virtual DJ, and many other audio and DJ programs. It gives you full control to use or not use whatever features you like and fully customize the output to match your style. You can even pretend to be a fancy music channel:</p> <p></p> <p>Checkout the gallery to see more examples!</p> <p>To get started, begin with Quickstart.</p>"},{"location":"contact/","title":"Contact","text":""},{"location":"contact/#discord","title":"Discord","text":"<p>If you'd like to chat with people who use the software or get inspiration, there is now a Discord server available!</p>"},{"location":"contact/#github","title":"Github","text":"<p>The main repository page with has issues tracking for bug reports and feature requests is on Whats Now Playing Github</p>"},{"location":"contact/#twitch","title":"Twitch","text":"<p>You can always see what is under development in real time on Modern Meerkat's Stream .</p>"},{"location":"gallery/","title":"Gallery of Templates","text":"<p>What's Now Playing has quite a bit of flexibility in what kind of output you can generate to the point that there are nearly infinite possibilities. The text versions are meant to be used to feed other systems and are rather basic. E.g., the basic text template generates:</p> <p>Utah Saints - Something Good '08</p> <p>Picking that template, configuring a text source, configuring a scroll filter on that source, and then writing to it via OBS WebSocket allows one to do:</p> <p></p> <p>For the HTML templates, there are generally two varieties, one that uses WebSockets (start with ws-) and those that do not. WebSocket varieties are more likely to get updates closer in sync with the rest of your display. However, older software stacks may not support WebSockets.</p> <p>AAdditionally, the templates are typically named to have 'fade' or 'nofade'. 'Nofade' generally stay on the screen for the duration of the song. 'Fade' will appear for a while and then disappear, only to reappear when the song changes:</p> <p></p> <p>Here are some pictures of the bundled HTML template files being used with an OBS stream.</p> <ul> <li>cover-title-artist:</li> </ul> <p></p> <ul> <li>mtv:</li> </ul> <p></p> <ul> <li>mtv-cover:</li> </ul> <p></p> <p>The software writes output in UTF-8. That covers the vast majority of characters that one may hit. Be aware that OBS and other software may need to have their settings, such as fonts, changed to support non-ASCII characters!</p> <p></p> <p></p> <p></p>"},{"location":"quickstart/","title":"Quickstart","text":""},{"location":"quickstart/#platform-notes","title":"Platform Notes","text":""},{"location":"quickstart/#macos","title":"macOS","text":"<p>Due to security measures in macOS Sierra and later, unsigned apps may have limitations placed on them. These limitations will prevent them from operating correctly or even opening at all. Opening the app on High Sierra and newer versions of macOS by following the steps below. Versions before High Sierra have not been verified and are not currently supported.</p> <ul> <li>Do not unzip the downloaded zip package directly to the folder from where you will be   running it. Instead, unzip it in a location such as the <code>Downloads</code> folder and then move   the <code>NowPlaying.app</code> to your destination folder (e.g., \"Applications\"). Then run the app from the destination folder.</li> <li>If the app fails to open, try holding down the Control key and then double-clicking open.</li> <li>If after following the step above the app does not open, open Terminal   and type: <code>sudo xattr -r -d com.apple.quarantine /path/to/NowPlaying.app</code>   (replace with the correct path to the app).</li> </ul>"},{"location":"quickstart/#windows","title":"Windows","text":"<ul> <li>Microsoft has beefed up Windows security and you may now get prompted about an   unsigned binary. Click on 'More Info' and then 'Run Anyway' to launch What's Now Playing.</li> </ul>"},{"location":"quickstart/#linux","title":"Linux","text":"<p>Binaries are not provided because of dbus-python, so please follow the developer guide to install in a Python virtual environment. Note that currently, this software does not run headless.</p> <p>To use MPRIS2, you must have dbus-python installed in your Python virtual environment.</p>"},{"location":"quickstart/#other-platforms","title":"Other Platforms","text":"<p>Please follow the developer guide to install and run.</p>"},{"location":"quickstart/#installation","title":"Installation","text":"<p>Here are the steps to get a basic installation working:</p> <ol> <li> <p>Download the appropriate binary:</p> </li> <li> <p>Latest stable release -      Always points to the newest stable version</p> </li> <li>All releases -      Browse all versions including pre-releases</li> </ol> <p>Also of interest: Current bug list</p> <ol> <li>Launch the application</li> <li>The software will attempt to pre-configure itself for whatever software you have    installed. Note that in the case of Traktor, this work will including building an    index for file lookup. For large Traktor installations, that may take a while.</li> <li>It should bring up the Settings window</li> <li>(Re-)Configure a Source</li> <li>Save settings.</li> <li>Launch your DJ Software.</li> <li>Bring up OBS or SLOBS or your streaming software.</li> <li>Configure a Browser Source and point it at <code>http://localhost:8899/</code>.</li> <li>Bring up your DJ software again and play a song.</li> <li>The Browser Source should have a very simple track information box.</li> </ol> <p>At this point, you are ready to customize via Templates and enable other features!</p>"},{"location":"requests/","title":"User Track Requests","text":"<p>What's Now Playing has the ability to help manage requests that come from Twitch users.</p> <p>There are three types of requests, generic, twofers, and roulette:</p> <ul> <li>Generic requests are just that, user may request any track by   specifying the artist and title.</li> <li>Twofers are requests where the artist is the currently playing artist   and (optionally) a particular track may be selected.</li> <li>Roulette requests will pick a random song from the specified   playlist/crate as the request.</li> </ul> <p></p> <p>If What's Now Playing detects the song has been played, it will be removed from the Requests queue.</p>"},{"location":"requests/#using-twitch-chat-for-requests","title":"Using Twitch Chat for Requests","text":"<p>To enable Twitch chat to be used for requests:</p> <ol> <li>Configure and enable Twitch Chat support.</li> <li>Create a command that will be used for requests. There is an example     template file called 'twitchbot_request.txt' as an example.</li> <li>Assign that command to the appropriate entry in the Requests     settings in What's Now Playing. See later on below.</li> </ol> <p>For non-roulette requests, artist and title information should be entered on the chat line. For example:</p> <pre><code>```\nmodernmeerkat: !request Blur - \"Parklife\"\nmodernmeerkatbot: Thanks @modernmeerkat! Your special request of \"Parklife\" by Blur has been noted!\n```\n</code></pre>"},{"location":"requests/#supported-request-formats","title":"Supported Request Formats","text":"<p>The following formats are supported, either as a chat command or as the optional text in a Twitch Channel Point Redemption:</p> <ul> <li>artist - title</li> </ul> <p></p> <ul> <li>artist - \"title\"</li> </ul> <p></p> <ul> <li>\"title\" - artist</li> </ul> <p></p> <ul> <li>\"title\" by artist</li> </ul> <p></p> <ul> <li>\"title\"</li> </ul> <p></p> <p>Additionally, the following formats can be used to request a track for someone else:</p> <ul> <li>artist - \"title\" for @username</li> <li>\"title\" by artist for @username</li> </ul> <p>(Note that the username is not currently saved or processed in any way.)</p> <p>Unless Twofer is being redeemed, anything else will be considered an artist. For example:</p> <p></p> <p>For Twofers, anything else will be considered a track title since the artist will always be the currently playing artist. Twofers are not required to have additional input. In that case, the title will be blank.</p>"},{"location":"requests/#using-twitch-redemptions-for-requests","title":"Using Twitch Redemptions for Requests","text":"<p>To enable Twitch redemptions to be used for requests:</p> <ol> <li> <p>Configure and enable Twitch support with Client and Secret IDs.</p> </li> <li> <p>Create a a reward in the Twitch UI. Keep track of the    exact text used in the reward description.</p> </li> <li> <p>If the channel redemption is not a roulette request, then the reward    should take user input to provide the artist and title information.</p> </li> <li> <p>Copy the exact text into the 'Redemption Text' field in the     appropriate entry in the Requests settings in What's Now     Playing.</p> <p>NOTE: What's Now Playing does not manage the Twitch-side Reward Requests Queue. You will still need to approve or refund channel points in the Twitch moderator panel.</p> </li> </ol>"},{"location":"requests/#configuring-requests","title":"Configuring Requests","text":"<ol> <li>Under Settings, select Requests.</li> <li>Enable Requests support</li> <li>Enable one or both of Twitch Channel Redemption Requests and Twitch    Chat Requests depending upon your needs.</li> <li>Add Entry</li> <li>Change the Chat Command to the Twitch Chat command in order to    enable this Request via chat.</li> <li>Put in the exact Twitch reward text in the Redemption Text field to    enable this Request via channel points.</li> <li>Select the mode as appropriate. By default, Generic will be used.</li> <li>Fill in a displayname. This name will be shown to users when    referencing requests of this type.</li> <li>For roulette requests, enter in the playlist or crate name. See    below for more information.</li> </ol>"},{"location":"requests/#roulette-playlists","title":"Roulette Playlists","text":"<p>In order for Roulette requests to work, What's Now Playing needs to have a list of tracks to use. The name here should match the name that your DJ software also uses:</p> <p>Serato: The name of the crate or smart crate. Virtual DJ: playlist name Traktor: playlist name</p> <p>NOTE: See the section on your particular DJ software for known caveats/issues.</p> <p>If the random song picked is not desired (inappropriate, already played, etc), you may force the software to re-pick:</p> <ol> <li>Selecting the track in the Requests window.</li> <li>Click Respin</li> <li>Wait a few moments for the software to pick a new one. (It does not    do it immediately.)</li> <li>The track should get replaced with a different one.</li> <li>If it is still not desired, repeat this process as many times as    necessary.</li> </ol> <p>The software will keep track of which artists have been played during Roulette. It will try to avoid repeating the same artist in the same DJ session. If it runs out or cannot pick one a non-duplicate fast enough, it will still offer up a duplicate artist.</p> <p>NOTE: There is no notification to users that Respin has been selected.</p> <p>NOTE: For Traktor and Virtual DJ, Roulette requests require local files.</p>"},{"location":"upgrading/","title":"Upgrading","text":"<p>Be sure to check the changelog and the release notes for any breaking changes and news.</p> <p>[!TIP] New in 4.2+: Use the Configuration Backup feature in General Settings to export your settings before upgrading as a safety backup. Normal upgrades preserve your settings automatically, but having a backup helps if anything goes wrong during the upgrade process.</p>"},{"location":"upgrading/#configuration-recovery-42","title":"Configuration Recovery (4.2+)","text":"<p>If an upgrade fails or settings are lost, you can restore from a configuration backup:</p> <ol> <li>Export before upgrading (recommended):</li> <li>Open Settings \u2192 General \u2192 Export Configuration</li> <li>Save the JSON file to a secure location</li> <li>Import if needed (only if settings are lost):</li> <li>Open Settings \u2192 General \u2192 Import Configuration</li> <li>Select your exported JSON file</li> <li>Save and restart the application</li> </ol> <p>[!WARNING] Only import configurations when necessary. Normal upgrades preserve settings automatically. Configuration files contain sensitive data - store securely and delete when no longer needed.</p>"},{"location":"upgrading/#from-3xx","title":"From 3.x.x","text":"<ol> <li>Just install and the software will make the necessary changes.</li> </ol> <p>If you need to downgrade for any reason, you must downgrade to 3.1.2 or higher after upgrading to a 4.x.x release.</p>"},{"location":"upgrading/#from-2xx","title":"From 2.x.x","text":"<ol> <li>Install the last version of 3.x.x from the releases page.</li> <li>Upon launch, most settings will get copied over to their new homes    in the new Settings screen.</li> <li>Many templates have been added and updated. New templates will be    copied into the templates directory. For updated templates, there    are two outcomes:</li> <li>If there have been no changes to the same one in the template      directory, the updated template file will overwrite the existing      one.</li> <li>If there have been changes to the one in the template directory,      the updated one will be put in as <code>.new</code> and will likely require      you to take action. The existing one will be left there, however.      A pop-up on program launch will also inform you that the conflict      has happened.</li> </ol>"},{"location":"upgrading/#from-1xx","title":"From 1.x.x","text":"<p>Welcome aboard!</p> <p>Unfortunately, 1.x.x wasn't built in a way to make it possible to upgrade from one version to another. So none of your settings are preserved. You will need to treat it as though it is a fresh install.</p>"},{"location":"usage/","title":"Usage","text":"<p>Start the What's Now Playing app from the location where you placed it. The app is controlled and configured by accessing the menu from the icon in the Windows system tray or Mac menu bar after configuration.</p> <p>However, the first time you run the app, a Settings window will appear. Populate the fields accordingly, and press Save. Once saved, the app will start polling for new songs. The app can be controlled and exited from...</p> <p>the macOS menu bar icon:</p> <p></p> <p>or the Windows system task tray:</p> <p></p> <p>The menu bar:</p> <p></p> <p>includes the following options:</p> <ul> <li>Settings</li> <li>Reconfigure the application after going through the initial     configuration. See Settings for more     information.</li> <li>Oldest/Newest</li> <li>Toggle that determines which mixing mode is currently used. Not all     Sources support both modes. Be sure to check the documentation for     your particular Source.<ul> <li>Oldest mode will pick the oldest track from all decks. This   setting is for DJs who are using the non-playing deck or will be   manually controlling cross-fades.</li> <li>Newest mode will pick the newest track from all decks. This   setting is helpful for pre-built playlists or Serato's AutoDJ   capability.</li> </ul> </li> <li>Pause/Unpause</li> <li>Determines whether What's Now Playing is looking for data and     writing an updated title.</li> <li>Exit</li> <li>Stop and exit What's Now Playing</li> </ul>"},{"location":"extras/","title":"General Info About Artist Extras","text":"<p>IMPORTANT: Many settings in this section currently require a restart of the software in order to take effect.</p> <p>Need some extra content for audio-only DJing? The artist extras plug-ins allow for near real-time downloads of banners, logos, thumbnails, and fan art based upon the artists of the track that is currently playing.</p>"},{"location":"extras/#artwork-details","title":"Artwork Details","text":"Type WebSocket URL Raw Image URL WS Height WS Width General Quality Description Banners /artistbanner.htm /artistbanner.png 200px No Max High Image usually with picture and name of artist. Fan Art /artistfanart.htm 800px 1280px Varies Most sites curate these to be of higher quality but low quality images do get in Logos /artistlogo.htm /artistlogo.png 200px 480px High Stylized text or image that represents the artist Thumbnails /artistthumb.htm /artistthumb.png 480px 200px Varies Image of the artist <p>Image Resources</p> <p>Notes:</p> <ul> <li>Raw image URLs are not scaled and represent the original format as   downloaded.</li> <li>Enabling this feature may cause a slowdown during the Exit of the   app in order to save work in progress.</li> <li>Tracks with multiple artists will download both sets of images.   However, only one will be used for fanart, banners, and logos.</li> </ul>"},{"location":"extras/#biographies","title":"Biographies","text":"<p>Additionally, a biography of the artist may also be available. These biographies are also written by fans and may be brief or fairly detailed. The 'artistlongbio' value has the full content whereas the 'artistshortbio' has only the content that will fit in a single Twitch chat message.</p> <p>NOTE: The short bio will end in a complete sentence as determined by a natural language toolkit. One should be aware, however, that punctuation marks may occasionally trip it up so the last sentence may get truncated early.</p>"},{"location":"extras/#timing","title":"Timing","text":"<p>Most of the content is downloaded during the write delay time period as set in the general settings . You may need to bump up the delay to give enough time to not have 'empty' graphics. In general:</p> <ul> <li>Every time an artist is loaded as a track, the system will try to   download any new art that was either skipped or missed. So all limits   that are set are for that track's downloads. All previously downloaded   content will is saved locally for long periods of time. (They will   eventually be removed.)</li> <li>Banners, Logos, and Thumbnails are determined once per track from   whatever content has been downloaded just prior to announcement.</li> <li>Fanart will start to download next and will rotate during the entire   time that artist is being played.</li> <li>Switching to a different track from the same artist pick new banners,   logos, and thumbnails if they are available.</li> <li>Collaborations will attempt (but it is not guaranteed!) to pull extras   for both artists if the metadata of the track has more than one set of   artists listed. For example, a track labeled with both David Bowie and   Lou Reed should have both Bowie and Reed's images.</li> </ul> <p>At startup and every hour while running, the image cache will be verified so that image lookups remain fast. This operation is completely local and will cause no extra network traffic.</p>"},{"location":"extras/#generic-settings","title":"Generic Settings","text":"<p>Configuring this feature is more involved than many others due to the need to compensate for various hardware limitations such as CPU and network bandwidth vs the amount of time it takes for the content to be available. The default settings are thought to be fairly conservative and work with most configurations that have relatively good Internet connectivity with a Write Delay of 5 seconds.</p> <p>Maximums: the number of images to attempt to download at a given time out of the total set available. Banners, logos, and thumbnails are downloaded first, and then fan art will be downloaded. Any extra fan art will be downloaded. The maximums should be low enough that the first set downloads prior to the track being announced and the fanart finishes downloading prior to the next track being selected.</p> <p>Download processes: The number of background processes to run that do nothing but download art and update the backend storage. This number should be configured high enough to get all of the first pass of downloads done quickly but low enough that it doesn't overwhelm</p> <p>Image cache size in GB: The amount of space to use for images. In general, every 1GB will store approximately 1,000 mixed size images.</p> <p>The 'Clear Cache' button will remove all mappings between artists and images. It does not remove the cached responses from the web server in order to save bandwidth.</p>"},{"location":"extras/#reminder","title":"Reminder","text":"<p>In order to perform these look ups, certain data is required to be tagged in the media to make the results remotely accurate. More data == more better results. Therefore, media with ISRC tags will cause MusicBrainz lookups if that service is enabled to fill in any missing data.</p>"},{"location":"extras/#available-services","title":"Available Services","text":"<p>Configure specific artist extras services for images and biographies:</p> <ul> <li>Discogs - Discogs database integration for artist information and images</li> <li>TheAudioDB - Artist biographies and additional metadata</li> <li>FanArt.TV - High-quality artist images and artwork</li> </ul> <p>Click on any service above for detailed configuration instructions.</p>"},{"location":"extras/discogs/","title":"Discogs","text":"<p>Provides: Biographies, Fan art, Thumbnails, Websites</p> <p>Media tags required: album and artist</p> <p>Discogs is a well-known source for music release information, a marketplace, and more. Be aware of Discogs Terms of Use as linked to on their API Page. All you need to do is Get a personal access token. Discogs uses a pure text-search; results may be somewhat unreliable.</p>"},{"location":"extras/fanarttv/","title":"fanart.tv","text":"<p>Provides: Banners, Fan art, Logos, and Thumbnails</p> <p>Media tags required: MusicBrainz Artist ID</p> <p>fanart.tv is a community project to provide high quality artwork for music and other media. It requires music be tagged with MusicBrainz artist ids. You will need a Fanart API Key in order to use this service.</p>"},{"location":"extras/theaudiodb/","title":"TheAudioDB","text":"<p>Provides: Banners, Biographies, Fan art, Logos, Thumbnails, and Websites</p> <p>Media tags required: artist or MusicBrainz Artist ID</p> <p>TheAudioDB is a community project to provide high quality artwork and other metadata for music. If MusicBrainz artist ids are available, it will use that information to increase accuracy. You will need a TheAudioDB API Key in order to use this service.</p>"},{"location":"help/","title":"Help","text":"<p>Get help with What's Now Playing - from common questions to troubleshooting and development information.</p>"},{"location":"help/#help-sections","title":"Help Sections","text":"<ul> <li>How Do I? - Frequently asked questions and common tasks</li> <li>Accuracy - Improving track identification and metadata accuracy</li> <li>Troubleshooting - Common issues and solutions</li> <li>Bug Reports - How to report bugs and issues</li> <li>Open Source - Open source information and licensing</li> <li>Developers - Developer documentation and contribution guide</li> </ul> <p>Click on any help section above for detailed information.</p>"},{"location":"help/accuracy/","title":"Improving Accuracy","text":"<p>The general rule is: the more data in, the better data out. A few metadata tags go a very long way. In order of most important to least important:</p> <ol> <li>Musicbrainz Recording IDs</li> <li>International Standard Recording Codes aka ISRCs</li> <li>Album + Artist + Title</li> <li>Artist + Title</li> <li>Title</li> </ol> <p>Even after all of that, sometimes things that you think should be found aren't, such as cover art. Unlike a lot of software, What's Now Playing errs on the side of caution.</p> <p>For example of what I mean, let's take a real world example. While testing some of the audio recognition and metadata downloading capabilities, Pet Shop Boys - \"Vocal\" was used as an input with no modification the metadata (so, in other words, very much wrong and very much a mess). Virtual DJ reported the song came from the album Electric and provided the cover art for that album. What's Now Playing with AcoustID enabled reported that the song was actually \"Vocal (Radio Edit)\" and appears on the album Spex CD #110. Since (at least as of this writing) that album does not have cover art, no cover art was provided.</p> <p>Which one is correct? Neither and both. It really depends upon the individual DJ's goals. From a software perspective, they are both an answer to the cover art question. It also demonstrates how a bit of manipulation of the title can yield very different results.</p> <p>This example is also important when working with systems such as Deezer, Tidal, etc, or even WinMedia as (ultimately) the source of your music. In the listing above, we are almost always at #4 since many pieces of the software involved do not provide the album information. Since there is no other information, it can sometimes be a bit hit or miss.</p> <p>For white labels, mixes, etc, the software will try as much as it can to locate something but that isn't always successful. In most cases, artist information is usually available. For mixes that are more than one person (e.g., \"A vs B\"-types), the software will generally pick one.</p> <p>In general, the primary principal thus far has been: if the actual track can't be found, then supply artist-level data. If nothing about the artist can be found, then supply nothing extra.</p> <p>Note that when it comes to finding the actual track: the more precise the better. For example:</p> <ul> <li>The Farm's \"All Together Now\" vs. \"Altogether Now\"</li> <li>Prince \"Purple Rain\" vs. Prince and the Revolution \"Purple Rain\"</li> </ul> <p>Each of those give slightly different results.</p> <p>Improving the quality of the data is an ongoing project. If you see something that you think should work but doesn't, feel free to submit a bug report or visit discord</p>"},{"location":"help/bugreports/","title":"Bug Reports and Feature Requests","text":"<p>What's Now Playing is open source software . That means unlike commercial software individuals have the capability to contribute in a variety of ways. Currently this project is hosted on Github which provides access to the source code, bugs and feature requests (issues), and a discussion area where you can ask questions.</p>"},{"location":"help/developers/","title":"Developers","text":"<p>NOTE: For people familiar with Python, it is HIGHLY RECOMMENDED that you use and build with venv due to the restrictive requirements of the tested packages listing. While newer versions MAY work, there is no guarantee that PyInstaller and other utilities will build a proper executable.</p>"},{"location":"help/developers/#development-requirements","title":"Development Requirements","text":"<p>To locally build and install What's Now Playing, you will need the following:</p> <ol> <li>Python for your operating system (3.10 or 3.11 is required. 3.12 has    issues)</li> <li>Access to a development shell (e.g., /Applications/Utility/Terminal     on OS X)</li> <li><code>git</code> installed and working</li> </ol>"},{"location":"help/developers/#linux-pre-work","title":"Linux Pre-work","text":"<p>If you are on Linux, it is recommended that you install dbus-python at the system level first to get the basic OS requirements put in place first. For example, for Debian-style systems:</p> <pre><code>sudo apt-get install python-dbus\n</code></pre>"},{"location":"help/developers/#macos-pre-work","title":"macOS Pre-work","text":"<p>You will need a working, modern ICU library:</p> <ol> <li><code>brew install icu4c</code></li> <li><code>export PKG_CONFIG_PATH=/usr/homebrew/opt/icu4c/lib/pkgconfig</code></li> </ol>"},{"location":"help/developers/#commands","title":"Commands","text":"<pre><code>python -m venv (virtualenv directory)\nsource (virtualenv directory)/bin/activate\ngit clone https://github.com/whastnowplaying/whats-now-playing.git\ncd whats-now-playing\ngit checkout [version]\npip install \".[dev,docs,osspecials,test]\n</code></pre> <p>At this point, you should be able to run the software from the shell:</p> <pre><code>NowPlaying\n</code></pre>"},{"location":"help/developers/#build-executable","title":"Build Executable","text":"<p>To build a stand-alone executable, there is a helper script to do all the work:</p> <ul> <li>macOS</li> </ul> <pre><code>builder.sh macosx\n</code></pre> <ul> <li>Windows</li> </ul> <pre><code>builder.sh windows\n</code></pre> <ul> <li>Other</li> </ul> <pre><code>builder.sh\n</code></pre> <p>This bash script will:</p> <ol> <li>Create a venv</li> <li>Install the contents of the venv</li> <li>Run PyInstaller</li> </ol> <p>In the end you should have a zip file with your newly built binary.</p> <p>There should now be a <code>dist</code> directory and inside that directory will be either a <code>NowPlaying.app</code> on OS X or just a <code>NowPlaying</code> single file.</p>"},{"location":"help/howdoi/","title":"How Do I","text":""},{"location":"help/howdoi/#improve-results-cover-art-biography-etc","title":"Improve Results (cover art, biography, etc)","text":"<p>See the page on Accuracy</p>"},{"location":"help/howdoi/#change-the-twitch-command-from-track-to-song","title":"Change the Twitch command from <code>!track</code> to <code>!song</code>?","text":"<p>The Twitch commands are all read directly from files. So copying one file to another is an easy way to add commands:</p> <ol> <li>Copy the <code>Documents/NowPlaying/templates/twitchbot_track.txt</code>    file to <code>twitchbot_song.txt</code></li> <li>Restart What's Now Playing</li> <li>Go into Twitch Chat settings and set the permissions as required.</li> </ol>"},{"location":"help/howdoi/#change-the-time-twitch-announcements-happen","title":"Change the time Twitch announcements happen?","text":"<p>Under Settings -&gt; Twitch Chat there is an 'Announce Delay' field that takes number of seconds to wait before announcing to chat. To things to keep in mind:</p> <ol> <li>It takes partial seconds, so .5 would be half of a second.</li> <li>This delay is in addition to the write delay under General.    Therefore if Write Delay is 5 seconds and Twitch Chat Announce Delay    is 5 seconds, it should be approximately 10 seconds from the track    being switched out before the message goes out.</li> </ol>"},{"location":"help/howdoi/#put-artist-biographies-in-twitch-chat","title":"Put artist biographies in Twitch chat?","text":"<ol> <li>Enable Twitchbot</li> <li>Enable one of the Artist Extras that supports    biographies.</li> <li>If your track metadata only has artist and title, you may need to    Enable Recognition</li> <li>Edit your Twitch Chat announce template to include either    <code>{{ artistshortbio }}</code> or <code>{{ artistlongbio }}</code></li> <li>Restart What's Now Playing</li> </ol>"},{"location":"help/howdoi/#put-artist-graphics-on-my-obsslobsseliveetc","title":"Put artist graphics on my OBS/SLOBS/SE.Live/etc?","text":"<p>Configure a <code>Browser Source</code> for your scene and put in one of the Supported URLs that is listed on the Webserver page.</p>"},{"location":"help/howdoi/#stop-autoposting-the-track-info-in-twitch-chat","title":"Stop autoposting the track info in Twitch chat?","text":"<ol> <li>Under Settings -&gt; Twitch Chat, set the announce template to be empty.</li> <li>Save</li> </ol>"},{"location":"help/opensource/","title":"Open Source","text":"<p>Keep in mind this software is done by volunteers in their spare time! It is also open source, so if you see something that should be fixed, wrong, or even just general feedback, you are part of the community as soon as you participate. Every contribution, no matter how small you might think it is, helps everyone out. We appreciate you!</p>"},{"location":"help/troubleshooting/","title":"Troubleshooting","text":"<p>Software is made by imperfect humans and thus tends to reflect that reality. Here are some tips and tricks to help you out:</p> <ul> <li> <p>Experience has shown that starting the What's Now Playing app as   the first piece of software in your stack generally results in a   better experience. So, for example:</p> </li> <li> <p>What's Now Playing</p> </li> <li>Virtual DJ</li> <li>OBS</li> </ul> <p>By the time OBS is up, What's Now Playing and your DJ software   should have performed their housekeeping tasks.</p> <ul> <li> <p>Be sure to remember to shut down What's Now Playing between   sessions. Because it hangs out in the menu bar, it is easy to forget   it is running!</p> </li> <li> <p>Letting the app run when the computer goes to sleep   has shown to be problematic as well.</p> </li> <li> <p>Don't forget that there is delay from when your computer starts   playing a song and when it finally makes it on-stream. There are also   delays between different devices in how the receive content. For   example, Apple TV devices may be up to a minute after you streamed   your track!</p> </li> <li> <p>Kick and Twitch use different locations worldwide, so you may need   different delays per service.</p> </li> <li> <p>You do not need to be streaming to participate in your channel's   Twitch chat. This fact means that What's Now Playing can be   running and sending track information to Twitch but your users won't   be alerted. Extremely useful for working out the aforementioned timing   issues.</p> </li> <li> <p>Check the current Bug   List   to see if any known problems apply to your situation.</p> </li> </ul>"},{"location":"input/","title":"Input Sources","text":"<p>For What's Now Playing to work, it needs to know what software is playing music. In the UI, this setting is called the Source. There are many sources available. Each has its own screen to configure them.</p>"},{"location":"input/#available-input-sources","title":"Available Input Sources","text":"<ul> <li>Serato - Serato DJ software integration</li> <li>Traktor - Native Instruments Traktor DJ software</li> <li>Virtual DJ - Virtual DJ software integration</li> <li>DJ Uced - Hercules DJ Uced software</li> <li>JRiver - JRiver Media Center integration</li> <li>Icecast - Icecast streaming server metadata</li> <li>M3U - M3U playlist file monitoring</li> <li>MPRIS2 - Linux MPRIS2 media player interface</li> <li>Windows Media - Windows Media Player integration</li> </ul> <p>Click on any input source above to see detailed configuration instructions.</p>"},{"location":"input/djuced/","title":"DJUCED Support","text":"<p>** Experimental **</p> <p>DJUCED is DJ software built by Guillemot Corporation for their line of Hercules controllers.</p> <p>NOTE: This source does not support Oldest mix mode.</p> <p>NOTE: Only tested with DJUCED 6.0.1</p>"},{"location":"input/djuced/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Input Source from the left-hand column</li> <li>Select the DJUCED from the list of available input sources.</li> </ol> <ol> <li>Select DJUCED from the left-hand column.</li> <li>Enter or, using the button, select the directory where the DJUCED    files are located.</li> </ol> <ol> <li>Click Save</li> <li>In DJUCED, go into Settings -&gt; Record. Turn on Text File Output.</li> <li>Change the Format to be: <code>%TI% | %DE% | %AR% | %AL%</code></li> </ol> <ol> <li>The file name of the output file is expected to be the default     <code>playing.txt</code> and as well as stored in the DJUCED directory.</li> </ol>"},{"location":"input/icecast/","title":"Icecast","text":"<p>Icecast is a popular system to stream audio over the Internet. It is supported directly by software such as MIXXX and Traktor . Additionally, programs such as butt allow one to stream nearly any audio source.</p> <p>NOTE: This source does not support Oldest mix mode.</p> <p>NOTE: Support for Icecast is very experimental.</p>"},{"location":"input/icecast/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Input Source from the left-hand column</li> </ol> <ol> <li>Select Icecast from the list of available input sources.</li> <li>Select Icecast from the left-hand column.</li> </ol> <ol> <li>If necessary, change the port from 8000 to another port, such    as 5001. (Hint: port 8000 appears to be used on macOS.)</li> <li>Click Save</li> <li>If you changed the Icecast port, restart What's Now Playing</li> </ol>"},{"location":"input/icecast/#settings-for-mixxx","title":"Settings For MIXXX","text":"<p>NOTE: MIXXX allows for significant screen customization. These images come from the 'Late Night' setting. Your display may be different.</p> <ol> <li>Configure What's Now Playing as above</li> <li>In Preferences, go to Live Broadcasting</li> </ol> <p></p> <ol> <li>Under Server Connection:</li> <li>Set the address to 127.0.0.1 for the same machine, otherwise       change to the IP address of the machine that is running What's       Now Playing. (HINT: IP Address is visible on What's Now       Playing's Webserver setting page)</li> <li>Change the Port to match the port in What's Now Playing's       Iceast settings page.</li> <li>Under Encoding, change the format to be 32 kbps, Ogg Vorbis, Mono.</li> <li>Select 'OK' to exit Preferences</li> <li>Back on the main MIXXX screen, activate Icecast broadcasting:</li> </ol> <p></p> <ol> <li>Click the 'On-Air' option. It may appear as above or as an antenna.</li> <li>It should change to a solid color, usually green. On error (there is    usually a pop-up window), double check all settings in What's Now    Playing and MIXXX to make sure they match.</li> </ol>"},{"location":"input/icecast/#settings-for-butt","title":"Settings for butt","text":"<p>Under Audio, be sure that Ogg Vorbis is selected:</p> <p></p> <p>Under Stream, if using the 'Update song name from application', be sure to use 'Title - Artist' mode.</p> <p></p>"},{"location":"input/jriver/","title":"JRiver","text":"<p>JRiver Media Center is a commercial media player application that runs on Windows, Mac, and Linux. What's Now Playing connects to JRiver using the MCWS (Media Center Web Service) API to retrieve currently playing track information.</p> <p>The JRiver input source supports both local and remote connections to JRiver Media Center instances. For local connections, What's Now Playing can also retrieve the full file path of the currently playing track.</p> <p>NOTE: This source does not support Oldest mix mode.</p>"},{"location":"input/jriver/#requirements","title":"Requirements","text":"<ul> <li>JRiver Media Center (version 20 or later recommended)</li> <li>MCWS (Media Center Web Service) enabled in JRiver</li> <li>Network connectivity between What's Now Playing and JRiver (if   running on different machines)</li> </ul>"},{"location":"input/jriver/#setup-instructions","title":"Setup Instructions","text":""},{"location":"input/jriver/#jriver-configuration","title":"JRiver Configuration","text":"<ol> <li>Open JRiver Media Center</li> <li>Go to Tools \u2192 Options \u2192 Media Network</li> <li>Check Use Media Network to share this library</li> </ol> <ol> <li>Note the Access Key if one is displayed (optional but    recommended for security)</li> </ol> <ol> <li>Configure authentication if desired:</li> <li>Check Require authentication for requests</li> <li>Set a Username and Password</li> </ol> <ol> <li>Note the Port number under Advanced and in some of the previous    displays (default is 52199)</li> <li>Click OK to save settings</li> </ol>"},{"location":"input/jriver/#whats-now-playing-configuration","title":"What's Now Playing Configuration","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Input Source from the left-hand column</li> <li>Select JRiver from the list of available input sources</li> <li>Select JRiver from the left-hand column to configure settings</li> </ol>"},{"location":"input/jriver/#configuration-options","title":"Configuration Options","text":"<p>Host/IP Address The hostname or IP address of the machine running JRiver Media Center.</p> <ul> <li>Use <code>localhost</code> or <code>127.0.0.1</code> if JRiver is on the same machine</li> <li>Use the IP address (e.g., <code>192.168.1.100</code>) for remote connections</li> <li>IPv6 addresses are supported and will be automatically formatted   correctly</li> </ul> <p>Port The port number for MCWS connections (default: <code>52199</code>)</p> <p>Username (Optional) Username for authentication if required by JRiver</p> <p>Password (Optional) Password for authentication if required by JRiver</p> <p>Access Key (Optional) Access key for additional security validation if configured in JRiver</p>"},{"location":"input/jriver/#connection-types","title":"Connection Types","text":""},{"location":"input/jriver/#local-connections","title":"Local Connections","text":"<p>Local connections are automatically detected for:</p> <ul> <li><code>localhost</code>, <code>127.0.0.1</code>, <code>::1</code></li> <li>Private IP addresses (192.168.x.x, 10.x.x.x, 172.16.x.x)</li> <li>Local domain patterns (<code>.local</code>, <code>.lan</code>, <code>.home</code>, <code>.internal</code>)</li> </ul> <p>For local connections, What's Now Playing will attempt to retrieve the full file path of the currently playing track, which can be useful for other applications or logging.</p>"},{"location":"input/jriver/#remote-connections","title":"Remote Connections","text":"<p>Remote connections are used for all other hostnames and public IP addresses. File paths are not retrieved for remote connections for security reasons.</p>"},{"location":"input/jriver/#testing-your-connection","title":"Testing Your Connection","text":"<p>You can test your JRiver MCWS configuration by opening a web browser and visiting:</p> <p><code>http://[host]:[port]/MCWS/v1/Alive</code></p> <p>For example: <code>http://localhost:52199/MCWS/v1/Alive</code></p> <p>This should return an XML response showing your JRiver server information if the connection is working correctly.</p>"},{"location":"input/jriver/#troubleshooting","title":"Troubleshooting","text":""},{"location":"input/jriver/#connection-failed","title":"Connection Failed","text":"<ul> <li>Verify JRiver Media Center is running</li> <li>Check that Media Network is enabled in JRiver settings</li> <li>Ensure the correct host/IP address and port are configured</li> <li>For remote connections, verify network connectivity and firewall   settings</li> </ul>"},{"location":"input/jriver/#authentication-failed","title":"Authentication Failed","text":"<ul> <li>Verify username and password are correct (if authentication is   enabled)</li> <li>Check that the access key matches (if configured)</li> <li>Ensure authentication is properly enabled in JRiver if credentials are   provided</li> </ul>"},{"location":"input/jriver/#no-track-information","title":"No Track Information","text":"<ul> <li>Ensure music is currently playing in JRiver</li> <li>Check that JRiver is not paused</li> <li>Verify the MCWS API is responding by testing the connection URL in a   browser</li> </ul>"},{"location":"input/jriver/#file-path-not-available","title":"File Path Not Available","text":"<p>File paths are only available for local connections. Remote connections will not include file path information for security reasons.</p>"},{"location":"input/jriver/#supported-track-information","title":"Supported Track Information","text":"<p>The JRiver input source provides the following track metadata:</p> <ul> <li>Artist - Track artist name</li> <li>Album - Album name</li> <li>Title - Track title</li> <li>Duration - Track length in seconds</li> <li>Filename - Full file path (local connections only)</li> </ul> <p>Additional track metadata may be available depending on how the tracks are tagged in JRiver.</p>"},{"location":"input/m3u/","title":"M3U Support","text":"<p>M3U is a somewhat standardized file format that many different applications write. In particular, Virtual DJ uses this file format for its history.</p> <p>NOTE: This source does not support Oldest mix mode.</p>"},{"location":"input/m3u/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Input Source from the left-hand column</li> </ol> <ol> <li>Select the M3U from the list of available input sources.</li> <li>Select M3U from the left-hand column.</li> <li>Enter or, using the button, select the directory where your m3u    files will appear. For Virtual DJ, this location should be your    Documents/Virtual DJ/History directory.</li> </ol> <ol> <li>Click Save</li> </ol> <p>What's Now Playing will read that directory, reading the most current m3u file for the currently playing track information.</p>"},{"location":"input/mpris2/","title":"MPRIS2","text":"<p>MPRIS2 is a specification for Linux DBus compatible music software to communicate with each other. What's Now Playing supports reading track data from MPRIS2 sources, including VLC.</p> <p>NOTE: This source does not support Oldest mix mode.</p>"},{"location":"input/mpris2/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Input Source from the left-hand column</li> </ol> <ol> <li>Select the MPRIS2 from the list of available input sources.</li> <li>Select MPRIS2 from the left-hand column.</li> <li>Select from the detected MPRIS2 sources. Closing and re-opening the    Settings UI will update the list.</li> </ol> <ol> <li>Click Save</li> </ol>"},{"location":"input/serato/","title":"Serato","text":"<p>NOTE: Serato DJ Pro and Serato DJ Lite are both supported.</p> <p>Serato is a commercial software package that runs on Mac OS X and Windows. What's Now Playing has two modes with which it may use Serato as an input: Local and Remote.</p> <p>In Local mode, What's Now Playing will read the local session data on your computer directly. This mode has much more data available to use but requires What's Now Playing to run on the DJ computer.</p> <p>In Remote mode, What's Now Playing will read Serato Live Playlists over the Internet. This mode allows for What's Now Playing to run on a different computer than the DJ computer, but does not have as much data available.</p>"},{"location":"input/serato/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Input Source from the left-hand column</li> </ol> <ol> <li>Select the Serato from the list of available input sources.</li> <li>Select Serato from the left-hand column.</li> <li>Configure either Local or Remote mode as appropriate (see below)</li> <li>Click Save</li> </ol>"},{"location":"input/serato/#local-mode","title":"Local Mode","text":"<p>When Local Mode is active, the What's Now Playing app runs on the same machine as Serato. Configure the Serato Library Path to Serato's directory, usually <code>Music/_Serato_</code>. This method is the recommended installation as much more information is available and significantly improves What's Now Playing's correctness.</p> <p>Ignore Deck(s) allows for tracks on these deck(s) to be ignored.</p>"},{"location":"input/serato/#remote-mode","title":"Remote Mode","text":"<p>Remote mode is useful when the streaming computer is not the same as the Serato DJ computer by utilizing Serato Live Playlists. It should be only used when What's Now Playing's web server mode also cannot be used.</p> <p>NOTE: This mode does not support Oldest mix mode.</p> <ol> <li>In Serato, make sure you enable Live Playlists and start a new session.    From the Serato website:</li> </ol> <p>\"To enable the Live Playlists feature, go to the Expansion Pack tab on the Setup screen and check the Enable Live Playlists option. Once enabled, the Start Live Playlist button is now displayed in the History panel. Click this to start and stop your Live Playlist session.\"</p> <ol> <li> <p>Once a new playlist session is started, Serato will automatically open    your web browser to your Live Playlist. IMPORTANT: You will need to    select \"Edit Details\" on the Live Playlist webpage and change your    playlist to \"Public\", or else the What's Now Playing app will not be    able to retrieve any song data. The webpage does not need to remain    open. So you can close it once you ensure that the playlist has been    made public.</p> </li> <li> <p>Start the What's Now Playing app. The app can be controlled and    configured by accessing the menu from the icon in the Windows system    tray or Mac menu bar.</p> </li> </ol> <p>Be aware that as of this writing (2021-03-05), the only information available via Live Playlists is the artist and the title due to limitations in Serato's offering.</p>"},{"location":"input/traktor/","title":"Traktor","text":"<p>NOTE: This source does not support Oldest mix mode.</p> <p>The Traktor input source is a specialized version of the icecast source that also provides access to playlists for Request support .</p> <p></p> <ol> <li>Locate the 'collections.nml' from your Traktor installation    directory.</li> <li>Click Re-read to rebuild What's Now Playing's copy of Traktor's    database so that more metadata is available. For extremely large    Traktor databases, this update may take a while. This extra data is    required for roulette Requests.</li> <li>After adding more songs to Traktor, click Re-read again to update    What's Now Playing data.</li> <li>In Traktor's Preferences, go to Broadcasting</li> </ol> <p></p> <ol> <li>Under Server Settings:</li> <li>Set the address to 127.0.0.1 for the same machine, otherwise       change to the IP address of the machine that is running What's       Now Playing. (HINT: IP Address is visible on What's Now       Playing's Webserver setting page)</li> <li>Change the Port to match the port in What's Now Playing's       Iceast settings page.</li> <li>Change the format to be Ogg Vorbis, 11025 Hz, 32 kBit/s</li> <li>Close Preferences</li> <li>Back on the main Traktor screen, to activate Icecast broadcasting:</li> </ol> <p></p> <ol> <li>Click on the reel on the right-hand side (labeled 1 above)</li> <li>Click on the antenna near the middle (labeled 2 above)</li> <li>The antenna should change to a solid color. If it flashes, then    double check all settings in What's Now Playing and Traktor to    make sure they match.</li> </ol>"},{"location":"input/virtualdj/","title":"Virtual DJ","text":"<p>NOTE: This source does not support Oldest mix mode.</p> <p>The Virtual DJ input source is a specialized version of the M3U source that also provides access to playlists for Request support .</p> <p></p> <p>On install, the Virtual DJ directories should be set correctly for most computers. If they are not set correct, use the 'Select Dir' buttons to point to the correct ones.</p> <p>If the History does not exist, then you may need to change the time on Virtual DJ's history output as well as actually play a track on a deck long enough for the history file to be created.</p> <p>Click the Re-read Playlists button to cause What's Now Playing to re-read Virtual DJ's playlists for roulette-style requests. Be aware that playlist files are only updated when Virtual DJ is closed.</p> <p>The <code>Use Remix Field</code> option will attempt to ignore the Remix entry that Virtual DJ puts inside the history file. However, if the media file has the remix data in the track title, that will still be read. For example, if an MP3 file has ID3 tag data that has \"Purple Rain (Are You Depressed Yet Remix)\" the full title will be used.</p>"},{"location":"input/virtualdj/#changing-metadata","title":"Changing Metadata","text":"<p>Be aware that sometimes Virtual DJ will write to the history file in such a way that What's Now Playing may appear to go a bit crazy. In general, this situation appears to happen when changing the tag data in Virtual DJ while What's Now Playing is running. In order to prevent that from happening, it is recommended:</p> <ol> <li>Play a track</li> <li>Pause What's Now Playing from the menu so that it will ignore    history changes.</li> <li>Make your change</li> <li>Play the next track</li> <li>Unpause What's Now Playing</li> </ol>"},{"location":"input/winmedia/","title":"WinMedia","text":"<p>On Microsoft Windows, various programs will publish to the system what media is playing. The <code>WinMedia</code> option will read that data as the Source. There are no extra options, other than to select it.</p> <p>This input should be used for Amazon Music, Spotify, Windows Media Player, and similar applications that support Microsoft's Window Media APIs.</p>"},{"location":"output/","title":"Output Destinations","text":"<p>What's Now Playing can send song details to a variety of different systems, including just plain file output.</p>"},{"location":"output/#available-output-destinations","title":"Available Output Destinations","text":"<ul> <li>OBS WebSocket - Direct integration with OBS Studio</li> <li>Web Server - Built-in web server for browser sources</li> <li>Text Output - Simple text file output</li> <li>Twitch Bot - Twitch chat bot integration</li> <li>Kick Bot - Kick streaming platform bot</li> <li>Discord - Discord rich presence integration</li> </ul> <p>Click on any output destination above to see detailed configuration instructions.</p>"},{"location":"output/discord/","title":"Discord","text":"<p>What's Now Playing's support of Discord is very preliminary at the moment. It supports two modes of operation, both of which may be done simultaneously:</p> <p>Bot Mode: Using a token, update the presence of a bot account that includes a link to your stream if Twitch is also configured.</p> <p>Client Mode: If the Discord app is running and a Client ID is provided, update the Discord user's status to the playing song.</p>"},{"location":"output/discord/#configuration","title":"Configuration","text":""},{"location":"output/discord/#generic-settings","title":"Generic Settings","text":"<ol> <li>In order to even start with Discord mode, it must be enabled</li> <li>The template selected here is what will be used to fill in the    status text.</li> </ol>"},{"location":"output/discord/#client-mode","title":"Client Mode","text":"<ol> <li>If the Discord app is not running, start it first.</li> <li>Go to your Discord Developers page</li> <li>Create an application</li> <li>After naming, take the Client ID and put into What's Now Playing's Discord page.</li> <li>Restart What's Now Playing. Subsequent launches will connect to Discord as long as the Discord app is already running.</li> </ol>"},{"location":"output/discord/#bot-mode","title":"Bot Mode","text":"<ol> <li>Go to your Discord Developers page</li> <li>Create an application</li> <li>Build-a-bot</li> <li>Make a note of the token from the bot page</li> <li>Invite your bot to your Discord channel</li> <li>Put that token into the Discord settings</li> <li>Restart What's Now Playing. Subsequent launches will connect to    Discord as long as the Discord app is already running.</li> </ol>"},{"location":"output/kickbot/","title":"KickBot","text":"<p>What's Now Playing integrates with Kick.com to provide chat bot functionality with track announcements.</p>"},{"location":"output/kickbot/#kick-chat-support","title":"Kick Chat Support","text":"<p>The current Kick integration supports:</p> <ul> <li>Track Announcements: Automatic announcements when tracks change</li> <li>Template-based Messages: Rich formatting with metadata variables</li> <li>Smart Message Splitting: Intelligent splitting of long messages</li> </ul> <p>Coming Soon:</p> <ul> <li>Interactive chat commands and user input processing.</li> <li>Point Redemptions</li> </ul>"},{"location":"output/kickbot/#authentication","title":"Authentication","text":"<p>To use Kick.com integration, you'll need to set up OAuth2 authentication with your Kick account.</p> <p></p> <ol> <li>Go to your Kick streamer settings and navigate to the Developer    tab to create an application.</li> <li>Create a new OAuth2 application with these important settings:</li> <li>Application Type: Set to Bot (required for chat      functionality)</li> <li>Application Name: This will be the name displayed in chat when      the bot sends messages</li> <li>Note down your Client ID and Client Secret</li> <li>Set Redirect URI to <code>http://localhost:8899/kickredirect</code> (port      must match your webserver settings, default is 8899)</li> </ol> <p></p> <ol> <li>Click on the Edit button to make a few more changes</li> <li>Scopes Requested should include the following for current and future    features:</li> <li>Read user information (including email address) - <code>user:read</code></li> <li>Write to chat feed - <code>chat:write</code></li> <li>Subscribe to events (read chat feed, follows, subscribes, gifts) -      events:subscribe`</li> <li>You should also make sure to select the option to make it a bot    account.</li> </ol> <p></p> <ol> <li>In What's Now Playing settings:<ul> <li>Enter your Client ID and Client Secret</li> <li>Set your Kick channel name</li> <li>Click \"Authenticate with Kick\" to complete OAuth2 setup</li> </ul> </li> </ol>"},{"location":"output/kickbot/#template-features","title":"Template Features","text":"<p>Kick templates support powerful formatting features:</p> <ul> <li>Template Variables: All standard metadata variables   (<code>{{ artist }}</code>, <code>{{ title }}</code>, etc.)</li> <li>Message Splitting: Use <code>{{ startnewmessage }}</code> to split long   announcements across multiple messages</li> <li>Smart Splitting: Messages longer than 500 characters are   automatically split at sentence or word boundaries using NLTK</li> </ul> <p>Example announcement template:</p> <pre><code>{% if artist %}{{ artist }} - {% endif %}\"{{ title }}\"\n{% if album %} from {{ album }}{% endif %}\n{{ startnewmessage }}\n{% if artistshortbio %}{{ artistshortbio }}{% endif %}\n</code></pre>"},{"location":"output/kickbot/#configuration","title":"Configuration","text":"<ol> <li>Enable Kick chat in the Kick settings tab</li> <li>Configure your OAuth2 credentials</li> <li>Set up your announcement template</li> <li>Configure announcement delay if needed</li> <li>Test the connection with the \"Authenticate with Kick\" button</li> </ol>"},{"location":"output/kickbot/#current-limitations","title":"Current Limitations","text":"<ul> <li>Chat Commands: Interactive commands are not yet implemented   (coming soon)</li> <li>Permissions: User permission system will be added with command   support</li> </ul> <p>The Kick integration uses the same intelligent message splitting technology as the enhanced Twitch integration, ensuring that long messages with rich metadata are delivered in full while respecting platform limits.</p>"},{"location":"output/obswebsocket/","title":"OBS WebSocket Plug-in","text":"<p>What's Now Playing can use the OBS WebSocket v5 protocol to send results directly to OBS Studio. OBS WebSocket v5 protocol was added as a standard feature in OBS Studio v28. It will not work with older versions.</p> <p>NOTE: The vast majority of OBS users use the Webserver output to take advantage of cover art and more. This version only provides text and only to an OBS Text source.</p>"},{"location":"output/obswebsocket/#installation","title":"Installation","text":"<ol> <li>Configure the OBS WebSocket settings in OBS Studio    (Tools-&gt;obs-websocket Settings)</li> <li>Configure OBS to have a Text source, keeping track of the name of    the source name.</li> <li>Open Settings from the What's Now Playing icon</li> <li>Select OBS WebSocket from the list of available input sources.</li> </ol> <ol> <li>Check Enable</li> <li>Set the Source Name to be the same as your Source in OBS Studio.</li> <li>In OBS Studio, under Tools-&gt;obs-websocket Settings, select Show Connect Info</li> <li>In What's Now Playing, set the OBS Host, OBS Port, and OBS    Secret. If the machine running OBS and running What's Now    Playing are the same host, set OBS Host to be 'localhost'</li> <li>Browse and select the template file that you would like to use as    output.</li> <li>Click Save</li> </ol>"},{"location":"output/textoutput/","title":"Text Output","text":"<p>A simple output method that just writes a template to a file and writes the entire setlist on exit.</p> <ul> <li>Text Template - The Jinja2   template file   that will be used when the song updates. See   Templates for more information.</li> <li>File to write - Name of the file where the app will write the   track information. You can either pick a pre-existing file or the name   of a new file.</li> <li>Clear file on startup - Empty the file when What's Now Playing   is launched.</li> <li>Append new track - Keep adding new tracks to the file rather than   replace the content.</li> <li>Enable setlists - Setting this option will create a file in the   NowPlaying/setlists directory when What's Now Playing is shutdown   of all of the tracks that were played as GitHub-flavored markdown   table.</li> </ul>"},{"location":"output/twitchbot/","title":"TwitchBot","text":"<p>What's Now Playing integrates with Twitch with channel point redemptions and chat. They may be run independently or run both at the same time.</p>"},{"location":"output/twitchbot/#twitch-chat-support","title":"Twitch Chat Support","text":"<p>The chat bot support includes track announcement as well as interactive features.</p> <p>For example, in chat, if the user types:</p> <pre><code>!track\n</code></pre> <p>What's Now Playing will read a file called <code>twitchbot_track.txt</code> and expand any template values in it. The Twitchbot settings section sets permissions for commands.</p> <p>Additionally, the Twitchbot can send an announcement template to chat when What's Now Playing detects a song change or when a track Request has been fulfilled.</p>"},{"location":"output/twitchbot/#twitch-channel-point-redemptions","title":"Twitch Channel Point Redemptions","text":"<p>Currently, channel point redemptions allow for users to request songs, either by artist/title or picking a random song in a 'roulette' mode when that redemption is tied to a supported DJ's software crate/playlist. For more information see Requests.</p>"},{"location":"output/twitchbot/#authentication","title":"Authentication","text":"<p>What's Now Playing uses OAuth2 authentication for secure integration with Twitch.  For redemptions, you will need to authenticate against your own account.  For the chat bot, you can either use your account or create and use another account.</p>"},{"location":"output/twitchbot/#setup-process","title":"Setup Process","text":"<ol> <li> <p>Create Bot Account (Optional but recommended)</p> </li> <li> <p>Follow the Twitch process for creating a new account.</p> </li> <li> <p>On the new account, be sure to enable:</p> <ul> <li>Multiple logins per email</li> <li>Two-factor authentication (2FA)</li> </ul> </li> </ol> <p></p> <ol> <li> <p>Register Application on Twitch</p> </li> <li> <p>Go to Twitch Developer Console</p> </li> <li>Click Login in the upper right</li> <li>Click on \"Your Console\" in the upper right</li> <li>Click on \"Applications\"</li> <li>Click on \"Register Your Application\"</li> <li>Name: Choose a descriptive name (e.g., \"YourChannel Now Playing Bot\")</li> <li>OAuth Redirect URLs: Enter both redirect URIs as shown in What's Now Playing's Twitch settings:<ul> <li><code>http://localhost:8899/twitchredirect</code></li> <li><code>http://localhost:8899/twitchchatredirect</code></li> </ul> </li> <li>Category: Chat Bot</li> <li>Click \"Create\"</li> <li>Click on \"Manage\" and save a copy of the Client ID</li> <li> <p>Click on \"New Secret\" and save a copy of the Client Secret</p> </li> <li> <p>Configure What's Now Playing</p> </li> <li> <p>Open Settings from the What's Now Playing icon</p> </li> <li>Select \"Twitch\" from the list of settings available</li> <li> <p>Fill in the required information:</p> <ul> <li>Channel: Your Twitch channel name (where you want to monitor/send messages)</li> <li>Client ID: From your Twitch application</li> <li>Client Secret: From your Twitch application</li> <li>Redirect URI: Will be automatically populated based on your webserver port</li> </ul> </li> <li> <p>Click \"Save\" to store the configuration</p> </li> <li>Click \"Authenticate with Twitch\" to complete OAuth2 setup</li> <li>A browser will open - log in and authorize the application</li> <li>You should see \"Authentication Successful\" when complete</li> </ol>"},{"location":"output/twitchbot/#oauth2-vs-legacy-authentication","title":"OAuth2 vs Legacy Authentication","text":"<p>What's Now Playing now uses modern OAuth2 authentication instead of manual token generation. This provides:</p> <ul> <li>Enhanced Security: No need to manually copy/paste tokens</li> <li>Automatic Token Refresh: Tokens are refreshed automatically when they expire</li> <li>Streamlined Setup: One-click authentication through your browser</li> <li>PKCE Security: Uses Proof Key for Code Exchange for additional protection</li> </ul> <p>Note</p> <p>Legacy Bot Token authentication is still supported for backward compatibility, but OAuth2 is recommended for new setups.</p> <p></p>"},{"location":"output/twitchbot/#additional-setup-considerations","title":"Additional Setup Considerations","text":"<ul> <li> <p>Bot Moderator Status: Consider making your bot account a moderator on your channel to avoid rate limits,   URL filters, and other restrictions.</p> </li> <li> <p>Browser Authentication: When you click \"Authenticate with Twitch\", a browser will open asking for permission.   Make sure you're logged into the correct Twitch account:</p> </li> <li> <p>For channel point redemptions: Log in as your main streaming account (the channel owner)</p> </li> <li> <p>For chat functionality: Log in as your bot account (if using a separate bot account)</p> </li> <li> <p>Required Permissions: Accept the requested permissions (<code>chat:read</code> and <code>chat:edit</code>) to allow the bot to   monitor and send messages.</p> </li> </ul>"},{"location":"output/twitchbot/#legacy-token-authentication","title":"Legacy Token Authentication","text":"<p>For users who prefer manual token management or have existing setups, the legacy \"Bot Token\" field is still supported. However, OAuth2 authentication is recommended for new installations as it provides better security and automatic token management.</p>"},{"location":"output/twitchbot/#twitch-chat-configuration","title":"Twitch Chat Configuration","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Twitch Chat from the list of settings available.</li> </ol> <ol> <li>Check Enable</li> <li>To have the bot announce new tracks in chat, select the template.</li> </ol> <p>By default, the bot will respond to user commands in the form of Twitch Replies. If you would prefer the bot just post a message, uncheck the Replies option.</p> <p>You are now ready to set permissions on user interactive commands.</p>"},{"location":"output/twitchbot/#setting-permissions","title":"Setting Permissions","text":"<p>Upon launch, What's Now Playing will create an entry for every <code>twitchbot_*.txt</code> file in the template directory. These entries will all be set to completely disabled. In order to enable them, you will need to check the appropriate field.</p> <p>Twitchbot template files added while What's Now Playing is running will let anyone use them until the next run. At the next run, it will again change them back to no permissions granted.</p> <p>Once the permissions are set and Save is clicked, those permissions will be preserved on every restart.</p>"},{"location":"output/twitchbot/#adding-new-commands","title":"Adding New Commands","text":"<p>Create a new file in What's Now Playing's<code>templates</code> directory (<code>Documents/Now Playing/template</code>) called <code>twitchbot_yourcommand.txt</code> where <code>yourcommand</code> is the actual command that will be executed by users that have the appropriate template code inside it. Note that all text will be smashed together as a single line when sent to Twitch, so be mindful of where to put spaces.</p>"},{"location":"output/twitchbot/#built-in-commands","title":"Built-in Commands","text":"<p>Post-v3.0.2, the Twitchbot will always respond to the command 'whatsnowplayingversion' . It will report the version that is running.</p>"},{"location":"output/twitchbot/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>To test if the chat bot is working, you should be able to use the   '!whatsnowplayingversion' command. What's Now Playing only needs   to be running. You do not have to be live streaming to test chat.</p> </li> <li> <p>If the bot never connects, try getting a new OAuth token.</p> </li> <li> <p>Be aware that the bot may have trouble connecting if you restart   What's Now Playing too quickly. It should eventually rejoin, but   it may take several minutes.</p> </li> </ul>"},{"location":"output/twitchbot/#additional-variables","title":"Additional Variables","text":"<p>The TwitchBot adds the following additional values for templating purposes:</p> Variable Description cmduser Person, bot, etc that typed the command cmdtarget[x] The x'th target on the command, starting with 0. For example, if the command was <code>!so modernmeerkat</code>, then <code>{% raw %}{{ cmdtarget[0] }}{% endraw %}</code> will have <code>modernmeerkat</code> in it. See below for an example. startnewmessage Split the text at this location and start a new message to send to chat. <p>Token Selection</p> <p>The system automatically uses the most appropriate token for sending messages. If you have both broadcaster and chat bot tokens authenticated, chat messages will be sent from the bot account for cleaner presentation.</p>"},{"location":"output/twitchbot/#multiple-targets","title":"Multiple Targets","text":"<p>One of the more advanced capabilities that the TwitchBot supports is a variable number of targets. This feature allows for your users to use one command to perform actions on, for example, multiple users.</p> <p>A simple example. Given this template file:</p> <pre><code>@{{ cmduser }} hugs @{{ cmdtarget[0] }}\n</code></pre> <p>a user typing:</p> <pre><code>modernmeerkat: !hug twitch\n</code></pre> <p>Would result in:</p> <pre><code>bot: @modernmeerkat hugs @twitch\n</code></pre> <p>But this can be expanded to do multiple users at once:</p> <pre><code>@{{ cmduser }} sends hugs to {% for people in cmdtarget %}@{{ people }} {% endfor %}\n</code></pre> <p>such that:</p> <pre><code>modernmeerkat: !hug person1 person2 person3\n</code></pre> <p>results in:</p> <pre><code>bot: @modernmeerkat sends hugs to @person1 @person2 @person3\n</code></pre>"},{"location":"output/twitchbot/#announcing-websites","title":"Announcing Websites","text":"<p>You may want to add support for announcing the website data as part of the Twitchbot track announcement. You can pick and choose which websites are printed by taking the following code snippet and modifying as necessary:</p> <p>{% if artistwebsites %}   {% for website in artistwebsites %}   {% if 'bandcamp' in website %} |Bandcamp: {{ website }}   {% elif 'discogs' in website %} | Discogs: {{ website }}   {% elif 'facebook' in website %} | Facebook: {{ website }}   {% elif 'instagram' in website %} | IG: {{ website }}   {% elif 'last.fm' in website %} | last.fm: {{ website }}   {% elif 'musicbrainz' in website %} | MusicBrainz: {{ website }}   {% elif 'twitter' in website %} | Twitter: {{ website }}   {% elif 'wikipedia' in website %} | Wikipedia: {{ website }}   {% elif 'youtube' in website %} | YouTube: {{ website }}   {% else %} | Official homepage: {{ website }}   {% endif %}   {% endfor %}</p>"},{"location":"output/webserver/","title":"Webserver","text":"<p>What's Now Playinghas a built-in web server that allows for a wide variety of customization and deployments, including complex ones involving multiple hosts. Treat the files in<code>templates</code> as examples; copy them to new names and modify them until you are happy. Change the font, change the output order, do whatever it is you need to do.</p> <p>Using one of the WebSocket examples as your starting point is recommended as they are generally more predictable. They update when the song updates vs. the others that use a timer to check for updates. See more about WebSockets below.</p>"},{"location":"output/webserver/#installation","title":"Installation","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select OBS WebSocket from the list of available input sources.</li> <li>Check Enable</li> <li>Change any settings as desired. See below.</li> <li>Click Save</li> </ol>"},{"location":"output/webserver/#settings","title":"Settings","text":"Setting Description Port The HTTP server's TCP port. A firewall should protect this port for security reasons to limit which hosts will be permitted to connect. What's Now Playing does not limit what systems may connect to it. HTML Template The Jinja2 template file to use when fetching index.md. See Templates for more information. Once Only give index.md once per title, then return an empty refresh page until the next song change. This setting is handy for providing a simple way to do fade-in and fade-out using simple HTML."},{"location":"output/webserver/#obs-settings","title":"OBS Settings","text":"<p>Once the webserver is enabled, hop into OBS and configure a Browser source. Set the size to match the HTML template you are using. (Check the <code>width</code> and <code>height</code> values in the bundled templates). Then place the OBS source wherever you would like.</p> <p></p>"},{"location":"output/webserver/#supported-urls","title":"Supported URLs","text":"URL Description /index.md (or /index.htm or just /) This URL generates either a title card based upon the preconfigured template or a refresh document. The title card will be given exactly once upon connection with the refresh document being returned in subsequent connections until a new track has been detected. This process allows for using fades and other HTML tricks. /index.txt Same output as the text output in the General settings. /cover.png This URL will return the cover image, if available. /httpstatic/ Any content in`Documents/NowPlaying/httpstatic` will get served under this URL. <p>See also Artist Extras for other URLs when that set of features is enabled.</p>"},{"location":"output/webserver/#rest-api","title":"REST API","text":"<p>Currently, only a very rudimentary REST API is implemented. <code>/v1/last</code> will return a JSON-formatted string of the currently playing track.</p>"},{"location":"output/webserver/#websockets","title":"WebSockets","text":"<p>New with version 3.0.0 is a continual feed via WebSockets. The feed is a JSON-formatted stream that will get an update on every title change. To connect, use the URL <code>ws://hostname:port/wsstream</code>. The files that begin with <code>ws-</code> in the <code>templates</code> directory use WebSockets.</p> <p>Variables set should match what is on the Templates page. Be aware that values may be null.</p>"},{"location":"recognition/","title":"General Info About Music Recognition","text":"<p>NOTE: This feature is only available when using a local music source that provides individual files. It will not work when DJing from external sources.</p> <p>In general, music recognition is primarily for DJs that do not have their music fully tagged. This feature may have some significant impacts on What's Now Playing's general performance:</p> <ul> <li>Extra network bandwidth and access are required to consult with online   databases.</li> <li>Extra CPU and RAM will be required to generate the 'fingerprint' that   helps identify the song.</li> <li>Extra time will be required for all of this extra work, adding delays   to the display.</li> </ul> <p>Music recognition technologies will never be perfect and will occasionally provide surprising results. Tagging your files, even with minimal information, will give the best outcome.</p>"},{"location":"recognition/#available-recognition-services","title":"Available Recognition Services","text":"<p>Configure music recognition services to identify untagged tracks:</p> <ul> <li>AcoustID/MusicBrainz - Audio fingerprinting and metadata lookup using open databases</li> </ul> <p>Click on the service above for detailed configuration instructions.</p>"},{"location":"recognition/acoustidmb/","title":"AcoustID/MusicBrainz","text":"<p>The acoustidmb feature attempts to use two freely available resources to retrieve metadata for untagged files.</p> <p></p>"},{"location":"recognition/acoustidmb/#acoustid","title":"AcoustID","text":"<p>AcoustID is a project providing a complete audio identification service based entirely on open-source software. The service is completely free for non-commercial applications. All you need to do is register your application.</p> <p>As part of the identification, AcoustID requires</p> <ul> <li>MusicBrainz enabled.</li> <li>fpcalc binary installed</li> </ul> <p>Note that AcoustID's database is not as large or as comprehensive as, for example, Shazam. Additionally, it only samples the beginning of the song so media with long introductions before the core of the music starts (e.g., music videos) may not be correctly identified.</p>"},{"location":"recognition/acoustidmb/#musicbrainz","title":"MusicBrainz","text":"<p>MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public. What's Now Playing may use MusicBrainz to fill in missing data beyond what is already tagged, if enabled.</p> <p>MusicBrainz aims to be:</p> <p>The ultimate source of music information by allowing anyone to contribute and releasing the data under open licenses. The universal lingua franca for music by providing a reliable and unambiguous form of music identification, enabling both people and machines to have meaningful conversations about music.</p> <p>Like Wikipedia, MusicBrainz is maintained by a global community of users and we want everyone \u2014 including you \u2014 to participate and contribute.</p> <p>MusicBrainz is operated by the MetaBrainz Foundation, a California based 501(c)(3) tax-exempt non-profit corporation dedicated to keeping MusicBrainz free and open source.</p>"},{"location":"recognition/acoustidmb/#musicbrainz-instructions","title":"MusicBrainz Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select AcoustID/MusicBrainz from the left-hand column</li> <li>Select <code>Query MusicBrainz for missing data</code></li> <li>Fill in the <code>MusicBrainz Email Address</code></li> <li>If you would like the data fetched to include artist website data,    then select <code>Ask MusicBrainz for artist's websites</code> and which types of websites you would like included.</li> <li>Click Save</li> </ol> <p>The 'Use MusicBrainz when all else fails' button will attempt to try and figure out extra data based primarily on the artist and title information. Accuracy is not guaranteed, but in some use cases it may be enough to get extra information such that Artist Extras work without having to use AcoustID.</p>"},{"location":"recognition/acoustidmb/#acoustid-instructions","title":"AcoustID Instructions","text":"<ol> <li>Install fpcacle binary as     appropriate for your operating system.</li> <li>Open Settings from the What's Now Playing icon</li> <li>Select AcoustID/MusicBrainz from the left-hand column</li> <li>Enable the option</li> <li>Fill in the API Key you received from Acoustid</li> <li>Fill in the <code>MusicBrainz Email Address</code></li> <li>Set the location of the fpcalc executable that was installed.</li> <li>Any additional MusicBrainz configuration</li> <li>Click Save</li> </ol> <p>What's Now Playing will now use AcoustID and MusicBrainz to provide supplementary metadata that was not provided by either the DJ software or tags that were read from the file.</p>"},{"location":"reference/","title":"Reference","text":"<p>Reference documentation for What's Now Playing including template variables and comparisons with other software.</p>"},{"location":"reference/#reference-sections","title":"Reference Sections","text":"<ul> <li>Template Variables - Complete list of available template variables for customization</li> <li>Comparisons - How What's Now Playing compares to other similar software</li> </ul> <p>Click on any reference section above for detailed information.</p>"},{"location":"reference/comparisons/","title":"Versus Comparisons","text":"<p>There are a lot of different solutions to provide titling for your stream. Here are some comparisons of other projects related to what this software offers.</p>"},{"location":"reference/comparisons/#seratos-now-playing-twitch-extension","title":"Serato's Now Playing Twitch Extension","text":"Description This App Serato Extension Works locally \u2705 \ud83d\udeab Works with Live Playlists \u2705 \u2705 Cover art \u2705 \ud83d\udeab Multi-DJ on one stream friendly \u2705 \ud83d\udeab Album name can be displayed \u2705 \ud83d\udeab Label/Publisher can be displayed \u2705 \ud83d\udeab High degree of customization via templates \u2705 \ud83d\udeab Open source \u2705 \ud83d\udeab Supports multi-deck \u2705 \ud83d\udeab Ability to give data to other programs to manipulate \u2705 \ud83d\udeab Supports 2-computer streaming \u2705 \u2705 Supports Chat Announcements \u2705 \ud83d\udeab"},{"location":"reference/templatevariables/","title":"Templates","text":"<p>What's Now Playing handles almost all output via the Jinja2 templating system which includes an extremely powerful language that enables you a full range of customizing the output.</p> <p>In general, What's Now Playing provides a generic set of variables for use in any template. These values are filled based on a few factors:</p> <ul> <li>the input source providing its data</li> <li>media tag quality</li> <li>What's Now Playing's file type and tag compatibility</li> </ul> <p>Some examples:</p> <ul> <li>An MP3 file missing ID3 tags may only have   <code>title</code> available.</li> <li>Serato in Remote mode, title, and optionally artist are available.</li> <li>MP4/M4V files have minimal support currently in What's Now   Playing, so will not have the label</li> <li>VOBS files do not support tagging and will only have information   available from the DJ software, if possible</li> </ul> <p>Some outputs (e.g., TwitchBot) may provide additional variables that offer other, context-sensitive features. See their pages for more information.</p>"},{"location":"reference/templatevariables/#reminder","title":"Reminder","text":"<p>In order to perform these look ups, certain data is required to be tagged in the media to make the results remotely accurate. More data == more better results. Therefore, media with ISRC tags will cause MusicBrainz lookups if that service is enabled to fill in any missing data.</p>"},{"location":"reference/templatevariables/#supported-variables","title":"Supported Variables","text":"Variable Description album Album track comes from albumartist Artist listed on the album artist Artist for the song artistlongbio Full biography of the artist (from \"Artist Extras\") artistshortbio First paragraph of the long bio (from \"Artist Extras\") artistwebsites List of URLs for the artist bitrate Bitrate the file was encoded at bpm Beats per minute of the song comments Comments from either the DJ software or the song file, whichever is discovered first composer Composer of the song coverurl Relative location to fetch the cover. Note that this will only work when the webserver is active. date Date (either release date or date of the media) deck deck # this track is playing on disc Disc number discsubtitle disc subtitle (if there is one) disc_total Total number of discs in album duration Total expected track time in seconds duration_hhmmss Same as duration but in <code>HH:MM:SS</code> format (so 1 minute 30 seconds becomes 01:30) filename Local filename of the media genre Genre of the song hostip IP address of the machine running What's Now Playing hostfqdn Fully qualified hostname of the machine running What's Now Playing hostname Short hostname of the machine running What's Now Playing httpport Port number that is running the web server isrc List of International Standard Recording Code key Key of the song label Label of the media. lang Language used by the media musicbrainzalbumid MusicBrainz Album Id musicbrainzartistid List of MusicBrainz Artist Ids musicbrainzrecordingid MusicBrainz Recording Id previoustrack See below for more details. title Title of the media track Track number on the disc track_total Total tracks on the disc"},{"location":"reference/templatevariables/#implementation-notes","title":"Implementation Notes","text":""},{"location":"reference/templatevariables/#arrays","title":"Arrays","text":"<p>Some fields that might be multi-valued (e.g., genre) will be merged into one. If they are not merged, the description will specifically say it is a list.</p>"},{"location":"reference/templatevariables/#undefined","title":"Undefined","text":"<p>When rendering templates, What's Now Playing will set any undefined variables to the empty string. Instead of having to render a template as:</p> <pre><code>{% if variable is defined and variable is not none and variable|length %}\n</code></pre> <p>This can be short-cut to:</p> <pre><code>{% if variable %}\n</code></pre> <p>since the variable will always be defined. This also means that templates that incorrectly use the wrong variable name will render, just with an empty string in place of the expected text.</p>"},{"location":"reference/templatevariables/#previous-track-details","title":"Previous Track Details","text":"<p>The <code>previoustrack</code> variable is a list of played tracks in <code>reverse</code> order, starting with current track at zero. It currently holds just the artist and the title of the track. Some examples:</p> <pre><code>{{ previoustrack[0].artist }}\n</code></pre> <p>will show the current artist playing.</p> <pre><code>{{ previoustrack[1].artist }}\n</code></pre> <p>will show the previous-to-current artist.</p> <p>To get the title of the track played 2 tracks ago:</p> <pre><code>{{ previoustrack[2].title }}\n</code></pre> <p>For a more complex example, see the <code>twitchbot_previoustrack.txt</code> file in the templates directory.</p>"},{"location":"settings/","title":"General","text":"<ul> <li>Notification Indicator - Selecting this option will show a system   notification when new track info is detected.</li> </ul> <ul> <li>This is useful for verifying that the app is polling and   retrieving data.</li> <li>The notification displays the track information after detection.</li> <li>Some software (such as Serato) will not show notifications in   full-screen mode. You may need to take it out of full screen node   to see the notification.</li> </ul> <ul> <li>Write Delay - The amount of time, in seconds, to delay writing the   new track info once it's retrieved. If not populated, it will default   to 0 seconds.</li> </ul> <ul> <li>A setting of zero will update the track info on-screen immediately   as a new track is detected. This time value may be too soon for   some DJ's mixing style as well as some features. Increasing the   write delay allows for much more tuning.</li> </ul> <ul> <li> <p>Recognition Replacement - By default, if a Music Recognition   service is enabled, it will only supplement any missing information.   These options forcibly replace title and artist from any enabled   recognition services.</p> </li> <li> <p>Logging Level - By default, What's Now Playing will write   debug logs into your Documents/NowPlaying/Logs directory. This option   lets you control the level of logging.</p> </li> <li> <p>Configuration Backup - Export and import your complete   configuration to make version upgrades easier.</p> </li> </ul> <ul> <li>Export Configuration - Saves all your settings to a JSON file.   This includes API keys, passwords, file paths, and all plugin   configurations. \u26a0\ufe0f Security Warning: The exported file   contains sensitive data including API keys and passwords. Store it   securely and do not share it.</li> <li>Import Configuration - Restores settings from a previously   exported JSON file. This will overwrite your current settings.   Cache and runtime settings are automatically excluded and rebuilt.</li> <li>Use Cases:</li> <li>Back up settings before major version upgrades</li> <li>Transfer settings between installations</li> <li>Restore settings after a fresh install</li> <li>Recover from configuration corruption</li> </ul> <p>At the bottom of every page will be the \"Reset\", \"Cancel\", and \"Save\" buttons:</p> <ul> <li>Reset - Change all settings back to default.</li> <li>Cancel - Close the window without saving.</li> <li>Save - Save the settings</li> </ul>"},{"location":"settings/filter/","title":"Filter","text":"<p>Some DJ Pools add extra identifiers to track titles. What's Now Playing has the ability to remove extra text from the title of a track using Python-style regular expressions .</p>"},{"location":"settings/filter/#adding-your-rules","title":"Adding Your Rules","text":"<p>Your custom rules may be added by:</p> <ol> <li>Click the Add Entry button</li> <li>Click on the 'new' entry</li> <li>Edit to be a regular expression</li> </ol> <p>To delete an existing entry:</p> <ol> <li>Select the entry in the list</li> <li>Click Delete Entry</li> </ol> <p>The order in which the rules are applied are done in the same order as presented in the list. To change the order, select the entry and drag it to the location in the list.</p>"},{"location":"settings/filter/#testing-your-rules","title":"Testing Your Rules","text":"<p>The text line below the ruleset may be used to test the rules.</p> <ol> <li>Place your text in the 'clean - clean' line.</li> <li>Click the Test button</li> <li>The software will then show wbat happens will the rules defined in     Settings and the rules as previously saved.</li> </ol>"},{"location":"settings/filter/#recommended","title":"Recommended","text":"<p>Previous versions had some built-in rules to remove a few common entries. Clicking on the 'Add Recommended' button will add those rules:</p> <p></p> <ul> <li>' (Clean)', ' (clean)', and all other variations of case like '   (ClEaN)'</li> <li>At the end of the line: ' - clean', ' - Clean' and similarly is case   insensitive</li> <li>' [Clean]' and ' [clean]' and smiliarly is case insensitive</li> </ul> <p>They will also remove the same types of variations of:</p> <ul> <li>explicit</li> <li>dirty</li> <li>official music video</li> </ul>"},{"location":"settings/quirks/","title":"Quirks","text":"<p>Under some very specialized circumstances, it may be necessary to 'nudge' What's Now Playing to do something particularly special in order to get the desired impact. The options under quirks allow one to do just that. In general, however, users should stick with the defaults for optimal performance.</p> <p></p>"},{"location":"settings/quirks/#file-system-notification-method","title":"File System Notification Method","text":"<p>By default, What's Now Playing uses operating system facilities to know when input files have changed. If What's Now Playing is running on a different host than the DJ software and What's Now Playing have been configured to read the DJ software's directory over a network mount (such as SMB) What's Now Playing may not get notified that a file has changed. Selecting the `poll` option will force the application to perform a manual file system check. The drawbacks to this method are that more CPU and disk IO is performed and being on delay to get updates. However, the software will not miss events.</p> <p>NOTE: Changing this value REQUIRES a restart of the What's Now Playing software.</p>"},{"location":"settings/quirks/#song-path-substitution","title":"Song Path Substitution","text":"<p>Like the previous issue, the DJ software's files may reference a file path unlike what What's Now Playing has access to on the machine where it is running. Setting these values will allow you to do a 'search and replace' of any referenced song files.</p> <p>For example:</p> <ul> <li>Starting File Path is set to <code>/Volumes/Music/</code></li> <li>Replacement File Path is set to <code>/Macintosh HD/Music/</code></li> </ul> <p>The DJ software says that it read <code>/Volumes/Music/Blondie/Heart_of_Glass.mp3</code>. What's Now Playing will instead interpret that the filename is actually <code>/Macintosh HD/Music/Blondie/Heart_of_Glass.mp3</code> when reading extra tags, performing recognition, etc.</p> <p>The Slash Handling setting allows you to switch the direction of all slashes in the filenames. This setting is beneficial when substituting filenames from Windows to other operating systems and vice-versa. The slash changes happen before path substitution, so keep that in mind. For example,</p> <ul> <li>Slash Handling: <code>\\ to /</code> is set</li> <li>Starting File Path: <code>Z:/av</code></li> <li>Replacement File Path: <code>/av</code></li> </ul> <p>If the original file was <code>Z:\\av\\Music\\Band\\Cool Song.mp3</code>, the above settings will change that to <code>/av/Music/Band/Cool Song.mp3</code>. Another example:</p> <ul> <li>Slash Handling: <code>/ to \\</code> is set</li> <li>Starting File Path: <code>\\av</code></li> <li>Replacement File Path: <code>Z:\\av</code></li> </ul> <p>will do the reverse, from <code>/av/Music/Band/Cool Song.mp3</code> to <code>Z:\\av\\Music\\Band\\Cool Song.mp3</code></p> <p>NOTE: This quirk is not supported with MPRIS2.</p>"}]}