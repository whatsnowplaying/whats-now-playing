{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What's Now Playing - DJ Streaming Software","text":"<p>Automatically display live track information from your DJ software on streams, in chat, and anywhere your audience can see it.</p> <p>What's Now Playing connects to your DJ software and eliminates the need to manually update song titles during live streams, radio shows, or DJ sets. Focus on your music while your audience stays informed about every track you play.</p>"},{"location":"#perfect-for-streaming-djs","title":"Perfect for Streaming DJs","text":"<p>DJ Software Integration:</p> <p>Works with all major platforms including:</p> <ul> <li>Serato DJ</li> <li>Traktor</li> <li>Denon DJ (StagelinQ)</li> <li>Virtual DJ</li> <li>DJUCED</li> <li>MIXXX</li> <li>JRiver Media Center</li> <li>And many more</li> </ul> <p>Stream Platforms:</p> <ul> <li>Twitch - Full chat bot with song requests and announcements</li> <li>Kick - Song announcement support</li> <li>OBS Studio - Professional track displays and browser sources</li> <li>Discord - Community server integration</li> </ul> <p>Enhanced Metadata:</p> <ul> <li>Automatically identify untagged tracks with audio fingerprinting</li> <li>Enrich displays with artist biographies and background information</li> <li>Add high-quality album artwork and images</li> <li>Provide detailed track and artist information</li> </ul> <p>Flexible Output:</p> <ul> <li>Simple text files for basic integration</li> <li>Custom HTML templates for professional displays</li> <li>Real-time WebSocket streams for dynamic content</li> <li>Direct OBS integration with browser sources</li> <li>Template system for complete customization</li> </ul>"},{"location":"#see-it-in-action","title":"See It In Action","text":"<p>Create professional displays that rival music television:</p> <p></p> <p>Check out the gallery to see more examples and get inspiration for your setup!</p>"},{"location":"#get-started","title":"Get Started","text":"<p>Ready to automate your track displays? Begin with the Quickstart Guide to connect your DJ software and start streaming like a pro.</p>"},{"location":"contact/","title":"Contact","text":""},{"location":"contact/#discord","title":"Discord","text":"<p>If you'd like to chat with people who use the software or get inspiration, there is now a Discord server available!</p>"},{"location":"contact/#github","title":"Github","text":"<p>The main repository page with has issues tracking for bug reports and feature requests is on Whats Now Playing Github</p>"},{"location":"contact/#twitch","title":"Twitch","text":"<p>You can always see what is under development in real time on Modern Meerkat's Stream .</p>"},{"location":"gallery/","title":"Gallery of Templates","text":"<p>What's Now Playing has quite a bit of flexibility in what kind of output you can generate to the point that there are nearly infinite possibilities. For a complete list of all available templates with descriptions, see the Template Reference.</p> <p>The text versions are meant to be used to feed other systems and are rather basic. E.g., the basic text template generates:</p> <p>Utah Saints - Something Good '08</p> <p>Picking that template, configuring a text source, configuring a scroll filter on that source, and then writing to it via OBS WebSocket allows one to do:</p> <p></p> <p>For the HTML templates, there are generally two varieties, one that uses WebSockets (start with ws-) and those that do not. WebSocket varieties are more likely to get updates closer in sync with the rest of your display. However, older software stacks may not support WebSockets.</p> <p>AAdditionally, the templates are typically named to have 'fade' or 'nofade'. 'Nofade' generally stay on the screen for the duration of the song. 'Fade' will appear for a while and then disappear, only to reappear when the song changes:</p> <p></p> <p>Here are some pictures of the bundled HTML template files being used with an OBS stream.</p> <ul> <li>cover-title-artist:</li> </ul> <p></p> <ul> <li>mtv:</li> </ul> <p></p> <ul> <li>mtv-cover:</li> </ul> <p></p> <p>The software writes output in UTF-8. That covers the vast majority of characters that one may hit. Be aware that OBS and other software may need to have their settings, such as fonts, changed to support non-ASCII characters!</p> <p></p> <p></p> <p></p>"},{"location":"quickstart/","title":"Quickstart","text":""},{"location":"quickstart/#platform-notes","title":"Platform Notes","text":""},{"location":"quickstart/#macos","title":"macOS","text":"<p>Due to security measures in macOS Sierra and later, unsigned apps may have limitations placed on them. These limitations will prevent them from operating correctly or even opening at all. Opening the app on High Sierra and newer versions of macOS by following the steps below. Versions before High Sierra have not been verified and are not currently supported.</p> <ul> <li>Do not unzip the downloaded zip package directly to the folder from where you will be   running it. Instead, unzip it in a location such as the <code>Downloads</code> folder and then move   the <code>WhatsNowPlaying.app</code> to your destination folder (e.g., \"Applications\"). Then run the app from the destination   folder.</li> <li>If the app fails to open, try holding down the Control key and then double-clicking open.</li> <li>If after following the step above the app does not open, open Terminal   and type: <code>sudo xattr -r -d com.apple.quarantine /path/to/WhatsNowPlaying.app</code>   (replace with the correct path to the app).</li> </ul>"},{"location":"quickstart/#windows","title":"Windows","text":"<ul> <li>Microsoft has beefed up Windows security and you may now get prompted about an   unsigned binary. Click on 'More Info' and then 'Run Anyway' to launch What's Now Playing.</li> </ul>"},{"location":"quickstart/#linux","title":"Linux","text":"<p>Binaries are not provided because of dbus-python, so please follow the developer guide to install in a Python virtual environment. Note that currently, this software does not run headless.</p> <p>To use MPRIS2, you must have dbus-python installed in your Python virtual environment.</p>"},{"location":"quickstart/#other-platforms","title":"Other Platforms","text":"<p>Please follow the developer guide to install and run.</p>"},{"location":"quickstart/#installation","title":"Installation","text":"<p>Here are the steps to get a basic installation working:</p> <ol> <li> <p>Download the appropriate binary:</p> </li> <li> <p>Latest stable release -      Always points to the newest stable version</p> </li> <li>All releases -      Browse all versions including pre-releases</li> </ol> <p>Also of interest: Current bug list</p> <ol> <li>Launch the application</li> <li>The software will attempt to pre-configure itself for whatever software you have    installed. Note that in the case of Traktor, this work will including building an    index for file lookup. For large Traktor installations, that may take a while.</li> <li>It should bring up the Settings window</li> <li>(Re-)Configure a Source</li> <li>Save settings.</li> <li>Launch your DJ Software.</li> <li>Bring up OBS or SLOBS or your streaming software.</li> <li>Configure a Browser Source and point it at <code>http://localhost:8899/</code>.</li> <li>Bring up your DJ software again and play a song.</li> <li>The Browser Source should have a very simple track information box.</li> </ol> <p>At this point, you are ready to customize via Templates and enable other features!</p>"},{"location":"requests/","title":"User Track Requests","text":"<p>What's Now Playing has the ability to help manage requests that come from Twitch users.</p> <p>There are three types of requests, generic, twofers, and roulette:</p> <ul> <li>Generic requests are just that, user may request any track by   specifying the artist and title.</li> <li>Twofers are requests where the artist is the currently playing artist   and (optionally) a particular track may be selected.</li> <li>Roulette requests will pick a random song from the specified   playlist/crate as the request.</li> </ul> <p></p> <p>If What's Now Playing detects the song has been played, it will be removed from the Requests queue.</p>"},{"location":"requests/#using-twitch-chat-for-requests","title":"Using Twitch Chat for Requests","text":"<p>To enable Twitch chat to be used for requests:</p> <ol> <li>Configure and enable Twitch Chat support.</li> <li>Create a command that will be used for requests. There is an example     template file called 'twitchbot_request.txt' as an example.</li> <li>Assign that command to the appropriate entry in the Requests     settings in What's Now Playing. See later on below.</li> </ol> <p>For non-roulette requests, artist and title information should be entered on the chat line. For example:</p> <pre><code>```\nmodernmeerkat: !request Blur - \"Parklife\"\nmodernmeerkatbot: Thanks @modernmeerkat! Your special request of \"Parklife\" by Blur has been noted!\n```\n</code></pre>"},{"location":"requests/#supported-request-formats","title":"Supported Request Formats","text":"<p>The following formats are supported, either as a chat command or as the optional text in a Twitch Channel Point Redemption:</p> <ul> <li>artist - title</li> </ul> <p></p> <ul> <li>artist - \"title\"</li> </ul> <p></p> <ul> <li>\"title\" - artist</li> </ul> <p></p> <ul> <li>\"title\" by artist</li> </ul> <p></p> <ul> <li>\"title\"</li> </ul> <p></p> <p>Additionally, the following formats can be used to request a track for someone else:</p> <ul> <li>artist - \"title\" for @username</li> <li>\"title\" by artist for @username</li> </ul> <p>(Note that the username is not currently saved or processed in any way.)</p> <p>Unless Twofer is being redeemed, anything else will be considered an artist. For example:</p> <p></p> <p>For Twofers, anything else will be considered a track title since the artist will always be the currently playing artist. Twofers are not required to have additional input. In that case, the title will be blank.</p>"},{"location":"requests/#using-twitch-redemptions-for-requests","title":"Using Twitch Redemptions for Requests","text":"<p>To enable Twitch redemptions to be used for requests:</p> <ol> <li> <p>Configure and enable Twitch support with Client and Secret IDs.</p> </li> <li> <p>Create a a reward in the Twitch UI. Keep track of the    exact text used in the reward description.</p> </li> <li> <p>If the channel redemption is not a roulette request, then the reward    should take user input to provide the artist and title information.</p> </li> <li> <p>Copy the exact text into the 'Redemption Text' field in the     appropriate entry in the Requests settings in What's Now     Playing.</p> <p>NOTE: What's Now Playing does not manage the Twitch-side Reward Requests Queue. You will still need to approve or refund channel points in the Twitch moderator panel.</p> </li> </ol>"},{"location":"requests/#configuring-requests","title":"Configuring Requests","text":"<ol> <li>Under Settings, select Requests.</li> <li>Enable Requests support</li> <li>Enable one or both of Twitch Channel Redemption Requests and Twitch    Chat Requests depending upon your needs.</li> <li>Add Entry</li> <li>Change the Chat Command to the Twitch Chat command in order to    enable this Request via chat.</li> <li>Put in the exact Twitch reward text in the Redemption Text field to    enable this Request via channel points.</li> <li>Select the mode as appropriate. By default, Generic will be used.</li> <li>Fill in a displayname. This name will be shown to users when    referencing requests of this type.</li> <li>For roulette requests, enter in the playlist or crate name. See    below for more information.</li> </ol>"},{"location":"requests/#roulette-playlists","title":"Roulette Playlists","text":"<p>In order for Roulette requests to work, What's Now Playing needs to have a list of tracks to use. The name here should match the name that your DJ software also uses:</p> <p>Serato: The name of the crate or smart crate. Virtual DJ: playlist name Traktor: playlist name</p> <p>NOTE: See the section on your particular DJ software for known caveats/issues.</p> <p>If the random song picked is not desired (inappropriate, already played, etc), you may force the software to re-pick:</p> <ol> <li>Selecting the track in the Requests window.</li> <li>Click Respin</li> <li>Wait a few moments for the software to pick a new one. (It does not    do it immediately.)</li> <li>The track should get replaced with a different one.</li> <li>If it is still not desired, repeat this process as many times as    necessary.</li> </ol> <p>The software will keep track of which artists have been played during Roulette. It will try to avoid repeating the same artist in the same DJ session. If it runs out or cannot pick one a non-duplicate fast enough, it will still offer up a duplicate artist.</p> <p>NOTE: There is no notification to users that Respin has been selected.</p> <p>NOTE: For Traktor and Virtual DJ, Roulette requests require local files.</p>"},{"location":"upgrading/","title":"Upgrading","text":"<p>Be sure to check the changelog and the release notes for any breaking changes and news.</p>"},{"location":"upgrading/#upgrading-to-500","title":"Upgrading to 5.0.0","text":""},{"location":"upgrading/#automatic-directory-migration","title":"Automatic Directory Migration","text":"<p>When upgrading to 5.0.0, the application will automatically migrate your Documents directory:</p> <ul> <li>Old location: <code>Documents/NowPlaying</code></li> <li>New location: <code>Documents/WhatsNowPlaying</code></li> </ul> <p>What happens during migration:</p> <ul> <li>A dialog will notify you about the migration process</li> <li>All templates, custom files, and directories will be copied to the new location</li> <li>Log files (.log) and temporary files (.new) are excluded from the copy</li> <li>Configuration paths pointing to the old directory are automatically updated</li> <li>Your old <code>Documents/NowPlaying</code> directory remains as a backup</li> <li>The migration only runs once - subsequent launches will use the new directory</li> </ul> <p>After upgrading:</p> <ul> <li>You can safely delete the old <code>Documents/NowPlaying</code> directory once you've verified everything works</li> <li>If you need to downgrade, your old directory is still available</li> </ul>"},{"location":"upgrading/#configuration-backup","title":"Configuration Backup","text":"<ul> <li>Starting with 5.0.0, the system will automatically put an importable   copy of your config in the <code>WhatsNowPlaying\\configbackup</code> folder to use for   recovery.  After the upgrade is successful, you should delete this copy   as necessary.</li> </ul>"},{"location":"upgrading/#configuration-recovery-42","title":"Configuration Recovery (4.2+)","text":"<p>If an upgrade fails or settings are lost, you can restore from a configuration backup:</p> <ol> <li>Export before upgrading (recommended):</li> <li>Open Settings \u2192 General \u2192 Export Configuration</li> <li>Save the JSON file to a secure location</li> <li>Import if needed (only if settings are lost):</li> <li>Open Settings \u2192 General \u2192 Import Configuration</li> <li>Select your exported JSON file</li> <li>Save and restart the application</li> </ol> <p>[!WARNING] Only import configurations when necessary. Normal upgrades preserve settings automatically. Configuration files contain sensitive data - store securely and delete when no longer needed.</p>"},{"location":"upgrading/#from-3xx","title":"From 3.x.x","text":"<ol> <li>Just install and the software will make the necessary changes.</li> </ol> <p>If you need to downgrade for any reason, you must downgrade to 3.1.2 or higher after upgrading to a 4.x.x release.</p>"},{"location":"upgrading/#from-2xx","title":"From 2.x.x","text":"<ol> <li>Install the last version of 3.x.x from the releases page.</li> <li>Upon launch, most settings will get copied over to their new homes    in the new Settings screen.</li> <li>Many templates have been added and updated. New templates will be    copied into the templates directory. For updated templates, there    are two outcomes:</li> <li>If there have been no changes to the same one in the template      directory, the updated template file will overwrite the existing      one.</li> <li>If there have been changes to the one in the template directory,      the updated one will be put in as <code>.new</code> and will likely require      you to take action. The existing one will be left there, however.      A pop-up on program launch will also inform you that the conflict      has happened.</li> </ol>"},{"location":"upgrading/#from-1xx","title":"From 1.x.x","text":"<p>Welcome aboard!</p> <p>Unfortunately, 1.x.x wasn't built in a way to make it possible to upgrade from one version to another. So none of your settings are preserved. You will need to treat it as though it is a fresh install.</p>"},{"location":"usage/","title":"Usage","text":"<p>Start What's Now Playing from wherever you installed it. On first launch, a Settings window will appear - configure your DJ software and outputs, then click Save.</p> <p>After initial setup, the app runs in the background and can be accessed through:</p> <ul> <li>macOS: Menu bar icon (top of screen)</li> <li>Windows: System tray icon (bottom-right corner)</li> </ul> <p></p> <p></p>"},{"location":"usage/#menu-options","title":"Menu Options","text":"<ul> <li>Settings - Reconfigure the application. See Settings for more information.</li> <li>Oldest/Newest - Toggle mixing mode detection (not supported by all DJ software):</li> <li>Oldest mode: Tracks the oldest song across decks (for manual crossfading)</li> <li>Newest mode: Tracks the newest song across decks (for AutoDJ/playlists)</li> <li>Pause/Unpause - Stop/resume track detection and output updates</li> <li>Exit - Quit What's Now Playing</li> </ul>"},{"location":"extras/","title":"Artist Extras","text":"<p>Artist Extras automatically downloads additional content about artists during live DJ sets, including images (banners, logos, thumbnails, fan art) and biographies. This enhances audio-only streaming with visual content and background information.</p> <p>Note: Many settings in this section require restarting What's Now Playing to take effect.</p>"},{"location":"extras/#what-you-get","title":"What You Get","text":""},{"location":"extras/#images","title":"Images","text":"Type WebSocket URL Raw Image URL Size Description Banners /artistbanner.htm /artistbanner.png 200px \u00d7 unlimited Artist image with name text Fan Art /artistfanart.htm N/A 800px \u00d7 1280px High-quality background images Logos /artistlogo.htm /artistlogo.png 200px \u00d7 480px Stylized artist text/graphics Thumbnails /artistthumb.htm /artistthumb.png 480px \u00d7 200px Artist photos"},{"location":"extras/#biographies","title":"Biographies","text":"<p>Artist biographies are available in two formats:</p> <ul> <li>artistlongbio - Full biography content</li> <li>artistshortbio - Biography truncated to fit in a single Twitch chat message</li> </ul>"},{"location":"extras/#setup","title":"Setup","text":"<p>Note: Artist Extras settings are located under Artist Data in the settings menu.</p>"},{"location":"extras/#how-it-works","title":"How It Works","text":""},{"location":"extras/#download-timing","title":"Download Timing","text":"<p>Content downloads during the write delay period (set in General Settings):</p> <ol> <li>Immediate downloads: Banners, logos, and thumbnails download first</li> <li>Background downloads: Fan art continues downloading while the track plays</li> <li>Track changes: New banners/logos/thumbnails are selected if available</li> <li>Artist changes: Full download process starts for the new artist</li> </ol>"},{"location":"extras/#multi-artist-support","title":"Multi-Artist Support","text":"<p>For collaborations (e.g., \"David Bowie &amp; Lou Reed\"):</p> <ul> <li>Attempts to download content for both artists</li> <li>Only one set of images is displayed (banners, logos, fan art)</li> <li>Both artists' content is cached for future use</li> </ul>"},{"location":"extras/#caching","title":"Caching","text":"<ul> <li> <p>Local storage: All content is cached locally for fast access</p> </li> <li> <p>Automatic cleanup: Old content is eventually removed to manage disk space</p> </li> <li> <p>Hourly verification: Cache is verified every hour for performance</p> </li> <li> <p>Clear Cache button: Removes artist-to-image mappings but preserves API response cache</p> </li> </ul>"},{"location":"extras/#configuration","title":"Configuration","text":""},{"location":"extras/#download-limits","title":"Download Limits","text":"<p>Control how much content to download per track:</p> <ul> <li> <p>Banners/Logos/Thumbnails: Downloaded first, before track announcement</p> </li> <li> <p>Fan Art: Downloaded continuously while track plays</p> </li> <li> <p>Size Limit: Total cache size in GB (approximately 1,000 images per GB)</p> </li> </ul>"},{"location":"extras/#performance-settings","title":"Performance Settings","text":"<ul> <li>Download Processes: Background workers for downloading content</li> <li>Higher = faster downloads but more system load</li> <li> <p>Lower = gentler on system resources but slower downloads</p> </li> <li> <p>Write Delay: Give more time if images appear \"empty\" initially</p> </li> </ul>"},{"location":"extras/#fallback-options","title":"Fallback Options","text":"<p>When specific image types aren't available:</p> <ul> <li>Use cover art for missing fan art</li> <li>Use cover art for missing logos</li> <li>Use cover art for missing thumbnails</li> </ul>"},{"location":"extras/#requirements-for-best-results","title":"Requirements for Best Results","text":"<p>Artist Extras works best with well-tagged music files:</p> <ul> <li> <p>ISRC codes: Enable automatic MusicBrainz lookups for missing metadata</p> </li> <li> <p>Complete artist/album/title tags: Improve matching accuracy</p> </li> <li> <p>MusicBrainz integration: Provides artist IDs for more accurate results</p> </li> </ul>"},{"location":"extras/#available-services","title":"Available Services","text":"<p>Configure specific services for different types of content:</p> <ul> <li> <p>Discogs - Artist information and album artwork</p> </li> <li> <p>TheAudioDB - Artist biographies and additional images</p> </li> <li> <p>FanArt.TV - High-quality curated artist artwork</p> </li> <li> <p>Wikimedia - Free artist biographies from Wikipedia</p> </li> </ul>"},{"location":"extras/#troubleshooting","title":"Troubleshooting","text":""},{"location":"extras/#images-not-appearing","title":"Images Not Appearing","text":"<ul> <li>Increase write delay in General Settings (try 10+ seconds)</li> <li>Check that Artist Extras is enabled</li> <li>Verify your music files have good artist/title tags</li> </ul>"},{"location":"extras/#slow-performance","title":"Slow Performance","text":"<ul> <li>Reduce download processes (try 2-4)</li> <li>Lower image download limits</li> <li>Check internet connection speed</li> </ul>"},{"location":"extras/#cache-issues","title":"Cache Issues","text":"<ul> <li>Use \"Clear Cache\" button to reset image mappings</li> <li>Restart What's Now Playing after changing cache size</li> <li>Monitor disk space usage</li> </ul>"},{"location":"extras/#missing-content-for-artist","title":"Missing Content for Artist","text":"<ul> <li>Check if artist exists in the configured services</li> <li>Verify artist name spelling matches service databases</li> <li>Try enabling MusicBrainz for better artist matching</li> </ul>"},{"location":"extras/discogs/","title":"Discogs","text":"<p>Discogs is a comprehensive music database and marketplace that provides artist information, album artwork, and metadata for What's Now Playing. It's particularly strong for electronic music, vinyl releases, and underground/independent artists.</p>"},{"location":"extras/discogs/#what-discogs-provides","title":"What Discogs Provides","text":"<p>Content Types:</p> <ul> <li>Artist biographies and detailed information</li> <li>Album artwork and artist images (fan art, thumbnails)</li> <li>Artist websites and social media links</li> <li>Detailed discographies and release information</li> </ul> <p>Strengths:</p> <ul> <li>Excellent coverage of electronic music, vinyl, and independent releases</li> <li>Community-driven database with detailed metadata</li> <li>High-quality album artwork, especially for vinyl releases</li> <li>Good coverage of underground and niche artists</li> </ul>"},{"location":"extras/discogs/#setup","title":"Setup","text":"<p>Note: Discogs settings are located under Artist Data in the settings menu.</p>"},{"location":"extras/discogs/#api-access","title":"API Access","text":"<ol> <li>Visit Discogs Developer Settings</li> <li>Click \"Generate new token\"</li> <li>Copy the personal access token</li> <li>Paste it into the What's Now Playing Discogs settings</li> </ol>"},{"location":"extras/discogs/#media-tags","title":"Media Tags","text":"<p>For best results, your music files should have:</p> <ul> <li> <p>Artist name (required)</p> </li> <li> <p>Album title (required for accurate matching)</p> </li> <li> <p>Track title (improves matching accuracy)</p> </li> </ul>"},{"location":"extras/discogs/#how-discogs-matching-works","title":"How Discogs Matching Works","text":""},{"location":"extras/discogs/#search-method","title":"Search Method","text":"<p>Discogs uses text-based search to find artists and releases:</p> <ol> <li>Searches for artist name in the Discogs database</li> <li>Attempts to match album titles when available</li> <li>Returns artist information and images from the best match</li> </ol>"},{"location":"extras/discogs/#matching-accuracy","title":"Matching Accuracy","text":"<ul> <li> <p>Good matches: Well-known artists with standard naming</p> </li> <li> <p>Variable results: Artists with common names or multiple variations</p> </li> <li> <p>Best results: When album information helps distinguish between similar artists</p> </li> </ul>"},{"location":"extras/discogs/#configuration-options","title":"Configuration Options","text":""},{"location":"extras/discogs/#content-selection","title":"Content Selection","text":"<ul> <li> <p>Enable biographies: Download artist background information</p> </li> <li> <p>Enable images: Download artist photos and album artwork</p> </li> <li> <p>Website links: Include artist websites and social media</p> </li> </ul>"},{"location":"extras/discogs/#performance-settings","title":"Performance Settings","text":"<ul> <li> <p>Rate limiting: Discogs has API rate limits - downloads are automatically throttled</p> </li> <li> <p>Caching: All responses are cached to minimize API calls</p> </li> <li> <p>Timeout settings: Configurable timeout for API requests</p> </li> </ul>"},{"location":"extras/discogs/#best-practices","title":"Best Practices","text":""},{"location":"extras/discogs/#improve-matching","title":"Improve Matching","text":"<ul> <li>Use consistent artist names in your music tags</li> <li>Include album titles when possible</li> <li>Verify artist names match Discogs database entries</li> <li>Consider using MusicBrainz for better artist identification</li> </ul>"},{"location":"extras/discogs/#api-usage","title":"API Usage","text":"<ul> <li>Personal access tokens have rate limits - avoid excessive requests</li> <li>Respect Discogs Terms of Use</li> <li>Consider the marketplace nature - some content is user-generated</li> </ul>"},{"location":"extras/discogs/#troubleshooting","title":"Troubleshooting","text":""},{"location":"extras/discogs/#no-results-found","title":"No Results Found","text":"<ul> <li>Verify artist name spelling matches Discogs database</li> <li>Check if artist exists on Discogs.com manually</li> <li>Try simplifying artist names (remove \"The\", special characters)</li> <li>Ensure API token is valid and has proper permissions</li> </ul>"},{"location":"extras/discogs/#poor-quality-results","title":"Poor Quality Results","text":"<ul> <li>Artist names with common words may return incorrect matches</li> <li>Consider using album information to improve matching</li> <li>Enable MusicBrainz for better artist identification first</li> </ul>"},{"location":"extras/discogs/#rate-limit-issues","title":"Rate Limit Issues","text":"<ul> <li>Discogs has daily/hourly API limits for personal tokens</li> <li>Reduce download frequency if hitting limits</li> <li>Consider upgrading Discogs API access if needed</li> </ul>"},{"location":"extras/discogs/#missing-content-types","title":"Missing Content Types","text":"<ul> <li>Not all artists have biographies on Discogs</li> <li>Image availability varies by artist popularity</li> <li>Community-driven content means some artists have more complete information</li> </ul>"},{"location":"extras/discogs/#privacy-and-terms","title":"Privacy and Terms","text":"<ul> <li>Review Discogs Terms of Use before use</li> <li>Personal access tokens are tied to your Discogs account</li> <li>API usage may be subject to Discogs rate limiting and policies</li> <li>Content is sourced from the Discogs community database</li> </ul>"},{"location":"extras/fanarttv/","title":"FanArt.TV","text":"<p>FanArt.TV is a community-driven project that provides high-quality curated artwork for music and other media. It specializes in professional-grade images including banners, logos, fan art, and thumbnails that are perfect for streaming and visual displays.</p>"},{"location":"extras/fanarttv/#what-fanarttv-provides","title":"What FanArt.TV Provides","text":"<p>Content Types:</p> <ul> <li>High-quality artist banners</li> <li>Professional fan art and background images</li> <li>Stylized artist logos</li> <li>Artist thumbnails and photos</li> </ul> <p>Strengths:</p> <ul> <li>Curated, high-quality artwork reviewed by the community</li> <li>Professional-grade images suitable for streaming</li> <li>Consistent image quality and resolution standards</li> <li>Wide coverage of popular artists across all genres</li> </ul> <p>Requirements:</p> <ul> <li>Requires MusicBrainz Artist IDs in your music tags</li> <li>Works best with well-known mainstream artists</li> <li>Limited coverage for very obscure or new artists</li> </ul>"},{"location":"extras/fanarttv/#setup","title":"Setup","text":"<p>Note: FanArt.TV settings are located under Artist Data in the settings menu.</p>"},{"location":"extras/fanarttv/#api-access","title":"API Access","text":"<ol> <li>Visit FanArt.TV API Key Registration</li> <li>Create an account and request an API key</li> <li>Copy your API key once approved</li> <li>Paste it into the What's Now Playing FanArt.TV settings</li> </ol>"},{"location":"extras/fanarttv/#musicbrainz-integration","title":"MusicBrainz Integration","text":"<p>FanArt.TV requires MusicBrainz Artist IDs to function:</p> <ol> <li>Enable MusicBrainz in Recognition settings</li> <li>Ensure your music files have artist/title/album tags</li> <li>Let MusicBrainz identify artists and add MusicBrainz IDs</li> <li>FanArt.TV uses these IDs to find matching artwork</li> </ol>"},{"location":"extras/fanarttv/#how-fanarttv-works","title":"How FanArt.TV Works","text":""},{"location":"extras/fanarttv/#lookup-process","title":"Lookup Process","text":"<ol> <li>What's Now Playing gets MusicBrainz Artist ID from track metadata</li> <li>Queries FanArt.TV database using the MusicBrainz ID</li> <li>Downloads available artwork for that specific artist</li> <li>Caches images locally for fast access</li> </ol>"},{"location":"extras/fanarttv/#quality-control","title":"Quality Control","text":"<ul> <li>All artwork is community-reviewed before acceptance</li> <li>Images meet specific quality and resolution standards</li> <li>Multiple image variations available for most artists</li> <li>Consistent styling and professional appearance</li> </ul>"},{"location":"extras/fanarttv/#configuration-options","title":"Configuration Options","text":""},{"location":"extras/fanarttv/#content-selection","title":"Content Selection","text":"<ul> <li> <p>Enable banners: Download artist banner images</p> </li> <li> <p>Enable fan art: Download background/fan art images</p> </li> <li> <p>Enable logos: Download artist logo graphics</p> </li> <li> <p>Enable thumbnails: Download artist photos/thumbnails</p> </li> </ul>"},{"location":"extras/fanarttv/#image-preferences","title":"Image Preferences","text":"<ul> <li> <p>Image limits: Control how many images to download per artist</p> </li> <li> <p>Resolution preferences: Available images meet FanArt.TV quality standards</p> </li> <li> <p>Caching: All images are cached locally to minimize API calls</p> </li> </ul>"},{"location":"extras/fanarttv/#best-practices","title":"Best Practices","text":""},{"location":"extras/fanarttv/#improve-coverage","title":"Improve Coverage","text":"<ul> <li>Use music files with complete MusicBrainz integration</li> <li>Ensure artist names match MusicBrainz database entries</li> <li>Keep music library well-tagged with artist/album/title information</li> <li>Enable AcoustID for automatic MusicBrainz ID population</li> </ul>"},{"location":"extras/fanarttv/#optimize-performance","title":"Optimize Performance","text":"<ul> <li>Let MusicBrainz run first to populate Artist IDs</li> <li>FanArt.TV works best as a secondary service after MusicBrainz</li> <li>Cache settings help reduce API calls during live sets</li> </ul>"},{"location":"extras/fanarttv/#troubleshooting","title":"Troubleshooting","text":""},{"location":"extras/fanarttv/#no-images-found","title":"No Images Found","text":"<ul> <li> <p>Check MusicBrainz IDs: Verify tracks have MusicBrainz Artist IDs</p> </li> <li> <p>Enable MusicBrainz: Required for FanArt.TV to work</p> </li> <li> <p>Artist coverage: Not all artists have FanArt.TV artwork</p> </li> <li> <p>API key validity: Ensure API key is active and correct</p> </li> </ul>"},{"location":"extras/fanarttv/#poor-image-quality","title":"Poor Image Quality","text":"<ul> <li>FanArt.TV maintains high quality standards - poor images are rare</li> <li>If images appear low quality, they may be from other services</li> <li>Check that FanArt.TV is actually being used (not Discogs/TheAudioDB)</li> </ul>"},{"location":"extras/fanarttv/#missing-artist-coverage","title":"Missing Artist Coverage","text":"<ul> <li>FanArt.TV focuses on popular/mainstream artists</li> <li>Obscure or very new artists may not have coverage</li> <li>Consider using Discogs or TheAudioDB for broader artist coverage</li> <li>Community-driven - coverage depends on volunteer contributions</li> </ul>"},{"location":"extras/fanarttv/#api-issues","title":"API Issues","text":"<ul> <li> <p>Rate limits: FanArt.TV has API rate limiting</p> </li> <li> <p>API key expired: Check if API key needs renewal</p> </li> <li> <p>Network issues: Verify internet connectivity</p> </li> <li> <p>Service downtime: Check FanArt.TV service status</p> </li> </ul>"},{"location":"extras/fanarttv/#integration-with-other-services","title":"Integration with Other Services","text":"<p>FanArt.TV works best alongside other Artist Extras services:</p> <ul> <li> <p>Use with MusicBrainz: Required for Artist ID lookup</p> </li> <li> <p>Complement Discogs: FanArt.TV for quality, Discogs for coverage</p> </li> <li> <p>Combine with TheAudioDB: Different image types and artist coverage</p> </li> <li> <p>Fallback strategy: Configure multiple services for comprehensive coverage</p> </li> </ul>"},{"location":"extras/fanarttv/#community-and-quality","title":"Community and Quality","text":"<ul> <li> <p>Volunteer-driven: Community members contribute and review artwork</p> </li> <li> <p>Quality standards: All images meet resolution and quality requirements</p> </li> <li> <p>Regular updates: New artwork added regularly by the community</p> </li> <li> <p>Professional focus: Designed for media centers and streaming applications</p> </li> </ul>"},{"location":"extras/theaudiodb/","title":"TheAudioDB","text":"<p>TheAudioDB is a community-driven music database that provides comprehensive artist information, high-quality artwork, and detailed metadata. It offers excellent coverage across all music genres and works with both artist name searches and MusicBrainz IDs for maximum flexibility.</p>"},{"location":"extras/theaudiodb/#what-theaudiodb-provides","title":"What TheAudioDB Provides","text":"<p>Content Types:</p> <ul> <li>Artist banners and promotional images</li> <li>Detailed artist biographies and background information</li> <li>Fan art and background images</li> <li>Artist logos and graphics</li> <li>Artist thumbnails and photos</li> <li>Website links and social media information</li> </ul> <p>Strengths:</p> <ul> <li>Comprehensive artist coverage across all genres</li> <li>Detailed biographies with rich background information</li> <li>Fallback artist name search when MusicBrainz IDs aren't available</li> <li>Good balance of mainstream and independent artist coverage</li> <li>Multiple image types and variations per artist</li> </ul> <p>Flexibility:</p> <ul> <li>Works with MusicBrainz Artist IDs (preferred for accuracy)</li> <li>Falls back to artist name search when IDs unavailable</li> <li>Good coverage for both popular and lesser-known artists</li> </ul>"},{"location":"extras/theaudiodb/#setup","title":"Setup","text":"<p>Note: TheAudioDB settings are located under Artist Data in the settings menu.</p>"},{"location":"extras/theaudiodb/#api-access","title":"API Access","text":"<ol> <li>Visit TheAudioDB API Guide</li> <li>Register for an account and request an API key</li> <li>Copy your API key once provided</li> <li>Paste it into the What's Now Playing TheAudioDB settings</li> </ol>"},{"location":"extras/theaudiodb/#media-requirements","title":"Media Requirements","text":"<p>TheAudioDB works with minimal requirements:</p> <ul> <li> <p>Artist name (minimum requirement)</p> </li> <li> <p>MusicBrainz Artist ID (preferred for better accuracy)</p> </li> <li> <p>Album/title information (helps with disambiguation)</p> </li> </ul>"},{"location":"extras/theaudiodb/#how-theaudiodb-works","title":"How TheAudioDB Works","text":""},{"location":"extras/theaudiodb/#lookup-strategy","title":"Lookup Strategy","text":"<p>TheAudioDB uses a two-tier approach for maximum coverage:</p> <ol> <li>Primary lookup: If MusicBrainz Artist ID is available</li> <li>Direct lookup using the unique MusicBrainz ID</li> <li>Highest accuracy and reliability</li> <li> <p>Preferred method when available</p> </li> <li> <p>Fallback lookup: When no MusicBrainz ID is present</p> </li> <li>Text search using artist name</li> <li>Good coverage but may require disambiguation</li> <li>Still provides comprehensive results</li> </ol>"},{"location":"extras/theaudiodb/#content-quality","title":"Content Quality","text":"<ul> <li>Community-curated database with quality standards</li> <li>Rich biographical information from multiple sources</li> <li>High-resolution artwork suitable for streaming</li> <li>Regular updates and community contributions</li> </ul>"},{"location":"extras/theaudiodb/#configuration-options","title":"Configuration Options","text":""},{"location":"extras/theaudiodb/#content-selection","title":"Content Selection","text":"<ul> <li> <p>Enable biographies: Download detailed artist background information</p> </li> <li> <p>Enable images: Download banners, fan art, logos, and thumbnails</p> </li> <li> <p>Enable websites: Include artist social media and official links</p> </li> <li> <p>MusicBrainz preference: Prioritize MusicBrainz ID lookups over name search</p> </li> </ul>"},{"location":"extras/theaudiodb/#performance-settings","title":"Performance Settings","text":"<ul> <li> <p>Timeout configuration: Adjustable API request timeouts</p> </li> <li> <p>Caching: All responses cached to minimize API usage</p> </li> <li> <p>Rate limiting: Automatic throttling to respect API limits</p> </li> </ul>"},{"location":"extras/theaudiodb/#best-practices","title":"Best Practices","text":""},{"location":"extras/theaudiodb/#improve-accuracy","title":"Improve Accuracy","text":"<ul> <li>Enable MusicBrainz recognition for automatic Artist ID population</li> <li>Use well-tagged music files with complete artist information</li> <li>Consider using AcoustID to populate MusicBrainz data automatically</li> <li>Keep consistent artist naming in your music library</li> </ul>"},{"location":"extras/theaudiodb/#optimize-coverage","title":"Optimize Coverage","text":"<ul> <li>TheAudioDB excels as a comprehensive fallback service</li> <li>Works well for artists not covered by FanArt.TV</li> <li>Good balance between quality and coverage</li> <li>Effective for both mainstream and independent artists</li> </ul>"},{"location":"extras/theaudiodb/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Let MusicBrainz run first to populate Artist IDs when possible</li> <li>Fallback name search still provides excellent results</li> <li>Cache settings help reduce API calls during live performances</li> </ul>"},{"location":"extras/theaudiodb/#troubleshooting","title":"Troubleshooting","text":""},{"location":"extras/theaudiodb/#no-results-found","title":"No Results Found","text":"<ul> <li> <p>Check artist name spelling: Verify against TheAudioDB.com manually</p> </li> <li> <p>Try name variations: Remove articles like \"The\", try alternate spellings</p> </li> <li> <p>Enable MusicBrainz: Provides more accurate lookups</p> </li> <li> <p>Verify API key: Ensure API key is valid and active</p> </li> </ul>"},{"location":"extras/theaudiodb/#duplicate-or-wrong-artists","title":"Duplicate or Wrong Artists","text":"<ul> <li> <p>Common artist names: Names like \"Madonna\" may return multiple matches</p> </li> <li> <p>Use MusicBrainz IDs: Eliminates ambiguity with unique identifiers</p> </li> <li> <p>Add album context: Additional metadata helps disambiguation</p> </li> <li> <p>Check TheAudioDB manually: Verify correct artist exists in database</p> </li> </ul>"},{"location":"extras/theaudiodb/#missing-content-types","title":"Missing Content Types","text":"<ul> <li> <p>Artist coverage varies: Not all artists have complete information</p> </li> <li> <p>Biography availability: Depends on community contributions</p> </li> <li> <p>Image availability: Some artists may have limited artwork</p> </li> <li> <p>Recent artists: Very new artists may not be in database yet</p> </li> </ul>"},{"location":"extras/theaudiodb/#api-issues","title":"API Issues","text":"<ul> <li> <p>Rate limiting: TheAudioDB has usage limits for API access</p> </li> <li> <p>Network timeouts: Adjust timeout settings if experiencing issues</p> </li> <li> <p>API key problems: Verify key is active and has proper permissions</p> </li> <li> <p>Service availability: Check TheAudioDB service status</p> </li> </ul>"},{"location":"extras/theaudiodb/#integration-with-other-services","title":"Integration with Other Services","text":"<p>TheAudioDB works excellently alongside other Artist Extras services:</p> <ul> <li> <p>Complement FanArt.TV: TheAudioDB for coverage, FanArt.TV for curated quality</p> </li> <li> <p>Work with Discogs: Different strengths and artist coverage</p> </li> <li> <p>Enhance with MusicBrainz: Provides accurate Artist IDs for better matching</p> </li> <li> <p>Fallback strategy: Excellent as primary or secondary service</p> </li> </ul>"},{"location":"extras/theaudiodb/#community-and-database","title":"Community and Database","text":"<ul> <li> <p>Community-driven: Built and maintained by music enthusiasts</p> </li> <li> <p>Open contributions: Community members can add and edit information</p> </li> <li> <p>Quality focus: Balance between comprehensive coverage and quality</p> </li> <li> <p>Regular updates: Database continuously updated with new artists and information</p> </li> <li> <p>Genre diversity: Strong coverage across all music genres and eras</p> </li> </ul>"},{"location":"extras/wikimedia/","title":"Wikimedia","text":"<p>Wikimedia provides free, open-source artist biographies and background information sourced from Wikipedia and other Wikimedia projects. This service offers high-quality, encyclopedic content about artists across all genres and eras, with no API key required.</p>"},{"location":"extras/wikimedia/#what-wikimedia-provides","title":"What Wikimedia Provides","text":"<p>Content Types:</p> <ul> <li>Detailed artist biographies from Wikipedia</li> <li>Background information and career histories</li> <li>Artist descriptions and contextual information</li> <li>Multiple language support for international artists</li> </ul> <p>Strengths:</p> <ul> <li>Completely free with no API key requirements</li> <li>High-quality encyclopedic content</li> <li>Comprehensive coverage of notable artists across all genres</li> <li>Multiple language support for better international coverage</li> <li>Community-maintained and regularly updated</li> <li>Reliable, factual information from trusted sources</li> </ul> <p>Coverage:</p> <ul> <li>Excellent for established and notable artists</li> <li>Strong historical coverage across all music eras</li> <li>Good international artist coverage with multilingual support</li> <li>Limited coverage for very new or obscure artists</li> </ul>"},{"location":"extras/wikimedia/#setup","title":"Setup","text":"<p>Note: Wikimedia settings are located under Artist Data in the settings menu.</p>"},{"location":"extras/wikimedia/#configuration","title":"Configuration","text":"<p>No API key required! Simply:</p> <ol> <li>Open Artist Data settings in What's Now Playing</li> <li>Navigate to Wikimedia configuration</li> <li>Enable biography downloads</li> <li>Select preferred languages for content</li> <li>Configure performance settings as needed</li> </ol>"},{"location":"extras/wikimedia/#language-selection","title":"Language Selection","text":"<p>Wikimedia supports multiple languages:</p> <ul> <li> <p>Primary language: Default language for biography content</p> </li> <li> <p>Fallback languages: Additional languages to try if primary isn't available</p> </li> <li> <p>Automatic detection: Uses artist origin/region when possible</p> </li> </ul>"},{"location":"extras/wikimedia/#how-wikimedia-works","title":"How Wikimedia Works","text":""},{"location":"extras/wikimedia/#content-sources","title":"Content Sources","text":"<p>Wikimedia draws from the Wikimedia Foundation ecosystem:</p> <ul> <li> <p>Wikipedia: Primary source for artist biographies</p> </li> <li> <p>Wikidata: Structured data about artists and relationships</p> </li> <li> <p>Wikimedia Commons: Free media files (though images handled separately)</p> </li> </ul>"},{"location":"extras/wikimedia/#lookup-process","title":"Lookup Process","text":"<ol> <li>Artist identification: Uses artist name from track metadata</li> <li>Wikipedia search: Searches Wikipedia for matching artist articles</li> <li>Content extraction: Extracts relevant biographical information</li> <li>Language handling: Tries preferred languages, falls back to available content</li> <li>Caching: Stores content locally to minimize requests</li> </ol>"},{"location":"extras/wikimedia/#content-quality","title":"Content Quality","text":"<ul> <li>Editorial standards maintained by Wikipedia community</li> <li>Neutral point of view and verifiable information</li> <li>Regular updates from global community of editors</li> <li>Multiple language versions often available</li> </ul>"},{"location":"extras/wikimedia/#configuration-options","title":"Configuration Options","text":""},{"location":"extras/wikimedia/#content-selection","title":"Content Selection","text":"<ul> <li> <p>Enable biographies: Download artist biographical content</p> </li> <li> <p>Biography length: Control how much content to retrieve</p> </li> <li> <p>Language preferences: Set primary and fallback languages</p> </li> </ul>"},{"location":"extras/wikimedia/#language-settings","title":"Language Settings","text":"<ul> <li> <p>Primary language: First choice for biography content (e.g., \"en\" for English)</p> </li> <li> <p>Secondary languages: Fallback options when primary unavailable</p> </li> <li> <p>Auto-detection: Attempt to detect appropriate language for artist</p> </li> </ul>"},{"location":"extras/wikimedia/#performance-settings","title":"Performance Settings","text":"<ul> <li> <p>Request timeouts: Configurable timeout for Wikipedia API calls</p> </li> <li> <p>Caching duration: How long to store content locally</p> </li> <li> <p>Rate limiting: Respectful API usage with automatic throttling</p> </li> </ul>"},{"location":"extras/wikimedia/#best-practices","title":"Best Practices","text":""},{"location":"extras/wikimedia/#improve-content-quality","title":"Improve Content Quality","text":"<ul> <li>Use accurate artist names that match Wikipedia article titles</li> <li>Consider common name variations (e.g., \"The Beatles\" vs \"Beatles\")</li> <li>Well-tagged music files help with accurate artist identification</li> </ul>"},{"location":"extras/wikimedia/#language-optimization","title":"Language Optimization","text":"<ul> <li>Set appropriate primary language for your audience</li> <li>Configure fallback languages for better international coverage</li> <li>Consider artist origin when selecting language preferences</li> </ul>"},{"location":"extras/wikimedia/#performance-optimization","title":"Performance Optimization","text":"<ul> <li>Wikimedia is lightweight with no API key restrictions</li> <li>Excellent as a primary biography source</li> <li>Fast response times due to Wikipedia's global infrastructure</li> <li>Effective caching reduces repeat requests</li> </ul>"},{"location":"extras/wikimedia/#troubleshooting","title":"Troubleshooting","text":""},{"location":"extras/wikimedia/#no-biography-found","title":"No Biography Found","text":"<ul> <li> <p>Check artist name: Verify spelling matches Wikipedia article titles</p> </li> <li> <p>Try name variations: Search Wikipedia manually to find correct article name</p> </li> <li> <p>Notable artists only: Wikipedia typically covers notable/established artists</p> </li> <li> <p>Language availability: Try different language settings</p> </li> </ul>"},{"location":"extras/wikimedia/#content-quality-issues","title":"Content Quality Issues","text":"<ul> <li> <p>Multiple artists: Common names may return wrong artist information</p> </li> <li> <p>Disambiguation: Some artist names may need disambiguation (add genre/era context)</p> </li> <li> <p>Incomplete content: Some artists may have brief Wikipedia articles</p> </li> </ul>"},{"location":"extras/wikimedia/#language-problems","title":"Language Problems","text":"<ul> <li> <p>Primary language unavailable: Content may fall back to other languages</p> </li> <li> <p>Encoding issues: Verify language settings match your system configuration</p> </li> <li> <p>Translation quality: Different language versions may have varying detail levels</p> </li> </ul>"},{"location":"extras/wikimedia/#performance-issues","title":"Performance Issues","text":"<ul> <li> <p>Network connectivity: Verify internet connection to Wikipedia</p> </li> <li> <p>Timeout settings: Adjust timeout values if experiencing slow responses</p> </li> <li> <p>Cache problems: Clear cache if experiencing stale content issues</p> </li> </ul>"},{"location":"extras/wikimedia/#integration-with-other-services","title":"Integration with Other Services","text":"<p>Wikimedia works excellently alongside other Artist Extras services:</p> <ul> <li> <p>Biography focus: Specializes in high-quality biographical content</p> </li> <li> <p>Complement image services: Use with FanArt.TV/Discogs/TheAudioDB for images</p> </li> <li> <p>Free alternative: No API costs unlike commercial services</p> </li> <li> <p>Primary biography source: Often the best starting point for artist information</p> </li> </ul>"},{"location":"extras/wikimedia/#advantages-of-wikimedia","title":"Advantages of Wikimedia","text":""},{"location":"extras/wikimedia/#cost-effective","title":"Cost-Effective","text":"<ul> <li> <p>Completely free: No API keys, registration, or usage limits</p> </li> <li> <p>No rate limiting concerns: Generous usage policies for applications</p> </li> <li> <p>Sustainable: Supported by Wikimedia Foundation, not dependent on commercial services</p> </li> </ul>"},{"location":"extras/wikimedia/#quality-assurance","title":"Quality Assurance","text":"<ul> <li> <p>Editorial standards: Wikipedia's editorial policies ensure quality content</p> </li> <li> <p>Community oversight: Thousands of editors maintain and improve content</p> </li> <li> <p>Verifiable information: Sources and citations required for content</p> </li> <li> <p>Neutral perspective: Balanced, encyclopedic coverage</p> </li> </ul>"},{"location":"extras/wikimedia/#technical-reliability","title":"Technical Reliability","text":"<ul> <li> <p>High availability: Wikipedia's robust global infrastructure</p> </li> <li> <p>Fast response times: Optimized content delivery worldwide</p> </li> <li> <p>Multiple formats: Flexible API supporting various content formats</p> </li> <li> <p>Long-term stability: Established service with consistent API</p> </li> </ul>"},{"location":"help/","title":"Help","text":"<p>Get help with What's Now Playing - from common questions to troubleshooting and development information.</p>"},{"location":"help/#help-sections","title":"Help Sections","text":"<ul> <li>How Do I? - Frequently asked questions and common tasks</li> <li>Accuracy - Improving track identification and metadata accuracy</li> <li>Troubleshooting - Common issues and solutions</li> <li>Bug Reports - How to report bugs and issues</li> <li>Open Source - Open source information and licensing</li> <li>Developers - Developer documentation and contribution guide</li> </ul> <p>Click on any help section above for detailed information.</p>"},{"location":"help/accuracy/","title":"Improving Accuracy","text":"<p>The general rule is: the more data in, the better data out. A few metadata tags go a very long way. In order of most important to least important:</p> <ol> <li>Musicbrainz Recording IDs</li> <li>International Standard Recording Codes aka ISRCs</li> <li>Album + Artist + Title</li> <li>Artist + Title</li> <li>Title</li> </ol> <p>Even after all of that, sometimes things that you think should be found aren't, such as cover art. Unlike a lot of software, What's Now Playing errs on the side of caution.</p> <p>For example of what I mean, let's take a real world example. While testing some of the audio recognition and metadata downloading capabilities, Pet Shop Boys - \"Vocal\" was used as an input with no modification the metadata (so, in other words, very much wrong and very much a mess). Virtual DJ reported the song came from the album Electric and provided the cover art for that album. What's Now Playing with AcoustID enabled reported that the song was actually \"Vocal (Radio Edit)\" and appears on the album Spex CD #110. Since (at least as of this writing) that album does not have cover art, no cover art was provided.</p> <p>Which one is correct? Neither and both. It really depends upon the individual DJ's goals. From a software perspective, they are both an answer to the cover art question. It also demonstrates how a bit of manipulation of the title can yield very different results.</p> <p>This example is also important when working with systems such as Deezer, Tidal, etc, or even WinMedia as (ultimately) the source of your music. In the listing above, we are almost always at #4 since many pieces of the software involved do not provide the album information. Since there is no other information, it can sometimes be a bit hit or miss.</p> <p>For white labels, mixes, etc, the software will try as much as it can to locate something but that isn't always successful. In most cases, artist information is usually available. For mixes that are more than one person (e.g., \"A vs B\"-types), the software will generally pick one.</p> <p>In general, the primary principal thus far has been: if the actual track can't be found, then supply artist-level data. If nothing about the artist can be found, then supply nothing extra.</p> <p>Note that when it comes to finding the actual track: the more precise the better. For example:</p> <ul> <li>The Farm's \"All Together Now\" vs. \"Altogether Now\"</li> <li>Prince \"Purple Rain\" vs. Prince and the Revolution \"Purple Rain\"</li> </ul> <p>Each of those give slightly different results.</p> <p>Improving the quality of the data is an ongoing project. If you see something that you think should work but doesn't, feel free to submit a bug report or visit discord</p>"},{"location":"help/bugreports/","title":"Bug Reports and Feature Requests","text":"<p>What's Now Playing is open source software . That means unlike commercial software individuals have the capability to contribute in a variety of ways. Currently this project is hosted on Github which provides access to the source code, bugs and feature requests (issues), and a discussion area where you can ask questions.</p>"},{"location":"help/developers/","title":"Developers","text":"<p>NOTE: For people familiar with Python, it is HIGHLY RECOMMENDED that you use and build with venv due to the restrictive requirements of the tested packages listing. While newer versions MAY work, there is no guarantee that PyInstaller and other utilities will build a proper executable.</p>"},{"location":"help/developers/#development-requirements","title":"Development Requirements","text":"<p>To locally build and install What's Now Playing, you will need the following:</p> <ol> <li>Python for your operating system (3.10 or 3.11 is required. 3.12 has    issues)</li> <li>Access to a development shell (e.g., /Applications/Utility/Terminal     on OS X)</li> <li><code>git</code> installed and working</li> </ol>"},{"location":"help/developers/#linux-pre-work","title":"Linux Pre-work","text":"<p>If you are on Linux, it is recommended that you install dbus-python at the system level first to get the basic OS requirements put in place first. For example, for Debian-style systems:</p> <pre><code>sudo apt-get install python-dbus\n</code></pre>"},{"location":"help/developers/#macos-pre-work","title":"macOS Pre-work","text":"<p>You will need a working, modern ICU library:</p> <ol> <li><code>brew install icu4c</code></li> <li><code>export PKG_CONFIG_PATH=/usr/homebrew/opt/icu4c/lib/pkgconfig</code></li> </ol>"},{"location":"help/developers/#commands","title":"Commands","text":"<pre><code>python -m venv (virtualenv directory)\nsource (virtualenv directory)/bin/activate\ngit clone https://github.com/whastnowplaying/whats-now-playing.git\ncd whats-now-playing\ngit checkout [version]\npip install \".[dev,docs,osspecials,test]\n</code></pre> <p>At this point, you should be able to run the software from the shell:</p> <pre><code>NowPlaying\n</code></pre>"},{"location":"help/developers/#build-executable","title":"Build Executable","text":"<p>To build a stand-alone executable, there is a helper script to do all the work:</p> <ul> <li>macOS</li> </ul> <pre><code>builder.sh macosx\n</code></pre> <ul> <li>Windows</li> </ul> <pre><code>builder.sh windows\n</code></pre> <ul> <li>Other</li> </ul> <pre><code>builder.sh\n</code></pre> <p>This bash script will:</p> <ol> <li>Create a venv</li> <li>Install the contents of the venv</li> <li>Run PyInstaller</li> </ol> <p>In the end you should have a zip file with your newly built binary.</p> <p>There should now be a <code>dist</code> directory and inside that directory will be either a <code>NowPlaying.app</code> on OS X or just a <code>NowPlaying</code> single file.</p>"},{"location":"help/howdoi/","title":"How Do I","text":""},{"location":"help/howdoi/#improve-results-cover-art-biography-etc","title":"Improve Results (cover art, biography, etc)","text":"<p>See the page on Accuracy</p>"},{"location":"help/howdoi/#change-the-twitch-command-from-track-to-song","title":"Change the Twitch command from <code>!track</code> to <code>!song</code>?","text":"<p>The Twitch commands are all read directly from files. So copying one file to another is an easy way to add commands:</p> <ol> <li>Copy the <code>Documents/WhatsNowPlaying/templates/twitchbot_track.txt</code>    file to <code>twitchbot_song.txt</code></li> <li>Restart What's Now Playing</li> <li>Go into Twitch Chat settings and set the permissions as required.</li> </ol>"},{"location":"help/howdoi/#change-the-time-twitch-announcements-happen","title":"Change the time Twitch announcements happen?","text":"<p>Under Settings -&gt; Twitch Chat there is an 'Announce Delay' field that takes number of seconds to wait before announcing to chat. To things to keep in mind:</p> <ol> <li>It takes partial seconds, so .5 would be half of a second.</li> <li>This delay is in addition to the write delay under General.    Therefore if Write Delay is 5 seconds and Twitch Chat Announce Delay    is 5 seconds, it should be approximately 10 seconds from the track    being switched out before the message goes out.</li> </ol>"},{"location":"help/howdoi/#put-artist-biographies-in-twitch-chat","title":"Put artist biographies in Twitch chat?","text":"<ol> <li>Enable Twitchbot</li> <li>Enable one of the Artist Extras that supports    biographies.</li> <li>If your track metadata only has artist and title, you may need to    Enable Recognition</li> <li>Edit your Twitch Chat announce template to include either    <code>{{ artistshortbio }}</code> or <code>{{ artistlongbio }}</code></li> <li>Restart What's Now Playing</li> </ol>"},{"location":"help/howdoi/#put-artist-graphics-on-my-obsslobsseliveetc","title":"Put artist graphics on my OBS/SLOBS/SE.Live/etc?","text":"<p>Configure a <code>Browser Source</code> for your scene and put in one of the Supported URLs that is listed on the Webserver page.</p>"},{"location":"help/howdoi/#stop-autoposting-the-track-info-in-twitch-chat","title":"Stop autoposting the track info in Twitch chat?","text":"<ol> <li>Under Settings -&gt; Twitch Chat, set the announce template to be empty.</li> <li>Save</li> </ol>"},{"location":"help/opensource/","title":"Open Source","text":"<p>Keep in mind this software is done by volunteers in their spare time! It is also open source, so if you see something that should be fixed, wrong, or even just general feedback, you are part of the community as soon as you participate. Every contribution, no matter how small you might think it is, helps everyone out. We appreciate you!</p>"},{"location":"help/troubleshooting/","title":"Troubleshooting","text":"<p>Software is made by imperfect humans and thus tends to reflect that reality. Here are some tips and tricks to help you out:</p> <ul> <li> <p>Experience has shown that starting the What's Now Playing app as   the first piece of software in your stack generally results in a   better experience. So, for example:</p> </li> <li> <p>What's Now Playing</p> </li> <li>Virtual DJ</li> <li>OBS</li> </ul> <p>By the time OBS is up, What's Now Playing and your DJ software   should have performed their housekeeping tasks.</p> <ul> <li> <p>Be sure to remember to shut down What's Now Playing between   sessions. Because it hangs out in the menu bar, it is easy to forget   it is running!</p> </li> <li> <p>Letting the app run when the computer goes to sleep   has shown to be problematic as well.</p> </li> <li> <p>Don't forget that there is delay from when your computer starts   playing a song and when it finally makes it on-stream. There are also   delays between different devices in how the receive content. For   example, Apple TV devices may be up to a minute after you streamed   your track!</p> </li> <li> <p>Kick and Twitch use different locations worldwide, so you may need   different delays per service.</p> </li> <li> <p>You do not need to be streaming to participate in your channel's   Twitch chat. This fact means that What's Now Playing can be   running and sending track information to Twitch but your users won't   be alerted. Extremely useful for working out the aforementioned timing   issues.</p> </li> <li> <p>Check the current Bug   List   to see if any known problems apply to your situation.</p> </li> </ul>"},{"location":"input/","title":"Input Sources","text":"<p>For What's Now Playing to work, it needs to know what software is playing music. In the UI, this setting is called the Source. There are many sources available. Each has its own screen to configure them.</p>"},{"location":"input/#dj-software","title":"DJ Software","text":"<p>Professional DJ software with direct integration:</p> <ul> <li>Serato 4+ - Modern Serato DJ 4.0+ integration with auto-detection and SQLite database</li> <li>Serato 3.x - Legacy Serato DJ integration with smart crate support</li> <li>Traktor - Native Instruments Traktor with Icecast streaming + database enhancement</li> <li>Virtual DJ - Virtual DJ software with history file monitoring</li> <li>DJUCED - Hercules DJUCED software integration</li> <li>Denon - Denon DJ software integration</li> </ul>"},{"location":"input/#media-players","title":"Media Players","text":"<p>General media player software:</p> <ul> <li>JRiver - JRiver Media Center with REST API integration</li> <li>Windows Media - Windows Media Player integration</li> <li>MPRIS2 - Linux MPRIS2 media player interface (VLC, etc.)</li> </ul>"},{"location":"input/#streaming-files","title":"Streaming &amp; Files","text":"<p>Network streaming and file-based sources:</p> <ul> <li>Icecast - Icecast streaming server metadata</li> <li>M3U - M3U playlist file monitoring</li> <li>Remote - Remote input via REST API from other applications</li> </ul> <p>Click on any input source above to see detailed configuration instructions.</p>"},{"location":"input/denon/","title":"Denon DJ","text":"<p>NOTE: Both Newest and Oldest mix modes are supported.</p> <p>Connects directly to Denon DJ equipment over your network to get real-time track information.</p>"},{"location":"input/denon/#supported-equipment","title":"Supported Equipment","text":"<ul> <li>Denon DJ Prime series mixers (Prime 2, Prime 4, Prime Go/Go+)</li> <li>Denon DJ standalone players (SC5000, SC6000)</li> <li>Other StagelinQ-compatible Denon DJ equipment</li> </ul>"},{"location":"input/denon/#instructions","title":"Instructions","text":"<ol> <li>Ensure your Denon DJ equipment and computer are on the same network</li> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select Denon DJ from the list of available input sources</li> <li>Select Input Sources-&gt;Denon from the left-hand column</li> </ol>"},{"location":"input/denon/#setup","title":"Setup","text":"<ol> <li>Discovery Timeout - How long to wait for devices (default: 5 seconds)</li> <li>Deck Skip - Check decks to ignore during track detection</li> <li>Click Save</li> </ol>"},{"location":"input/denon/#how-it-works","title":"How It Works","text":"<p>What's Now Playing monitors all decks and selects the track your audience is actually hearing based on fader positions, crossfader state, and play status.</p>"},{"location":"input/denon/#troubleshooting","title":"Troubleshooting","text":""},{"location":"input/denon/#no-devices-found","title":"No Devices Found","text":"<ul> <li>Verify both devices are on the same network</li> <li>Try increasing the Discovery Timeout setting</li> <li>Restart What's Now Playing</li> <li>Check firewall settings</li> </ul>"},{"location":"input/denon/#wrong-track-detected","title":"Wrong Track Detected","text":"<ul> <li>Check deck skip settings</li> <li>Verify fader positions (very low faders are ignored)</li> <li>Try switching between \"newest\" and \"oldest\" mix modes</li> </ul>"},{"location":"input/denon/#connection-issues","title":"Connection Issues","text":"<ul> <li>Use wired network connection if possible</li> <li>Update Denon DJ firmware</li> <li>What's Now Playing will automatically reconnect</li> </ul>"},{"location":"input/djuced/","title":"DJUCED Support","text":"<p>DJUCED is DJ software built by Guillemot Corporation for their line of Hercules controllers.</p> <p>NOTE: This source does not support Oldest mix mode.</p> <p>NOTE: Only tested with DJUCED 6.0.1</p>"},{"location":"input/djuced/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select DJUCED from the list of available input sources</li> </ol> <ol> <li>Select Input Sources-&gt;DJUCED from the left-hand column</li> <li>Enter or, using the button, select the directory where the DJUCED    files are located.</li> <li>Configure artist query scope for the !hasartist command - either entire library or specific playlists (comma-separated)</li> <li>Click Save</li> </ol> <ol> <li>In DJUCED, go to Settings -&gt; Record and turn on Text File Output</li> <li>Change the Format to be: <code>%TI% | %DE% | %AR% | %AL%</code></li> <li>Use the default filename <code>playing.txt</code> and save it in the DJUCED directory</li> </ol>"},{"location":"input/icecast/","title":"Icecast","text":"<p>Icecast is a popular system to stream audio over the Internet.</p> <p>NOTE: This source does not support Oldest mix mode.</p> <p>Icecast is best for:</p> <ul> <li>Software without dedicated What's Now Playing support (like MIXXX)</li> <li>Generic audio streaming applications (like butt)</li> <li>Custom setups where other inputs don't work</li> </ul>"},{"location":"input/icecast/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select Icecast from the list of available input sources</li> </ol> <ol> <li>Select Input Sources-&gt;Icecast from the left-hand column</li> <li>If necessary, change the port from 8000 to another port, such    as 5001. (Hint: port 8000 appears to be used on macOS.)</li> <li>Click Save</li> <li>If you changed the Icecast port, restart What's Now Playing</li> </ol>"},{"location":"input/icecast/#settings-for-mixxx","title":"Settings For MIXXX","text":"<p>NOTE: MIXXX allows for significant screen customization. These images come from the 'Late Night' setting. Your display may be different.</p> <ol> <li>Configure What's Now Playing as above</li> <li>In Preferences, go to Live Broadcasting</li> </ol> <p></p> <ol> <li>Under Server Connection:</li> <li>Set the address to 127.0.0.1 for the same machine, otherwise       change to the IP address of the machine that is running What's       Now Playing. (HINT: IP Address is visible on What's Now       Playing's Webserver setting page)</li> <li>Change the Port to match the port in What's Now Playing's       Iceast settings page.</li> <li>Under Encoding, change the format to be 32 kbps, Ogg Vorbis, Mono.</li> <li>Select 'OK' to exit Preferences</li> <li>Back on the main MIXXX screen, activate Icecast broadcasting:</li> </ol> <p></p> <ol> <li>Click the 'On-Air' option. It may appear as above or as an antenna.</li> <li>It should change to a solid color, usually green. On error (there is    usually a pop-up window), double check all settings in What's Now    Playing and MIXXX to make sure they match.</li> </ol>"},{"location":"input/icecast/#settings-for-butt","title":"Settings for butt","text":"<p>Under Audio, be sure that Ogg Vorbis is selected:</p> <p></p> <p>Under Stream, if using the 'Update song name from application', be sure to use 'Title - Artist' mode.</p> <p></p>"},{"location":"input/jriver/","title":"JRiver","text":"<p>JRiver Media Center is a commercial media player application that runs on Windows, Mac, and Linux. What's Now Playing connects to JRiver using the MCWS (Media Center Web Service) API to retrieve currently playing track information.</p> <p>The JRiver input source supports both local and remote connections to JRiver Media Center instances. For local connections, What's Now Playing can also retrieve the full file path of the currently playing track.</p> <p>NOTE: This source does not support Oldest mix mode.</p>"},{"location":"input/jriver/#requirements","title":"Requirements","text":"<ul> <li>JRiver Media Center (version 20 or later recommended)</li> <li>MCWS (Media Center Web Service) enabled in JRiver</li> <li>Network connectivity between What's Now Playing and JRiver (if   running on different machines)</li> </ul>"},{"location":"input/jriver/#setup-instructions","title":"Setup Instructions","text":""},{"location":"input/jriver/#jriver-configuration","title":"JRiver Configuration","text":"<ol> <li>Open JRiver Media Center</li> <li>Go to Tools \u2192 Options \u2192 Media Network</li> <li>Check Use Media Network to share this library</li> </ol> <ol> <li>Note the Access Key if one is displayed (optional but    recommended for security)</li> </ol> <ol> <li>Configure authentication if desired:</li> <li>Check Require authentication for requests</li> <li>Set a Username and Password</li> </ol> <ol> <li>Note the Port number under Advanced and in some of the previous    displays (default is 52199)</li> <li>Click OK to save settings</li> </ol>"},{"location":"input/jriver/#whats-now-playing-configuration","title":"What's Now Playing Configuration","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select JRiver from the list of available input sources</li> </ol> <p>[](images/jriver-source-setup.png</p> <ol> <li>Select JRiver from the left-hand column to configure settings</li> </ol> <p>Host/IP Address The hostname or IP address of the machine running JRiver Media Center.</p> <ul> <li>Use <code>localhost</code> or <code>127.0.0.1</code> if JRiver is on the same machine</li> <li>Use the IP address (e.g., <code>192.168.1.100</code>) for remote connections</li> <li>IPv6 addresses are supported and will be automatically formatted   correctly</li> </ul> <p>Port The port number for MCWS connections (default: <code>52199</code>)</p> <p>Username (Optional) Username for authentication if required by JRiver</p> <p>Password (Optional) Password for authentication if required by JRiver</p> <p>Access Key (Optional) Access key for additional security validation if configured in JRiver</p>"},{"location":"input/jriver/#connection-types","title":"Connection Types","text":""},{"location":"input/jriver/#local-connections","title":"Local Connections","text":"<p>Local connections are automatically detected for:</p> <ul> <li><code>localhost</code>, <code>127.0.0.1</code>, <code>::1</code></li> <li>Private IP addresses (192.168.x.x, 10.x.x.x, 172.16.x.x)</li> <li>Local domain patterns (<code>.local</code>, <code>.lan</code>, <code>.home</code>, <code>.internal</code>)</li> </ul> <p>For local connections, What's Now Playing will attempt to retrieve the full file path of the currently playing track, which can be useful for other applications or logging.</p>"},{"location":"input/jriver/#remote-connections","title":"Remote Connections","text":"<p>Remote connections are used for all other hostnames and public IP addresses. File paths are not retrieved for remote connections for security reasons.</p>"},{"location":"input/jriver/#testing-your-connection","title":"Testing Your Connection","text":"<p>You can test your JRiver MCWS configuration by opening a web browser and visiting:</p> <p><code>http://[host]:[port]/MCWS/v1/Alive</code></p> <p>For example: <code>http://localhost:52199/MCWS/v1/Alive</code></p> <p>This should return an XML response showing your JRiver server information if the connection is working correctly.</p>"},{"location":"input/jriver/#troubleshooting","title":"Troubleshooting","text":""},{"location":"input/jriver/#connection-failed","title":"Connection Failed","text":"<ul> <li>Verify JRiver Media Center is running</li> <li>Check that Media Network is enabled in JRiver settings</li> <li>Ensure the correct host/IP address and port are configured</li> <li>For remote connections, verify network connectivity and firewall   settings</li> </ul>"},{"location":"input/jriver/#authentication-failed","title":"Authentication Failed","text":"<ul> <li>Verify username and password are correct (if authentication is   enabled)</li> <li>Check that the access key matches (if configured)</li> <li>Ensure authentication is properly enabled in JRiver if credentials are   provided</li> </ul>"},{"location":"input/jriver/#no-track-information","title":"No Track Information","text":"<ul> <li>Ensure music is currently playing in JRiver</li> <li>Check that JRiver is not paused</li> <li>Verify the MCWS API is responding by testing the connection URL in a   browser</li> </ul>"},{"location":"input/jriver/#file-path-not-available","title":"File Path Not Available","text":"<p>File paths are only available for local connections. Remote connections will not include file path information for security reasons.</p>"},{"location":"input/jriver/#supported-track-information","title":"Supported Track Information","text":"<p>The JRiver input source provides the following track metadata:</p> <ul> <li>Artist - Track artist name</li> <li>Album - Album name</li> <li>Title - Track title</li> <li>Duration - Track length in seconds</li> <li>Filename - Full file path (local connections only)</li> </ul> <p>Additional track metadata may be available depending on how the tracks are tagged in JRiver.</p>"},{"location":"input/m3u/","title":"M3U Support","text":"<p>M3U is a somewhat standardized file format that many different applications write.  Some applications have direct support, such as Virtual DJ, and should be used instead as there is extra handling for them.</p> <p>NOTE: This source does not support Oldest mix mode.</p>"},{"location":"input/m3u/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select M3U from the list of available input sources</li> </ol> <ol> <li>Select Input Sources-&gt;M3U from the left-hand column</li> <li>Change the directory where the M3U files will appear</li> <li>Click Save</li> </ol> <p>What's Now Playing will read that directory, reading the most current m3u file for the currently playing track information.</p>"},{"location":"input/mpris2/","title":"MPRIS2","text":"<p>MPRIS2 is a specification for Linux DBus compatible music software to communicate with each other. What's Now Playing supports reading track data from MPRIS2 sources, including VLC.</p> <p>NOTE: This source does not support Oldest mix mode.</p>"},{"location":"input/mpris2/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select the MPRIS2 from the list of available input sources.</li> </ol> <ol> <li>Select Input Sources-&gt;MPRIS2 from the left-hand column</li> <li>Select from the detected MPRIS2 sources. Closing and re-opening the    Settings UI will update the list.</li> <li>Click Save</li> </ol>"},{"location":"input/remote/","title":"Remote Services","text":"<p>A common streaming configuration is to have more than one computer involved, such as one computer working as the DJ machine and one computer for processing the stream.  In some very advanced configurations, there might even be more than one DJ on different computers swapping back and forth!</p> <p>What's Now Playing supports a configuration where each setup has their own app configuration running.  One or more installations on DJ computers send the track information to a central one.  That central one will then perform any additional lookups and send the output to anything configured such as Twitch.</p>"},{"location":"input/remote/#instructions","title":"Instructions","text":""},{"location":"input/remote/#server-side","title":"Server Side","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select Remote from the list of available input sources</li> <li>Configure the webserver and optionally set a secret</li> </ol>"},{"location":"input/remote/#client-side","title":"Client Side","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Output &amp; Display-&gt;Remote Output from the left-hand column</li> <li>Enable it</li> <li>Set Server to the hostname or IP address of the server computer</li> <li>Set Port to match the server's webserver port</li> <li>Set Secret if the server has one configured</li> <li>Configure your DJ software as usual (Core Settings-&gt;Source and Input Sources)</li> </ol> <p>NOTE: Some content, such as cover art, will not be sent to the remote server.</p>"},{"location":"input/remote/#client-configuration-notes","title":"Client Configuration Notes","text":"<p>Turn off these services on client computers to avoid conflicts:</p> <ul> <li>Artist Extras</li> <li>Discord</li> <li>Kick Chat</li> <li>Twitch (Chat and Requests)</li> </ul> <p>Recognition services (like AcoustID) must run on the client computer since they need local file access.</p>"},{"location":"input/remote/#dj-software-integration-examples","title":"DJ Software Integration Examples","text":"<p>Some DJ software can send track information directly to What's Now Playing via HTTP requests:</p> <p>MegaSeg (Logging \u2192 Send track info to server):</p> <pre><code>http://localhost:8899/v1/remoteinput?title=%Title%&amp;artist=%Artist%&amp;album=%Album%&amp;year=%Year%&amp;duration=%LengthSeconds%&amp;bpm=%BPM%&amp;composer=%Composer%&amp;lyricist=%Lyricist%&amp;publisher=%Publisher%\n</code></pre> <p>Radiologik (Publishing \u2192 Network &amp; Serial \u2192 GET URL):</p> <pre><code>http://localhost:8899/v1/remoteinput?title=&lt;t&gt;&amp;artist=&lt;a&gt;&amp;album=&lt;l&gt;&amp;isrc=&lt;i&gt;&amp;composer=&lt;comp&gt;&amp;publisher=&lt;p&gt;&amp;year=&lt;y&gt;&amp;duration=&lt;s&gt;&amp;comment=&lt;c&gt;\n</code></pre> <p>Replace <code>localhost:8899</code> with your server's hostname and webserver port. If a secret is configured, add <code>&amp;secret=your_secret_key</code> to the URL.</p>"},{"location":"input/remote/#advanced-api-usage","title":"Advanced API Usage","text":"<p>For detailed API documentation including request/response formats, authentication, and validation details, see the API Reference.</p>"},{"location":"input/serato/","title":"Serato 4+","text":"<p>Using older Serato versions? See Serato 3.x</p>"},{"location":"input/serato/#setup","title":"Setup","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select \"Serato\" from the list of available input sources</li> <li>Select Input Sources-&gt;Serato from the left-hand column</li> </ol>"},{"location":"input/serato/#configuration","title":"Configuration","text":"<p>TODO: put image here</p>"},{"location":"input/serato/#local-mode-recommended","title":"Local Mode (Recommended)","text":"<p>Select Local if What's Now Playing runs on the same computer as Serato:</p> <ul> <li>Database Status: Shows whether your Serato library was found automatically</li> <li>Ignore Deck(s): Check any decks you want to skip (1, 2, 3, 4)</li> <li>Mix Mode:</li> <li>Newest: Show the most recently started track</li> <li>Oldest: Show the longest-playing track</li> </ul> <p>No other setup is required - the plugin finds your Serato library automatically.</p>"},{"location":"input/serato/#remote-mode","title":"Remote Mode","text":"<p>Select Remote if What's Now Playing runs on a different computer than Serato:</p> <ol> <li>In Serato: Enable Live Playlists</li> <li>Go to Setup \u2192 Expansion Pack tab</li> <li>Check \"Enable Live Playlists\"</li> <li> <p>Click \"Start Live Playlist\" in the History panel</p> </li> <li> <p>In your web browser: Make the playlist public</p> </li> <li>Serato opens your Live Playlist webpage</li> <li>Click \"Edit Details\"</li> <li>Change visibility to \"Public\"</li> <li> <p>Copy the playlist URL</p> </li> <li> <p>In What's Now Playing:</p> </li> <li>Paste the URL into the URL field</li> <li>Set polling interval (30 seconds is recommended)</li> </ol> <p>Note: Remote mode only provides artist and title information.</p>"},{"location":"input/serato/#troubleshooting","title":"Troubleshooting","text":""},{"location":"input/serato/#no-serato-4-installation-found","title":"\"No Serato 4+ installation found\"","text":"<ul> <li>Make sure Serato DJ Pro/Lite 4.0+ is installed</li> <li>Run Serato at least once after installation</li> <li>Restart What's Now Playing</li> </ul>"},{"location":"input/serato/#tracks-not-showing-up","title":"Tracks not showing up","text":"<ul> <li>Make sure tracks are actually playing (not just loaded)</li> <li>Check that your crossfader isn't cutting off the track</li> <li>Verify your DJ controller is working properly in Serato</li> </ul>"},{"location":"input/serato/#tracks-updating-slowly","title":"Tracks updating slowly","text":"<ul> <li>Go to Settings \u2192 Quirks</li> <li>Enable \"Use Polling Observer\"</li> <li>Set polling interval to 1.0 seconds</li> </ul>"},{"location":"input/serato3/","title":"Serato 3.x (Legacy)","text":"<p>Using Serato 4.0+? See the new Serato 4+ plugin NOTE: Both Serato DJ Pro and Serato DJ Lite legacy versions are supported.</p> <p>Serato is a commercial software package that runs on Mac OS X and Windows. What's Now Playing has two modes with which it may use Serato as an input: Local and Remote.</p> <p>In Local mode, What's Now Playing will read the local session data on your computer directly. This mode has much more data available to use but requires What's Now Playing to run on the DJ computer.</p> <p>In Remote mode, What's Now Playing will read Serato Live Playlists over the Internet. This mode allows for What's Now Playing to run on a different computer than the DJ computer, but does not have as much data available.</p>"},{"location":"input/serato3/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select Serato from the list of available input sources</li> <li>Select Input Sources-&gt;Serato from the left-hand column</li> <li>From there, you have two tabs.</li> </ol>"},{"location":"input/serato3/#connection-tab","title":"Connection Tab","text":""},{"location":"input/serato3/#local-mode","title":"Local Mode","text":"<p>When Local Mode is active, the What's Now Playing app runs on the same machine as Serato. Configure the Serato Library Path to Serato's directory, usually <code>Music/_Serato_</code>. This method is the recommended installation as much more information is available and significantly improves What's Now Playing's correctness.</p> <p>Ignore Deck(s) allows for tracks on these deck(s) to be ignored.</p>"},{"location":"input/serato3/#remote-mode","title":"Remote Mode","text":"<p>Remote mode is useful when the streaming computer is not the same as the Serato DJ computer by utilizing Serato Live Playlists. It should be only used when What's Now Playing's web server mode also cannot be used.</p> <p>NOTE: This mode does not support Oldest mix mode.</p> <ol> <li>In Serato, make sure you enable Live Playlists and start a new session.    From the Serato website:</li> </ol> <p>\"To enable the Live Playlists feature, go to the Expansion Pack tab on the Setup screen and check the Enable Live Playlists option. Once enabled, the Start Live Playlist button is now displayed in the History panel. Click this to start and stop your Live Playlist session.\"</p> <ol> <li> <p>Once a new playlist session is started, Serato will automatically open    your web browser to your Live Playlist. IMPORTANT: You will need to    select \"Edit Details\" on the Live Playlist webpage and change your    playlist to \"Public\", or else the What's Now Playing app will not be    able to retrieve any song data. The webpage does not need to remain    open. So you can close it once you ensure that the playlist has been    made public.</p> </li> <li> <p>Start the What's Now Playing app. The app can be controlled and    configured by accessing the menu from the icon in the Windows system    tray or Mac menu bar.</p> </li> </ol> <p>Be aware that as of this writing (2021-03-05), the only information available via Live Playlists is the artist and the title due to limitations in Serato's offering.  If you have the capability to use Local Mode, that provides a much richer set of data.</p>"},{"location":"input/serato3/#library-and-query","title":"Library and Query","text":"<p>This tab controls how the !hasartist command functions, either the entire database or one or more crates.</p> <p>Additionally, if you have additional locations where Serato crates and smart crates are located.</p>"},{"location":"input/serato3/#smart-crates","title":"Smart Crates","text":"<p>What's Now Playing supports Serato Smart Crates in addition to normal crates, but with limitations on which filters work.  The full filter list is not supported in order to keep the RAM requirements lower.</p>"},{"location":"input/serato3/#supported-filters","title":"Supported Filters","text":"<p>These smart crate filters work with What's Now Playing:</p> <ul> <li>Song (title)</li> <li>Artist</li> <li>Album</li> <li>Filename</li> <li>Composer</li> <li>Key</li> <li>BPM</li> </ul>"},{"location":"input/serato3/#unsupported-filters","title":"Unsupported Filters","text":"<p>These common smart crate filters do NOT work:</p> <ul> <li>Year</li> <li>Genre</li> <li>Plays</li> <li>Added Date</li> <li>Last Played</li> <li>Length/Duration</li> <li>Bitrate</li> <li>Comment</li> <li>Grouping</li> <li>Label</li> <li>Remixer</li> </ul> <p>Smart crates using unsupported filters will skip those rules but still apply any supported rules in the same crate.</p>"},{"location":"input/serato3/#multiple-libraries","title":"Multiple Libraries","text":"<p>Smart crates work across all your configured library paths, including external drives. However you MUST configure those paths in the additional library paths, as documented above.</p>"},{"location":"input/traktor/","title":"Traktor","text":"<p>NOTE: This source does not support Oldest mix mode.</p> <p>Traktor support combines Icecast streaming with local database enhancement to provide rich metadata and playlist access.</p>"},{"location":"input/traktor/#how-it-works","title":"How It Works","text":"<ol> <li>Traktor broadcasts basic track info (artist/title) via Icecast stream</li> <li>What's Now Playing receives the Icecast stream</li> <li>Database lookup enriches the basic stream data with full metadata from your Traktor collection</li> <li>Enhanced metadata includes album, filename, and other details not available in the stream</li> </ol>"},{"location":"input/traktor/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select Traktor from the list of available input sources</li> </ol>"},{"location":"input/traktor/#setup","title":"Setup","text":""},{"location":"input/traktor/#step-1-configure-traktor-broadcasting","title":"Step 1: Configure Traktor Broadcasting","text":"<p>In Traktor's Preferences, go to Broadcasting:</p> <p></p> <p>Under Server Settings:</p> <ol> <li>Address: 127.0.0.1 (same machine) or IP of What's Now Playing machine</li> <li>Port: Match the port set in What's Now Playing (default: 8000)</li> <li>Format: Ogg Vorbis, 11025 Hz, 32 kBit/s</li> </ol>"},{"location":"input/traktor/#step-2-activate-broadcasting","title":"Step 2: Activate Broadcasting","text":"<p>In Traktor's main interface:</p> <p></p> <ol> <li>Click the reel icon (labeled 1)</li> <li>Click the antenna icon (labeled 2)</li> <li>Antenna should turn solid color (flashing = connection problem)</li> </ol>"},{"location":"input/traktor/#step-3-configure-whats-now-playing","title":"Step 3: Configure What's Now Playing","text":"<ol> <li>Select Input Sources-&gt;Traktor from the left-hand column</li> <li>Set the Port to match what you'll configure in Traktor (default: 8000)</li> <li>Browse for your Traktor <code>collection.nml</code> file</li> <li>Usually in <code>Documents/Native Instruments/Traktor Pro 3/</code> or similar</li> <li>Click Re-read to build the database (may take time for large collections)</li> <li>Set Max age for automatic database refreshes (default: 7 days)</li> </ol>"},{"location":"input/traktor/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>No enhanced metadata: Check that collection.nml path is correct and Re-read completed</li> <li>Connection issues: Verify port numbers match between Traktor and What's Now Playing</li> <li>Slow database building: Normal for large collections (10,000+ tracks)</li> </ul>"},{"location":"input/virtualdj/","title":"Virtual DJ","text":"<p>NOTE: This source does not support Oldest mix mode.</p>"},{"location":"input/virtualdj/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select Virtual DJ from the list of available input sources</li> <li>Select Input Sources-&gt;Virtual DJ from the left-hand column</li> </ol>"},{"location":"input/virtualdj/#setup","title":"Setup","text":""},{"location":"input/virtualdj/#configure-directories","title":"Configure Directories","text":"<ol> <li>History Directory - Usually auto-detected as <code>Documents/VirtualDJ/History</code></li> <li>Playlists Directory - Usually auto-detected as <code>Documents/VirtualDJ/Playlists</code></li> <li>Use Select Dir buttons if paths need adjustment</li> </ol>"},{"location":"input/virtualdj/#database-settings","title":"Database Settings","text":"<ol> <li>Click Re-read to build the metadata database</li> <li>Set Max age for automatic database refreshes (default: 7 days)</li> <li>Use Remix Field - Filters out remix data (recommended)</li> </ol>"},{"location":"input/virtualdj/#troubleshooting","title":"Troubleshooting","text":""},{"location":"input/virtualdj/#no-track-updates","title":"No Track Updates","text":"<ul> <li>Check that History directory path is correct</li> <li>Ensure VirtualDJ is writing history files (play tracks long enough)</li> </ul>"},{"location":"input/virtualdj/#no-enhanced-metadata","title":"No Enhanced Metadata","text":"<ul> <li>Click Re-read to build database from VirtualDJ's collection</li> </ul>"},{"location":"input/virtualdj/#playlist-requests-not-working","title":"Playlist Requests Not Working","text":"<ul> <li>Ensure Playlists directory is correct</li> <li>Click Re-read after making playlist changes in VirtualDJ</li> <li>Playlist files only update when VirtualDJ is closed</li> </ul>"},{"location":"input/virtualdj/#changing-metadata","title":"Changing Metadata","text":"<p>If What's Now Playing acts erratic when changing metadata in VirtualDJ:</p> <ol> <li>Pause What's Now Playing from the menu</li> <li>Make your metadata changes in VirtualDJ</li> <li>Play the next track</li> <li>Unpause What's Now Playing</li> </ol>"},{"location":"input/winmedia/","title":"WinMedia","text":"<p>On Microsoft Windows, applications can publish currently playing media information to the system. WinMedia reads this data as the source.</p> <p>This input works with applications that support Windows Media APIs, such as:</p> <ul> <li>Amazon Music</li> <li>Spotify</li> <li>Windows Media Player</li> <li>Other media applications with Windows integration</li> </ul>"},{"location":"input/winmedia/#instructions","title":"Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Core Settings-&gt;Source from the left-hand column</li> <li>Select WinMedia from the list of available input sources</li> </ol> <p>No additional configuration is required.</p>"},{"location":"output/","title":"Output Destinations","text":"<p>What's Now Playing can send song details to a variety of different systems, including just plain file output.</p>"},{"location":"output/#available-output-destinations","title":"Available Output Destinations","text":"<ul> <li>Charts - Submit track data to What's Now Playing Charts service</li> <li>Discord - Discord rich presence integration</li> <li>Kick Bot - Kick streaming platform bot</li> <li>OBS WebSocket - Direct integration with OBS Studio</li> <li>Text Output - Simple text file output</li> <li>Twitch Bot - Twitch chat bot integration</li> <li>Web Server - Built-in web server for browser sources</li> </ul> <p>Click on any output destination above to see detailed configuration instructions.</p>"},{"location":"output/charts/","title":"Charts","text":"<p>Charts sends track metadata to the What's Now Playing Charts service for tracking and analytics.</p>"},{"location":"output/charts/#what-it-provides","title":"What it provides","text":"<p>The Charts output automatically submits your track information to the What's Now Playing Charts service, allowing you to:</p> <ul> <li>Track your most played songs and artists</li> <li>View listening statistics and trends</li> <li>Participate in community charts</li> <li>Share your music data with the What's Now Playing ecosystem</li> </ul>"},{"location":"output/charts/#automatic-setup","title":"Automatic Setup","text":"<p>Charts is enabled by default and requires no manual configuration. What's Now Playing automatically:</p> <ul> <li>Generates an anonymous API key during first startup</li> <li>Begins tracking your music immediately</li> <li>Stores your key securely for future sessions</li> </ul>"},{"location":"output/charts/#claiming-your-anonymous-key","title":"Claiming Your Anonymous Key","text":"<p>To access advanced features and view your data online:</p> <ol> <li>Navigate to Settings \u2192 Output Destinations \u2192 Charts</li> <li>Copy your auto-generated Secret Key from the input field</li> <li>Visit whatsnowplaying.com</li> <li>Click Login with Twitch or Login with Kick</li> <li>Complete the OAuth login process</li> <li>Go to your Dashboard</li> <li>Enter your copied key in the Claim Anonymous Key section</li> <li>Click Claim Key to link it to your account</li> </ol>"},{"location":"output/charts/#configuration","title":"Configuration","text":"<ul> <li>Enable - Turn Charts output on or off (enabled by default)</li> <li>Secret - Your auto-generated anonymous API key (automatically created)</li> </ul>"},{"location":"output/charts/#how-it-works","title":"How it works","text":"<p>When enabled, the Charts plugin:</p> <ul> <li>Automatically sends track metadata when songs change</li> <li>Queues submissions when the service is temporarily unavailable</li> <li>Retries failed submissions automatically</li> <li>Excludes sensitive information (filenames, system data, etc.)</li> <li>Only sends essential track data (artist, title, album, etc.)</li> </ul>"},{"location":"output/charts/#queue-system","title":"Queue System","text":"<p>The Charts plugin includes a robust offline queue system:</p> <ul> <li>Automatic queuing - Track updates are queued if the Charts service is down</li> <li>Persistent storage - Queued items survive application restarts</li> <li>Automatic retry - Failed submissions are retried when the service comes back online</li> <li>Secure storage - Authentication keys are never stored in queue files</li> </ul>"},{"location":"output/charts/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Authentication failed - Verify your secret key is correct</li> <li>Connection errors - Check your internet connection</li> <li>Invalid request data - Ensure you're using a supported What's Now Playing version</li> </ul> <p>The Charts service processes standard track metadata including artist, title, album, genre, and timing information. Personal data like file paths and system information are automatically excluded from submissions.</p>"},{"location":"output/discord/","title":"Discord","text":"<p>What's Now Playing's support of Discord is very preliminary at the moment. It supports two modes of operation, both of which may be done simultaneously:</p> <p>Bot Mode: Using a token, update the presence of a bot account that includes a link to your stream if Twitch is also configured.</p> <p>Client Mode: If the Discord app is running and a Client ID is provided, update the Discord user's status to the playing song.</p>"},{"location":"output/discord/#configuration","title":"Configuration","text":""},{"location":"output/discord/#generic-settings","title":"Generic Settings","text":"<ol> <li>In order to even start with Discord mode, it must be enabled</li> <li>The template selected here is what will be used to fill in the    status text.</li> </ol>"},{"location":"output/discord/#client-mode","title":"Client Mode","text":"<ol> <li>If the Discord app is not running, start it first.</li> <li>Go to your Discord Developers page</li> <li>Create an application</li> <li>After naming, take the Client ID and put into What's Now Playing's Discord page.</li> <li>Restart What's Now Playing. Subsequent launches will connect to Discord as long as the Discord app is already running.</li> </ol>"},{"location":"output/discord/#bot-mode","title":"Bot Mode","text":"<ol> <li>Go to your Discord Developers page</li> <li>Create an application</li> <li>Build-a-bot</li> <li>Make a note of the token from the bot page</li> <li>Invite your bot to your Discord channel</li> <li>Put that token into the Discord settings</li> <li>Restart What's Now Playing. Subsequent launches will connect to    Discord as long as the Discord app is already running.</li> </ol>"},{"location":"output/kickbot/","title":"KickBot","text":"<p>What's Now Playing integrates with Kick.com to provide chat bot functionality with track announcements.</p>"},{"location":"output/kickbot/#kick-chat-support","title":"Kick Chat Support","text":"<p>The current Kick integration supports:</p> <ul> <li>Track Announcements: Automatic announcements when tracks change</li> <li>Template-based Messages: Rich formatting with metadata variables</li> <li>Smart Message Splitting: Intelligent splitting of long messages</li> </ul> <p>Coming Soon:</p> <ul> <li>Interactive chat commands and user input processing.</li> <li>Point Redemptions</li> </ul>"},{"location":"output/kickbot/#authentication","title":"Authentication","text":"<p>To use Kick.com integration, you'll need to set up OAuth2 authentication with your Kick account.</p> <p></p> <ol> <li>Go to your Kick streamer settings and navigate to the Developer    tab to create an application.</li> <li>Create a new OAuth2 application with these important settings:</li> <li>Application Type: Set to Bot (required for chat      functionality)</li> <li>Application Name: This will be the name displayed in chat when      the bot sends messages</li> <li>Note down your Client ID and Client Secret</li> <li>Set Redirect URI to <code>http://localhost:8899/kickredirect</code> (port      must match your webserver settings, default is 8899)</li> </ol> <p></p> <ol> <li>Click on the Edit button to make a few more changes</li> <li>Scopes Requested should include the following for current and future    features:</li> <li>Read user information (including email address) - <code>user:read</code></li> <li>Write to chat feed - <code>chat:write</code></li> <li>Subscribe to events (read chat feed, follows, subscribes, gifts) -      events:subscribe`</li> <li>You should also make sure to select the option to make it a bot    account.</li> </ol> <p></p> <ol> <li>In What's Now Playing settings, enter your Client ID and Client Secret</li> <li>Set your Kick channel name</li> <li>Click \"Save\" to store the configuration</li> <li>Important: You must save the settings before proceeding to authentication</li> <li>Click \"Authenticate with Kick\" to complete OAuth2 setup</li> </ol>"},{"location":"output/kickbot/#template-features","title":"Template Features","text":"<p>Kick templates support powerful formatting features:</p> <ul> <li>Template Variables: All standard metadata variables   (<code>{{ artist }}</code>, <code>{{ title }}</code>, etc.)</li> <li>Message Splitting: Use <code>{{ startnewmessage }}</code> to split long   announcements across multiple messages</li> <li>Smart Splitting: Messages longer than 500 characters are   automatically split at sentence or word boundaries using NLTK</li> </ul> <p>Example announcement template:</p> <pre><code>\"{{ title }}\"\n\n{{ startnewmessage }}\n</code></pre>"},{"location":"output/kickbot/#configuration","title":"Configuration","text":"<ol> <li>Enable Kick chat in the Kick settings tab</li> <li>Configure your OAuth2 credentials</li> <li>Set up your announcement template</li> <li>Configure announcement delay if needed</li> <li>Test the connection with the \"Authenticate with Kick\" button</li> </ol>"},{"location":"output/kickbot/#current-limitations","title":"Current Limitations","text":"<ul> <li>Chat Commands: Interactive commands are not yet implemented   (coming soon)</li> <li>Permissions: User permission system will be added with command   support</li> </ul> <p>The Kick integration uses the same intelligent message splitting technology as the enhanced Twitch integration, ensuring that long messages with rich metadata are delivered in full while respecting platform limits.</p>"},{"location":"output/obswebsocket/","title":"OBS WebSocket Plug-in","text":"<p>What's Now Playing can use the OBS WebSocket v5 protocol to send results directly to OBS Studio. OBS WebSocket v5 protocol was added as a standard feature in OBS Studio v28. It will not work with older versions.</p> <p>NOTE: The vast majority of OBS users use the Webserver output to take advantage of cover art and more. This version only provides text and only to an OBS Text source.</p>"},{"location":"output/obswebsocket/#installation","title":"Installation","text":"<ol> <li>Configure the OBS WebSocket settings in OBS Studio    (Tools-&gt;obs-websocket Settings)</li> <li>Configure OBS to have a Text source, keeping track of the name of    the source name.</li> <li>Open Settings from the What's Now Playing icon</li> <li>Select OBS WebSocket from the list of available input sources.</li> </ol> <ol> <li>Check Enable</li> <li>Set the Source Name to be the same as your Source in OBS Studio.</li> <li>In OBS Studio, under Tools-&gt;obs-websocket Settings, select Show Connect Info</li> <li>In What's Now Playing, set the OBS Host, OBS Port, and OBS    Secret. If the machine running OBS and running What's Now    Playing are the same host, set OBS Host to be 'localhost'</li> <li>Browse and select the template file that you would like to use as    output.</li> <li>Click Save</li> </ol>"},{"location":"output/textoutput/","title":"Text Output","text":"<p>A simple output method that just writes a template to a file and writes the entire setlist on exit.</p> <ul> <li>Text Template - The Jinja2   template file   that will be used when the song updates. See   Templates for more information.</li> <li>File to write - Name of the file where the app will write the   track information. You can either pick a pre-existing file or the name   of a new file.</li> <li>Clear file on startup - Empty the file when What's Now Playing   is launched.</li> <li>Append new track - Keep adding new tracks to the file rather than   replace the content.</li> <li>Enable setlists - Setting this option will create a file in the   WhatsNowPlaying/setlists directory when What's Now Playing is shutdown   of all of the tracks that were played as GitHub-flavored markdown   table.</li> </ul>"},{"location":"output/twitchbot/","title":"TwitchBot","text":"<p>What's Now Playing integrates with Twitch with channel point redemptions and chat. They may be run independently or run both at the same time.</p>"},{"location":"output/twitchbot/#twitch-chat-support","title":"Twitch Chat Support","text":"<p>The chat bot support includes track announcement as well as interactive features.</p> <p>For example, in chat, if the user types:</p> <pre><code>!track\n</code></pre> <p>What's Now Playing will read a file called <code>twitchbot_track.txt</code> and expand any template values in it. The Twitchbot settings section sets permissions for commands.</p> <p>Additionally, the Twitchbot can send an announcement template to chat when What's Now Playing detects a song change or when a track Request has been fulfilled.</p>"},{"location":"output/twitchbot/#twitch-channel-point-redemptions","title":"Twitch Channel Point Redemptions","text":"<p>Currently, channel point redemptions allow for users to request songs, either by artist/title or picking a random song in a 'roulette' mode when that redemption is tied to a supported DJ's software crate/playlist. For more information see Requests.</p>"},{"location":"output/twitchbot/#authentication","title":"Authentication","text":"<p>What's Now Playing uses OAuth2 authentication for secure integration with Twitch.  For redemptions, you will need to authenticate against your own account.  For the chat bot, you can either use your account or create and use another account.</p>"},{"location":"output/twitchbot/#setup-process","title":"Setup Process","text":"<ol> <li> <p>Create Bot Account (Optional but recommended)</p> </li> <li> <p>Follow the Twitch process for creating a new account.</p> </li> <li> <p>On the new account, be sure to enable:</p> <ul> <li>Multiple logins per email</li> <li>Two-factor authentication (2FA)</li> </ul> </li> </ol> <p></p> <ol> <li> <p>Register Application on Twitch</p> </li> <li> <p>Go to Twitch Developer Console</p> </li> <li>Click Login in the upper right</li> <li>Click on \"Your Console\" in the upper right</li> <li>Click on \"Applications\"</li> <li>Click on \"Register Your Application\"</li> <li>Name: Choose a descriptive name (e.g., \"YourChannel Now Playing Bot\")</li> <li>OAuth Redirect URLs: Enter both redirect URIs as shown in What's Now Playing's Twitch settings:<ul> <li><code>http://localhost:8899/twitchredirect</code></li> <li><code>http://localhost:8899/twitchchatredirect</code></li> </ul> </li> <li>Category: Chat Bot</li> <li>Click \"Create\"</li> <li>Click on \"Manage\" and save a copy of the Client ID</li> <li> <p>Click on \"New Secret\" and save a copy of the Client Secret</p> </li> <li> <p>Configure What's Now Playing</p> </li> </ol> <p></p> <ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select \"Twitch\" from the list of settings available</li> <li> <p>Fill in the required information:</p> <ul> <li>Channel: Your Twitch channel name (where you want to monitor/send messages)</li> <li>Client ID: From your Twitch application</li> <li>Client Secret: From your Twitch application</li> <li>Redirect URI: Will be automatically populated based on your webserver port</li> </ul> </li> <li> <p>Click \"Save\" to store the configuration</p> </li> <li>Important: You must save the settings before proceeding to authentication</li> <li>Click \"Authenticate with Twitch\" to complete OAuth2 setup</li> <li>A browser will open - log in and authorize the application</li> <li>You should see \"Authentication Successful\" when complete</li> </ol>"},{"location":"output/twitchbot/#additional-setup-considerations","title":"Additional Setup Considerations","text":"<ul> <li> <p>Bot Moderator Status: Consider making your bot account a moderator on your channel to avoid rate limits,   URL filters, and other restrictions.</p> </li> <li> <p>Browser Authentication: When you click \"Authenticate with Twitch\", a browser will open asking for permission.   Make sure you're logged into the correct Twitch account:</p> </li> <li> <p>For channel point redemptions: Log in as your main streaming account (the channel owner)</p> </li> <li> <p>For chat functionality: Log in as your bot account (if using a separate bot account)</p> </li> <li> <p>Required Permissions: Accept the requested permissions (<code>chat:read</code> and <code>chat:edit</code>) to allow the bot to   monitor and send messages.</p> </li> </ul>"},{"location":"output/twitchbot/#twitch-chat-configuration","title":"Twitch Chat Configuration","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Twitch Chat from the list of settings available.</li> <li>Check Enable</li> <li>To have the bot announce new tracks in chat, select the template.</li> </ol> <p>By default, the bot will respond to user commands in the form of Twitch Replies. If you would prefer the bot just post a message, uncheck the Replies option.</p> <p>You are now ready to set permissions on user interactive commands.</p>"},{"location":"output/twitchbot/#setting-permissions","title":"Setting Permissions","text":"<p>Upon launch, What's Now Playing will create an entry for every <code>twitchbot_*.txt</code> file in the template directory. These entries will all be set to completely disabled. In order to enable them, you will need to check the appropriate field.</p> <p>Twitchbot template files added while What's Now Playing is running will let anyone use them until the next run. At the next run, it will again change them back to no permissions granted.</p> <p>Once the permissions are set and Save is clicked, those permissions will be preserved on every restart.</p>"},{"location":"output/twitchbot/#adding-new-commands","title":"Adding New Commands","text":"<p>Create a new file in What's Now Playing's<code>templates</code> directory (<code>Documents/Now Playing/template</code>) called <code>twitchbot_yourcommand.txt</code> where <code>yourcommand</code> is the actual command that will be executed by users that have the appropriate template code inside it. Note that all text will be smashed together as a single line when sent to Twitch, so be mindful of where to put spaces.</p>"},{"location":"output/twitchbot/#built-in-commands","title":"Built-in Commands","text":"<p>Post-v3.0.2, the Twitchbot will always respond to the command 'whatsnowplayingversion' . It will report the version that is running.</p>"},{"location":"output/twitchbot/#troubleshooting","title":"Troubleshooting","text":"<ul> <li> <p>To test if the chat bot is working, you should be able to use the   '!whatsnowplayingversion' command. What's Now Playing only needs   to be running. You do not have to be live streaming to test chat.</p> </li> <li> <p>If the bot never connects, try getting a new OAuth token.</p> </li> <li> <p>Be aware that the bot may have trouble connecting if you restart   What's Now Playing too quickly. It should eventually rejoin, but   it may take several minutes.</p> </li> </ul>"},{"location":"output/twitchbot/#additional-variables","title":"Additional Variables","text":"<p>The TwitchBot adds the following additional values for templating purposes:</p> Variable Description cmduser Person, bot, etc that typed the command cmdtarget[x] The x'th target on the command, starting with 0. For example, if the command was <code>!so modernmeerkat</code>, then <code>{{ cmdtarget[0] }}</code> will have <code>modernmeerkat</code> in it. See below for an example. startnewmessage Split the text at this location and start a new message to send to chat. <p>Token Selection</p> <p>The system automatically uses the most appropriate token for sending messages. If you have both broadcaster and chat bot tokens authenticated, chat messages will be sent from the bot account for cleaner presentation.</p>"},{"location":"output/twitchbot/#multiple-targets","title":"Multiple Targets","text":"<p>One of the more advanced capabilities that the TwitchBot supports is a variable number of targets. This feature allows for your users to use one command to perform actions on, for example, multiple users.</p> <p>A simple example. Given this template file:</p> <pre><code>@{{ cmduser }} hugs @{{ cmdtarget[0] }}\n</code></pre> <p>a user typing:</p> <pre><code>modernmeerkat: !hug twitch\n</code></pre> <p>Would result in:</p> <pre><code>bot: @modernmeerkat hugs @twitch\n</code></pre> <p>But this can be expanded to do multiple users at once:</p> <pre><code>@{{ cmduser }} sends hugs to\n</code></pre> <p>such that:</p> <pre><code>modernmeerkat: !hug person1 person2 person3\n</code></pre> <p>results in:</p> <pre><code>bot: @modernmeerkat sends hugs to @person1 @person2 @person3\n</code></pre>"},{"location":"output/twitchbot/#announcing-websites","title":"Announcing Websites","text":"<p>You may want to add support for announcing the website data as part of the Twitchbot track announcement. You can pick and choose which websites are printed by taking the following code snippet and modifying as necessary:</p>"},{"location":"output/webserver/","title":"Webserver","text":"<p>What's Now Playing has a built-in web server that allows for a wide variety of customization and deployments, including complex ones involving multiple hosts. Treat the files in<code>templates</code> as examples; copy them to new names and modify them until you are happy. Change the font, change the output order, do whatever it is you need to do.</p> <p>Using one of the WebSocket examples as your starting point is recommended as they are generally more predictable. They update when the song updates vs. the others that use a timer to check for updates. See more about WebSockets below.</p>"},{"location":"output/webserver/#installation","title":"Installation","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select OBS WebSocket from the list of available input sources.</li> <li>Check Enable</li> <li>Change any settings as desired. See below.</li> <li>Click Save</li> </ol>"},{"location":"output/webserver/#settings","title":"Settings","text":"Setting Description Port The HTTP server's TCP port. A firewall should protect this port for security reasons to limit which hosts will be permitted to connect. What's Now Playing does not limit what systems may connect to it. HTML Template The Jinja2 template file to use when fetching index.md. See Templates for more information. Once Only give index.md once per title, then return an empty refresh page until the next song change. This setting is handy for providing a simple way to do fade-in and fade-out using simple HTML."},{"location":"output/webserver/#obs-settings","title":"OBS Settings","text":"<p>Once the webserver is enabled, hop into OBS and configure a Browser source. Set the size to match the HTML template you are using. (Check the <code>width</code> and <code>height</code> values in the bundled templates). Then place the OBS source wherever you would like.</p> <p></p>"},{"location":"output/webserver/#supported-urls","title":"Supported URLs","text":"URL Description /index.md (or /index.htm or just /) This URL generates either a title card based upon the preconfigured template. /index.txt Same output as the text output in the General settings. /cover.png This URL will return the cover image, if available. /httpstatic/ Any content in`Documents/WhatsNowPlaying/httpstatic` will get served under this URL. /template.htm Any template.htm file in the templates directory. See below. <p>Additionally, referencing <code>/&lt;templatename&gt;.htm</code> will also read <code>template.htm</code>  from the <code>templates</code> directory and render it.  This feature allows you to use more than one template at a time for advanced setups.</p> <p>See also Artist Extras for other URLs when that set of features is enabled.</p>"},{"location":"output/webserver/#rest-api","title":"REST API","text":"<p>The webserver provides REST API endpoints for programmatic access to track information and remote input functionality. See the API Reference for complete endpoint documentation.</p>"},{"location":"output/webserver/#websockets","title":"WebSockets","text":"<p>New with version 3.0.0 is a continual feed via WebSockets. The feed is a JSON-formatted stream that will get an update on every title change. To connect, use the URL <code>ws://hostname:port/wsstream</code>. The files that begin with <code>ws-</code> in the <code>templates</code> directory use WebSockets.</p> <p>Variables set should match what is on the Templates page. Be aware that values may be null.</p>"},{"location":"recognition/","title":"General Info About Music Recognition","text":"<p>NOTE: This feature is only available when using a local music source that provides individual files. It will not work when DJing from external sources.</p> <p>In general, music recognition is primarily for DJs that do not have their music fully tagged. This feature may have some significant impacts on What's Now Playing's general performance:</p> <ul> <li>Extra network bandwidth and access are required to consult with online   databases.</li> <li>Extra CPU and RAM will be required to generate the 'fingerprint' that   helps identify the song.</li> <li>Extra time will be required for all of this extra work, adding delays   to the display.</li> </ul> <p>Music recognition technologies will never be perfect and will occasionally provide surprising results. Tagging your files, even with minimal information, will give the best outcome.</p>"},{"location":"recognition/#available-recognition-services","title":"Available Recognition Services","text":"<p>Configure music recognition services to identify untagged tracks:</p> <ul> <li>AcoustID - Audio fingerprinting service for track identification</li> <li>MusicBrainz - Open music encyclopedia for enhanced metadata</li> </ul> <p>These services can be used together or independently:</p> <ul> <li>AcoustID only: Identifies tracks using audio fingerprinting, returns basic metadata</li> <li>MusicBrainz only: Enhances existing track info with additional metadata (fallback mode)</li> <li>Both enabled: AcoustID identifies tracks, MusicBrainz provides enhanced metadata (recommended)</li> </ul> <p>Click on the services above for detailed configuration instructions.</p>"},{"location":"recognition/acoustid/","title":"AcoustID","text":"<p>AcoustID is a project providing a complete audio identification service based entirely on open-source software. The service is completely free for non-commercial applications.</p>"},{"location":"recognition/acoustid/#how-it-works","title":"How It Works","text":"<p>AcoustID uses audio fingerprinting to identify tracks and returns basic MusicBrainz metadata including:</p> <ul> <li>Track title, artist, and album information</li> <li>MusicBrainz IDs for recordings, artists, and releases</li> </ul> <p>For additional enhanced metadata like artist biography and website links, MusicBrainz must also be enabled for local lookups.</p>"},{"location":"recognition/acoustid/#requirements","title":"Requirements","text":"<ul> <li>Register your application to get an API key</li> <li>fpcalc binary installed on your system</li> <li>MusicBrainz enabled for enhanced metadata (optional but recommended)</li> </ul>"},{"location":"recognition/acoustid/#limitations","title":"Limitations","text":"<ul> <li>AcoustID's database is not as large or comprehensive as commercial services like Shazam</li> <li>Only samples the beginning of songs, so tracks with long introductions or extended intros may not be identified correctly</li> </ul>"},{"location":"recognition/acoustid/#setup-instructions","title":"Setup Instructions","text":"<ol> <li>Install the fpcalc binary appropriate for your operating system</li> <li>Open Settings from the What's Now Playing icon</li> <li>Select Recognition-&gt;AcoustID from the left-hand column</li> <li>Check \"Enable Music Recognition by AcoustID\"</li> <li>Enter the API Key you received from AcoustID registration</li> <li>Set the location of the fpcalc executable</li> <li>Click Save</li> </ol> <p>What's Now Playing will now use AcoustID to identify untagged tracks and provide basic metadata that was not available from your DJ software or file tags.</p> <p>Tip: Enable MusicBrainz as well to get enhanced metadata including artist biographies, website links, and additional track details beyond what AcoustID provides.</p>"},{"location":"recognition/musicbrainz/","title":"MusicBrainz","text":"<p>MusicBrainz is an open music encyclopedia that collects music metadata and makes it available to the public. What's Now Playing uses MusicBrainz to enhance track information with additional metadata.</p>"},{"location":"recognition/musicbrainz/#how-it-works","title":"How It Works","text":"<p>MusicBrainz provides enhanced metadata beyond basic track identification:</p> <ul> <li>Artist biographies and detailed information</li> <li>Website links (official sites, social media, streaming platforms)</li> <li>Additional album and release information</li> <li>Relationships between artists, albums, and tracks</li> </ul> <p>MusicBrainz works in two ways:</p> <ol> <li>With AcoustID: Enhances tracks identified by AcoustID with additional metadata</li> <li>Standalone: Attempts to match tracks based on existing artist/title information when other methods fail</li> </ol>"},{"location":"recognition/musicbrainz/#about-musicbrainz","title":"About MusicBrainz","text":"<p>MusicBrainz aims to be:</p> <p>The ultimate source of music information by allowing anyone to contribute and releasing the data under open licenses. The universal lingua franca for music by providing a reliable and unambiguous form of music identification, enabling both people and machines to have meaningful conversations about music.</p> <p>Like Wikipedia, MusicBrainz is maintained by a global community of users and encourages everyone to participate and contribute.</p> <p>MusicBrainz is operated by the MetaBrainz Foundation, a California-based 501(c)(3) tax-exempt non-profit corporation dedicated to keeping MusicBrainz free and open source.</p>"},{"location":"recognition/musicbrainz/#setup-instructions","title":"Setup Instructions","text":"<ol> <li>Open Settings from the What's Now Playing icon</li> <li>Select Recognition-&gt;MusicBrainz from the left-hand column</li> <li>Check \"Enable MusicBrainz metadata lookups\"</li> <li>Enter your email address (required for API access)</li> <li>Configure website options:</li> <li>Check \"Ask MusicBrainz for artist's websites\" to fetch website links</li> <li>Select which types of websites you want included</li> <li>Click Save</li> </ol>"},{"location":"recognition/musicbrainz/#fallback-mode","title":"Fallback Mode","text":"<p>The \"Use MusicBrainz when all else fails\" option attempts to find metadata based primarily on existing artist and title information. Accuracy is not guaranteed, but it can provide enough information for Artist Extras to work without requiring AcoustID.</p>"},{"location":"recognition/musicbrainz/#best-practices","title":"Best Practices","text":"<ul> <li>Always provide an email address for API access</li> <li>Enable website fetching if you want social media and official site links</li> <li>Other Artist Extras services use Musicbrainz identification as a requirement</li> </ul>"},{"location":"reference/","title":"Reference","text":"<p>Reference documentation for What's Now Playing including template variables and comparisons with other software.</p>"},{"location":"reference/#reference-sections","title":"Reference Sections","text":"<ul> <li>Template Variables - Complete list of available template variables for customization</li> <li>Comparisons - How What's Now Playing compares to other similar software</li> </ul> <p>Click on any reference section above for detailed information.</p>"},{"location":"reference/api/","title":"API Reference","text":"<p>What's Now Playing provides a REST API through its built-in webserver for programmatic access to track information and remote input functionality.</p>"},{"location":"reference/api/#base-url","title":"Base URL","text":"<p>All API endpoints are available at: <code>http://hostname:port/v1/</code></p> <p>Where <code>hostname</code> and <code>port</code> match your webserver configuration.</p>"},{"location":"reference/api/#authentication","title":"Authentication","text":"<p>Some endpoints require authentication via a secret key. When configured, include the secret in your request:</p> <ul> <li>GET requests: Add <code>&amp;secret=your_api_key</code> to query parameters</li> <li>POST requests: Include <code>\"secret\": \"your_api_key\"</code> in JSON body</li> </ul>"},{"location":"reference/api/#endpoints","title":"Endpoints","text":""},{"location":"reference/api/#get-v1last","title":"GET /v1/last","text":"<p>Returns the currently playing track metadata.</p> <p>Authentication: None required</p> <p>Response: JSON object with current track information</p> <pre><code>{\n  \"artist\": \"Artist Name\",\n  \"title\": \"Track Title\",\n  \"album\": \"Album Name\",\n  \"genre\": \"Electronic\",\n  \"date\": \"2023\",\n  \"coverurl\": \"cover.png\"\n}\n</code></pre>"},{"location":"reference/api/#getpost-v1remoteinput","title":"GET|POST /v1/remoteinput","text":"<p>Accepts track metadata submissions from remote sources for the Remote Input system.</p> <p>Authentication: Optional secret key (if configured)</p> <p>Methods: <code>GET</code>, <code>POST</code></p>"},{"location":"reference/api/#post-request-json","title":"POST Request (JSON)","text":"<pre><code>{\n  \"artist\": \"Artist Name\",\n  \"title\": \"Track Title\",\n  \"album\": \"Album Name\",\n  \"secret\": \"your_api_key\"\n}\n</code></pre>"},{"location":"reference/api/#get-request-query-parameters","title":"GET Request (Query Parameters)","text":"<pre><code>/v1/remoteinput?artist=Artist%20Name&amp;title=Track%20Title&amp;album=Album%20Name&amp;secret=your_api_key\n</code></pre>"},{"location":"reference/api/#response-format","title":"Response Format","text":"<p>Success (200):</p> <pre><code>{\n  \"dbid\": 12345,\n  \"processed_metadata\": {\n    \"artist\": \"Artist Name\",\n    \"title\": \"Track Title\",\n    \"album\": \"Album Name\",\n    \"artistlongbio\": \"Artist biography...\",\n    \"coverurl\": \"cover.png\",\n    \"date\": \"2023\",\n    \"genre\": \"Electronic\"\n  },\n  \"warnings\": [\n    \"Field 'title' truncated from 1500 to 1000 characters\"\n  ]\n}\n</code></pre> <p>Note: The <code>warnings</code> field is only included if data validation issues occurred.</p> <p>Error Responses:</p> <ul> <li><code>400</code>: Invalid JSON or query parameters</li> <li><code>403</code>: Missing or invalid secret key</li> <li><code>408</code>: Metadata processing timeout (30 seconds)</li> <li><code>500</code>: Server error during processing</li> </ul>"},{"location":"reference/api/#supported-fields","title":"Supported Fields","text":"<p>The API accepts any metadata fields that the Remote Output plugin sends, including:</p> <ul> <li>Basic track info: <code>artist</code>, <code>title</code>, <code>album</code></li> <li>Identifiers: <code>isrc</code>, <code>musicbrainzartistid</code>, <code>musicbrainzrecordingid</code></li> <li>Additional metadata: <code>genre</code>, <code>date</code>, <code>composer</code>, <code>lyricist</code>, <code>bpm</code>, <code>key</code>, <code>publisher</code></li> <li>Technical info: <code>duration</code>, <code>bitrate</code>, <code>samplerate</code></li> </ul> <p>Filtered fields: Binary data, system fields (<code>hostname</code>, <code>dbid</code>, <code>filename</code>), and other security-sensitive information are automatically removed.</p>"},{"location":"reference/api/#input-validation","title":"Input Validation","text":"<p>The API includes automatic validation and processing:</p> <ol> <li>Field Length Limits: String fields are truncated to 1000 characters</li> <li>Null Byte Stripping: Removes null bytes (<code>\\x00</code>) from string values</li> <li>Security Filtering: Blocks system fields and binary data</li> <li>Full Metadata Processing: Runs complete enrichment including MusicBrainz lookups, artist extras, and recognition services</li> </ol>"},{"location":"reference/api/#get-v1imagesws","title":"GET /v1/images/ws","text":"<p>WebSocket endpoint for real-time image updates (cover art slideshow functionality).</p> <p>Authentication: None required</p> <p>Protocol: WebSocket</p> <p>Connect to <code>ws://hostname:port/v1/images/ws</code> for continuous image update stream.</p>"},{"location":"reference/api/#dj-software-integration","title":"DJ Software Integration","text":"<p>Many DJ applications can send track information directly via HTTP requests. See the Remote Input documentation for specific configuration examples.</p>"},{"location":"reference/api/#error-handling","title":"Error Handling","text":"<p>All endpoints return appropriate HTTP status codes:</p> <ul> <li><code>200</code>: Success</li> <li><code>400</code>: Bad request (invalid parameters)</li> <li><code>403</code>: Authentication failed</li> <li><code>404</code>: Endpoint not found</li> <li><code>408</code>: Request timeout</li> <li><code>500</code>: Internal server error</li> </ul> <p>Error responses include a JSON object with an <code>error</code> field describing the issue.</p>"},{"location":"reference/comparisons/","title":"Versus Comparisons","text":"<p>There are a lot of different solutions to provide titling for your stream. Here are some comparisons of other projects related to what this software offers.</p>"},{"location":"reference/comparisons/#seratos-now-playing-twitch-extension","title":"Serato's Now Playing Twitch Extension","text":"Description This App Serato Extension Works locally \u2705 \ud83d\udeab Works with Live Playlists \u2705 \u2705 Cover art \u2705 \ud83d\udeab Multi-DJ on one stream friendly \u2705 \ud83d\udeab Album name can be displayed \u2705 \ud83d\udeab Label/Publisher can be displayed \u2705 \ud83d\udeab High degree of customization via templates \u2705 \ud83d\udeab Open source \u2705 \ud83d\udeab Supports multi-deck \u2705 \ud83d\udeab Ability to give data to other programs to manipulate \u2705 \ud83d\udeab Supports 2-computer streaming \u2705 \u2705 Supports Chat Announcements \u2705 \ud83d\udeab"},{"location":"reference/templates/","title":"Template Reference","text":"<p>This document lists all available templates in What's Now Playing, organized by category with descriptions of their functionality.</p> <p>Templates are HTML files that control how track information is displayed in various outputs like OBS, Discord, web browsers, and text files. For template variables, see Template Variables. For visual examples of templates in action, see the Gallery.</p>"},{"location":"reference/templates/#mtv-templates","title":"Mtv Templates","text":""},{"location":"reference/templates/#mtv-style","title":"Mtv Style","text":"<p>MTV-style layouts with customizable fade effects</p> Template Description <code>ws-mtv-cover-nofade.htm</code> MTV Style with Cover - No Fade <code>ws-mtv-cover-fade.htm</code> MTV Style with Cover - Fade Effects <code>ws-mtv-nofade.htm</code> MTV Style Text Only - No Fade <code>ws-mtv-fade.htm</code> MTV Style Text Only - Fade Effects"},{"location":"reference/templates/#artist-templates","title":"Artist Templates","text":""},{"location":"reference/templates/#artist-images","title":"Artist Images","text":"<p>Artist artwork displays (logo, banner, thumbnail, fanart)</p> Template Description <code>ws-artistlogo-nofade.htm</code> Artist Logo Display <code>ws-artistbanner-nofade.htm</code> Artist Banner Display <code>ws-artistthumb-nofade.htm</code> Artist Thumbnail Display <code>ws-justthecover.htm</code> Just The Cover Image"},{"location":"reference/templates/#artist-fanart","title":"Artist Fanart","text":"<p>Artist fanart with special streaming endpoint</p> Template Description <code>ws-artistfanart-nofade.htm</code> Artist Fanart Display <code>ws-artistfanart-conditional.htm</code> Conditional Artist Fanart (audio only, transparent video)"},{"location":"reference/templates/#anime-templates","title":"Anime Templates","text":""},{"location":"reference/templates/#anime-effects","title":"Anime Effects","text":"<p>Templates using anime.js animations</p> Template Description <code>ws-anime-elastic.htm</code> Elastic scale animation with anime.js <code>ws-anime-bounce.htm</code> Bouncy animation with anime.js <code>ws-anime-stagger.htm</code> Advanced staggered animations with anime.js"},{"location":"reference/templates/#basic-templates","title":"Basic Templates","text":""},{"location":"reference/templates/#basic-text","title":"Basic Text","text":"<p>Simple text displays in various colors</p> Template Description <code>ws-basicblack.htm</code> Basic Black Text <code>ws-basicblue.htm</code> Basic Blue Text <code>ws-basicwhite.htm</code> Basic White Text <code>ws-basicyellow.htm</code> Basic Yellow Text"},{"location":"reference/templates/#generic-dj-tryhard","title":"Generic Dj Tryhard","text":"<p>The same boring titlecard every DJ uses because they lack creativity</p> Template Description <code>ws-unoriginal-dj-clone.htm</code> Congrats, you look exactly like every other DJ now <code>ws-basic-bro-vibes.htm</code> For when you want to blend into the crowd of indistinguishable DJs <code>ws-cookie-cutter-dj.htm</code> Mass-produced DJ aesthetic - now with 100% less personality! (Blue Edition)"},{"location":"reference/templates/#complex-templates","title":"Complex Templates","text":""},{"location":"reference/templates/#complex-websocket","title":"Complex Websocket","text":"<p>Complex WebSocket templates with multiple endpoints</p> Template Description <code>ws-coverslideshow.htm</code> Cover slideshow using multiple WebSocket endpoints"},{"location":"reference/templates/#special-templates","title":"Special Templates","text":""},{"location":"reference/templates/#gifwords","title":"Gifwords","text":"<p>GIF word displays with fade effects</p> Template Description <code>ws-gifwords-fade.htm</code> GIF Words with Fade"},{"location":"reference/templates/#special-layouts","title":"Special Layouts","text":"<p>Special purpose templates</p> Template Description <code>ws-requests.htm</code> Track Request Display"},{"location":"reference/templates/#effects-templates","title":"Effects Templates","text":""},{"location":"reference/templates/#explode-effects","title":"Explode Effects","text":"<p>Text displays with explode effects using anime.js</p> Template Description <code>ws-explodeblack.htm</code> Black Text with Explode Effect <code>ws-explodewhite.htm</code> White Text with Explode Effect"},{"location":"reference/templates/#spin-effects","title":"Spin Effects","text":"<p>Text displays with spin effects using anime.js</p> Template Description <code>ws-spinblack.htm</code> Black Text with Spin Effect <code>ws-spinwhite.htm</code> White Text with Spin Effect"},{"location":"reference/templates/#slide-effects","title":"Slide Effects","text":"<p>Text displays with slide down/up effects</p> Template Description <code>ws-slidedownup-black.htm</code> Black Text with Slide Effects <code>ws-slidedownup-white.htm</code> White Text with Slide Effects"},{"location":"reference/templates/#typing-effects","title":"Typing Effects","text":"<p>Typewriter effects with realistic mistakes using Typed.js</p> Template Description <code>ws-typing-terminal.htm</code> Terminal-style typing effect with mistakes <code>ws-typing-matrix.htm</code> Matrix-style green typing effect <code>ws-typing-amber.htm</code> Amber terminal typing effect <code>ws-typing-classic.htm</code> Classic typewriter effect on paper"},{"location":"reference/templates/#static-templates","title":"Static Templates","text":""},{"location":"reference/templates/#basic-websocket","title":"Basic Websocket","text":"<p>Basic WebSocket templates with real-time updates</p> Template Description <code>ws-basic-web.htm</code> Basic WebSocket Display <code>ws-cover-title-artist.htm</code> Cover, Title, Artist WebSocket Display"},{"location":"reference/templatevariables/","title":"Templates","text":"<p>What's Now Playing handles almost all output via the Jinja2 templating system which includes an extremely powerful language that enables you a full range of customizing the output.</p> <p>In general, What's Now Playing provides a generic set of variables for use in any template. These values are filled based on a few factors:</p> <ul> <li>the input source providing its data</li> <li>media tag quality</li> <li>What's Now Playing's file type and tag compatibility</li> </ul> <p>Some examples:</p> <ul> <li>An MP3 file missing ID3 tags may only have   <code>title</code> available.</li> <li>Serato in Remote mode, title, and optionally artist are available.</li> <li>MP4/M4V files have minimal support currently in What's Now   Playing, so will not have the label</li> <li>VOBS files do not support tagging and will only have information   available from the DJ software, if possible</li> </ul> <p>Some outputs (e.g., TwitchBot) may provide additional variables that offer other, context-sensitive features. See their pages for more information.</p>"},{"location":"reference/templatevariables/#reminder","title":"Reminder","text":"<p>In order to perform these look ups, certain data is required to be tagged in the media to make the results remotely accurate. More data == more better results. Therefore, media with ISRC tags will cause MusicBrainz lookups if that service is enabled to fill in any missing data.</p>"},{"location":"reference/templatevariables/#supported-variables","title":"Supported Variables","text":"Variable Description album Album track comes from albumartist Artist listed on the album artist Artist for the song artistlongbio Full biography of the artist (from \"Artist Extras\") artistshortbio First paragraph of the long bio (from \"Artist Extras\") artistwebsites List of URLs for the artist bitrate Bitrate the file was encoded at bpm Beats per minute of the song comments Comments from either the DJ software or the song file, whichever is discovered first composer Composer of the song coverurl Relative location to fetch the cover. Note that this will only work when the webserver is active. date Date (either release date or date of the media) deck deck # this track is playing on disc Disc number discsubtitle disc subtitle (if there is one) disc_total Total number of discs in album duration Total expected track time in seconds duration_hhmmss Same as duration but in <code>HH:MM:SS</code> format (so 1 minute 30 seconds becomes 01:30) filename Local filename of the media genre Genre of the song has_video True if the file contains video content, False for audio-only files hostip IP address of the machine running What's Now Playing hostfqdn Fully qualified hostname of the machine running What's Now Playing hostname Short hostname of the machine running What's Now Playing httpport Port number that is running the web server twitchchannel Twitch channel name (if configured) kickchannel Kick channel name (if configured) discordguild Discord guild/server name (if bot is connected) isrc List of International Standard Recording Code key Key of the song label Label of the media. lang Language used by the media musicbrainzalbumid MusicBrainz Album Id musicbrainzartistid List of MusicBrainz Artist Ids musicbrainzrecordingid MusicBrainz Recording Id now() Current time in HH:MM:SS format (function call) previoustrack See below for more details. timestamp() Current date and time in YYYY-MM-DD HH:MM:SS format (function call) title Title of the media today() Current date in YYYY-MM-DD format (function call) track Track number on the disc track_total Total tracks on the disc"},{"location":"reference/templatevariables/#implementation-notes","title":"Implementation Notes","text":""},{"location":"reference/templatevariables/#arrays","title":"Arrays","text":"<p>Some fields that might be multi-valued (e.g., genre) will be merged into one. If they are not merged, the description will specifically say it is a list.</p>"},{"location":"reference/templatevariables/#undefined","title":"Undefined","text":"<p>When rendering templates, What's Now Playing will set any undefined variables to the empty string. Instead of having to render a template as:</p> <p><code>jinja{% if variable is defined and variable is not none and variable|length %}</code></p> <p>This can be short-cut to:</p> <p><code>jinja{% if variable %}</code></p> <p>since the variable will always be defined. This also means that templates that incorrectly use the wrong variable name will render, just with an empty string in place of the expected text.</p>"},{"location":"reference/templatevariables/#previous-track-details","title":"Previous Track Details","text":"<p>The <code>previoustrack</code> variable is a list of played tracks in <code>reverse</code> order, starting with current track at zero. It currently holds just the artist and the title of the track. Some examples:</p> <pre><code>{{ previoustrack[0].artist }}\n</code></pre> <p>will show the current artist playing.</p> <pre><code>{{ previoustrack[1].artist }}\n</code></pre> <p>will show the previous-to-current artist.</p> <p>To get the title of the track played 2 tracks ago:</p> <pre><code>{{ previoustrack[2].title }}\n</code></pre> <p>For a more complex example, see the <code>twitchbot_previoustrack.txt</code> file in the templates directory.</p>"},{"location":"reference/templatevariables/#time-functions","title":"Time Functions","text":"<p>What's Now Playing provides several time-related functions that can be called in templates to add timestamps. These are particularly useful for setlists and logging when tracks were played:</p> Function Example Output Description <code>now()</code> <code>14:32:15</code> Current time when the template is rendered <code>today()</code> <code>2023-12-15</code> Current date when the template is rendered <code>timestamp()</code> <code>2023-12-15 14:32:15</code> Current date and time when the template is rendered"},{"location":"reference/templatevariables/#examples","title":"Examples","text":"<p>To create a setlist with timestamps showing when each track started:</p> <pre><code>{{ now() }} - {{ artist }} - {{ title }}\n</code></pre> <p>To include both date and time:</p> <pre><code>{{ timestamp() }} | {{ artist }} - {{ title }}\n</code></pre> <p>To add the current date to each track entry:</p> <pre><code>{{ today() }}: {{ artist }} - {{ title }}\n</code></pre> <p>These functions are evaluated each time a template is rendered, so each track will get the timestamp from when it started playing. Note that templates are rendered once per track, so any content in the template will be repeated for every track.</p>"},{"location":"settings/","title":"General","text":"<ul> <li> <p>Notification Indicator - Selecting this option will show a system   notification when new track info is detected.</p> </li> <li> <p>This is useful for verifying that the app is polling and     retrieving data.</p> </li> <li>The notification displays the track information after detection.</li> <li> <p>Some software (such as Serato) will not show notifications in     full-screen mode. You may need to take it out of full screen node     to see the notification.</p> </li> <li> <p>Write Delay - The amount of time, in seconds, to delay writing the   new track info once it's retrieved. If not populated, it will default   to 0 seconds.</p> </li> <li> <p>A setting of zero will update the track info on-screen immediately    as a new track is detected. This time value may be too soon for    some DJ's mixing style as well as some features. Increasing the    write delay allows for much more tuning.</p> </li> <li> <p>Recognition Replacement - By default, if a Music Recognition   service is enabled, it will only supplement any missing information.   These options forcibly replace title and artist from any enabled   recognition services.</p> </li> <li> <p>Logging Level - By default, What's Now Playing will write   debug logs into your Documents/WhatsNowPlaying/logs directory. This option   lets you control the level of logging.</p> </li> <li> <p>Configuration Backup - Export and import your complete   configuration to make version upgrades easier.</p> </li> <li> <p>Export Configuration - Saves all your settings to a JSON file.    This includes API keys, passwords, file paths, and all plugin    configurations. \u26a0\ufe0f Security Warning: The exported file    contains sensitive data including API keys and passwords. Store it    securely and do not share it.</p> </li> <li>Import Configuration - Restores settings from a previously    exported JSON file. This will overwrite your current settings.    Cache and runtime settings are automatically excluded and rebuilt.</li> <li>Use Cases:<ul> <li>Back up settings before major version upgrades</li> <li>Transfer settings between installations</li> <li>Restore settings after a fresh install</li> <li>Recover from configuration corruption</li> </ul> </li> </ul> <p>At the bottom of every page will be the \"Reset\", \"Cancel\", and \"Save\" buttons:</p> <ul> <li> <p>Reset - Change all settings back to default.</p> </li> <li> <p>Cancel - Close the window without saving.</p> </li> <li> <p>Save - Save the settings</p> </li> </ul>"},{"location":"settings/destroy/","title":"Destroy Configuration","text":"<p>\u26a0\ufe0f DANGER: This is a destructive operation that cannot be undone.</p> <p>Note: Destroy Configuration is located under System in the settings menu.</p>"},{"location":"settings/destroy/#what-this-does","title":"What This Does","text":"<p>The Destroy Configuration feature completely removes your existing What's Now Playing configuration and exits the program. This is a nuclear option for when your configuration becomes hopelessly broken and you want to start completely fresh.</p>"},{"location":"settings/destroy/#important-notes","title":"Important Notes","text":"<ul> <li> <p>All settings will be lost: Input sources, output configurations, API keys, templates, and all other settings</p> </li> <li> <p>Documents folder remains: Your WhatsNowPlaying directory in Documents (containing templates, logs, etc.) will   not be deleted</p> </li> <li> <p>Cannot be undone: There is no way to recover your configuration after using this feature</p> </li> <li> <p>Program exits: The application will close after destroying the configuration</p> </li> </ul>"},{"location":"settings/destroy/#how-to-use","title":"How to Use","text":"<ol> <li>Check the \"Are you sure?\" checkbox</li> <li>Click the \"START OVER\" button</li> <li>The program will immediately destroy the configuration and exit</li> </ol>"},{"location":"settings/destroy/#when-to-use-this","title":"When to Use This","text":"<ul> <li>Configuration files are corrupted and causing crashes</li> <li>Settings are in an inconsistent state that cannot be fixed through normal means</li> <li>You want to completely start over with a clean slate</li> <li>Troubleshooting has failed and a fresh start is needed</li> </ul>"},{"location":"settings/destroy/#alternatives-to-consider","title":"Alternatives to Consider","text":"<p>Before using Destroy Configuration, consider these less destructive options:</p> <ul> <li>Reset specific settings to defaults through their individual panels</li> <li>Export your current configuration before destroying it (if possible)</li> <li>Check the troubleshooting documentation for common configuration issues</li> <li>Manually edit configuration files if you know what you're doing</li> </ul>"},{"location":"settings/destroy/#after-using-destroy","title":"After Using Destroy","text":"<p>After the configuration is destroyed and you restart What's Now Playing:</p> <ol> <li>You'll be prompted to set up your input source again</li> <li>All settings will be at their default values</li> <li>You'll need to reconfigure all output destinations, API keys, and preferences</li> <li>Your templates and other files in Documents/WhatsNowPlaying will still be available</li> </ol>"},{"location":"settings/filter/","title":"Filter","text":"<p>Some DJ Pools add extra identifiers to track titles. What's Now Playing has the ability to remove extra text from the title of a track using two types of filters: Simple phrase-based filters and Complex regex patterns.</p>"},{"location":"settings/filter/#filter-types","title":"Filter Types","text":"<p>What's Now Playing provides two filtering approaches:</p>"},{"location":"settings/filter/#simple-filters","title":"Simple Filters","text":"<p>The Simple tab provides an easy-to-use interface for filtering common unwanted phrases from track titles. These filters work by matching specific phrases in different formats (all case-insensitive):</p> <ul> <li>- phrase: Matches \" - phrase\" at the end of titles</li> <li>(phrase): Matches \" (phrase)\" anywhere in titles</li> <li>[phrase]: Matches \" [phrase]\" anywhere in titles</li> <li>plain: Matches \"phrase\" anywhere in titles</li> </ul>"},{"location":"settings/filter/#default-phrases","title":"Default Phrases","text":"<p>By default, these phrases are enabled for dash/paren/bracket filtering:</p> <ul> <li>Video quality indicators: 1080p, 480p, 4k, 720p, hd, high quality, hq</li> <li>Content descriptors: ce, cs, clean, clean version, dirty, explicit, explicit version</li> <li>Video types: lyric video, lyrics video, music video, official audio, official music video, official trailer, official video</li> <li>Audio processing: remaster, remastered</li> </ul>"},{"location":"settings/filter/#managing-custom-phrases","title":"Managing Custom Phrases","text":"<ul> <li>Add custom phrases: Enter text in the input field and click \"Add\"</li> <li>Remove custom phrases: Select a custom phrase row and click \"Remove\"</li> <li>Configure formats: Use checkboxes to enable/disable different matching formats for each phrase</li> </ul>"},{"location":"settings/filter/#complex-filters","title":"Complex Filters","text":"<p>The Complex tab allows advanced users to create custom Python-style regular expressions for more sophisticated pattern matching.</p>"},{"location":"settings/filter/#adding-complex-rules","title":"Adding Complex Rules","text":"<ol> <li>Click \"Add Entry\" button</li> <li>Click on the new entry in the list</li> <li>Edit to be a regular expression</li> </ol>"},{"location":"settings/filter/#managing-complex-rules","title":"Managing Complex Rules","text":"<ul> <li>Delete entry: Select entry and click \"Delete Entry\"</li> <li>Reorder rules: Drag entries to change application order</li> <li>Add number patterns: Click \"Add Numbers\" to add patterns that   match numbers in parentheses/brackets like \" (123)\" and \" [456]\"</li> </ul>"},{"location":"settings/filter/#reset-to-defaults","title":"Reset to Defaults","text":"<p>Click the \"Reset to Defaults\" button (located at the top right) to:</p> <ul> <li>Reset simple filters to application defaults</li> <li>Remove all custom phrases</li> <li>Clear all complex regex patterns</li> </ul> <p>This provides a clean starting point if filters become misconfigured.</p>"},{"location":"settings/filter/#testing-your-filters","title":"Testing Your Filters","text":"<p>The test section at the bottom works with both simple and complex filters together, showing exactly what will happen to track titles in real usage:</p> <ol> <li>Enter test text in the input field</li> <li>Click \"Test\" button</li> <li>The result shows what the title becomes after applying all active filters (both simple and complex)</li> </ol> <p>This unified testing ensures you see the complete filtering behavior that will be applied to your tracks.</p>"},{"location":"settings/filter/#how-filters-are-applied","title":"How Filters Are Applied","text":"<p>During playback, What's Now Playing applies filters in this order:</p> <ol> <li>Simple phrase filters (plain text matching first, then regex patterns)</li> <li>Complex regex patterns (in the order shown in the Complex tab)</li> </ol> <p>Both types of filters work together to provide comprehensive title cleaning.</p>"},{"location":"settings/quirks/","title":"Quirks","text":"<p>Under some very specialized circumstances, it may be necessary to 'nudge' What's Now Playing to do something particularly special in order to get the desired impact. The options under quirks allow one to do just that. In general, however, users should stick with the defaults for optimal performance.</p> <p></p> <p>Note: Quirks settings are located under System in the settings menu.</p>"},{"location":"settings/quirks/#file-system-notification-method","title":"File System Notification Method","text":"<p>By default, What's Now Playing uses operating system facilities to know when input files have changed. If What's Now Playing is running on a different host than the DJ software and What's Now Playing have been configured to read the DJ software's directory over a network mount (such as SMB) What's Now Playing may not get notified that a file has changed. Selecting the `poll` option will force the application to perform a manual file system check. The drawbacks to this method are that more CPU and disk IO is performed and being on delay to get updates. However, the software will not miss events.</p> <p>NOTE: Changing this value REQUIRES a restart of the What's Now Playing software.</p>"},{"location":"settings/quirks/#song-path-substitution","title":"Song Path Substitution","text":"<p>Like the previous issue, the DJ software's files may reference a file path unlike what What's Now Playing has access to on the machine where it is running. Setting these values will allow you to do a 'search and replace' of any referenced song files.</p> <p>For example:</p> <ul> <li>Starting File Path is set to <code>/Volumes/Music/</code></li> <li>Replacement File Path is set to <code>/Macintosh HD/Music/</code></li> </ul> <p>The DJ software says that it read <code>/Volumes/Music/Blondie/Heart_of_Glass.mp3</code>. What's Now Playing will instead interpret that the filename is actually <code>/Macintosh HD/Music/Blondie/Heart_of_Glass.mp3</code> when reading extra tags, performing recognition, etc.</p> <p>The Slash Handling setting allows you to switch the direction of all slashes in the filenames. This setting is beneficial when substituting filenames from Windows to other operating systems and vice-versa. The slash changes happen before path substitution, so keep that in mind. For example,</p> <ul> <li>Slash Handling: <code>\\ to /</code> is set</li> <li>Starting File Path: <code>Z:/av</code></li> <li>Replacement File Path: <code>/av</code></li> </ul> <p>If the original file was <code>Z:\\av\\Music\\Band\\Cool Song.mp3</code>, the above settings will change that to <code>/av/Music/Band/Cool Song.mp3</code>. Another example:</p> <ul> <li>Slash Handling: <code>/ to \\</code> is set</li> <li>Starting File Path: <code>\\av</code></li> <li>Replacement File Path: <code>Z:\\av</code></li> </ul> <p>will do the reverse, from <code>/av/Music/Band/Cool Song.mp3</code> to <code>Z:\\av\\Music\\Band\\Cool Song.mp3</code></p> <p>NOTE: This quirk is not supported with MPRIS2.</p>"},{"location":"settings/trackskip/","title":"Track Skip","text":"<p>Track Skip allows you to automatically skip tracks based on metadata fields. If a track's metadata contains specific text in the Comment or Genre fields, that track will be skipped and not displayed as \"now playing.\"</p> <p></p> <p>Note: Track Skip settings are located under System in the settings menu.</p>"},{"location":"settings/trackskip/#how-it-works","title":"How It Works","text":"<p>Track Skip checks the Comment and Genre metadata fields of each track. If either field contains the text you specify, the track will be skipped entirely.</p> <p>For example:</p> <ul> <li>A track has Genre set to <code>SKIP, Commercial, 1980s</code></li> <li>You set the Genre field to <code>SKIP</code></li> <li>When that track is played, it will be skipped and not displayed</li> </ul>"},{"location":"settings/trackskip/#built-in-skip-wnpignore","title":"Built-in Skip: WNPIGNORE","text":"<p>In addition to the configurable Comment and Genre filters, What's Now Playing has a built-in skip feature. If a track's Comment field contains the text <code>WNPIGNORE</code> (case-sensitive), the track will be automatically skipped without any configuration needed.</p> <p>This provides a quick way to mark individual tracks for skipping directly in your DJ software's comment field, without needing to configure filters in What's Now Playing.</p> <p>Example:</p> <ul> <li>Set a track's Comment field to: <code>WNPIGNORE - Test track</code></li> <li>The track will be automatically skipped when played</li> </ul>"},{"location":"settings/trackskip/#settings","title":"Settings","text":""},{"location":"settings/trackskip/#comment-field-filter","title":"Comment Field Filter","text":"<p>Enter text that, if found in a track's Comment field, will cause the track to be skipped.</p>"},{"location":"settings/trackskip/#genre-field-filter","title":"Genre Field Filter","text":"<p>Enter text that, if found in a track's Genre field, will cause the track to be skipped.</p>"},{"location":"settings/trackskip/#usage-examples","title":"Usage Examples","text":""},{"location":"settings/trackskip/#skip-commercials","title":"Skip Commercials","text":"<ul> <li>Set Genre field to: <code>Commercial</code></li> <li>Tag advertising tracks with Genre: <code>Commercial, Jingle</code></li> <li>These tracks will be automatically skipped</li> </ul>"},{"location":"settings/trackskip/#skip-sound-effects","title":"Skip Sound Effects","text":"<ul> <li>Set Comment field to: <code>SFX</code></li> <li>Tag sound effect files with Comment: <code>SFX - Airhorn</code></li> <li>These files will be automatically skipped</li> </ul>"},{"location":"settings/trackskip/#skip-specific-content","title":"Skip Specific Content","text":"<ul> <li>Set Genre field to: <code>SKIP</code></li> <li>Tag any unwanted tracks with Genre: <code>SKIP</code></li> <li>Provides a simple way to mark tracks for skipping</li> </ul>"},{"location":"settings/trackskip/#best-practices","title":"Best Practices","text":"<ul> <li>Use consistent tagging in your DJ software for tracks you want to skip</li> <li>Test your skip rules to ensure they work as expected</li> <li>Consider using specific tags like \"COMMERCIAL\" or \"SFX\" rather than generic words</li> <li>Remember that the text match is case-sensitive and looks for the specified text anywhere within the field</li> </ul>"}]}